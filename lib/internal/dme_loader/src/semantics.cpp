#include "semantics.h"

using namespace warpgate;

std::string warpgate::semantic_name(Semantic semantic) {
    switch(semantic) {
        case Semantic::AMicrosoft: return "AMicrosoft";
        case Semantic::AOEnable: return "AOEnable";
        case Semantic::AOSharpness: return "AOSharpness";
        case Semantic::AOSize: return "AOSize";
        case Semantic::AOStrength: return "AOStrength";
        case Semantic::AScroll: return "AScroll";
        case Semantic::AScroll1: return "AScroll1";
        case Semantic::AScroll1_U: return "AScroll1_U";
        case Semantic::AScroll1_V: return "AScroll1_V";
        case Semantic::AScroll2: return "AScroll2";
        case Semantic::AScroll2_U: return "AScroll2_U";
        case Semantic::AScroll2_V: return "AScroll2_V";
        case Semantic::AScroll3: return "AScroll3";
        case Semantic::AScroll3_U: return "AScroll3_U";
        case Semantic::AScroll3_V: return "AScroll3_V";
        case Semantic::Accumulate: return "Accumulate";
        case Semantic::Acommon_fxh: return "Acommon_fxh";
        case Semantic::Add: return "Add";
        case Semantic::AdditiveGlow: return "AdditiveGlow";
        case Semantic::AdditiveGlow_fx_globals: return "AdditiveGlow_fx_globals";
        case Semantic::Ag_DetailBumpiness: return "Ag_DetailBumpiness";
        case Semantic::Ag_OverlayScale: return "Ag_OverlayScale";
        case Semantic::Ag_PatternOpacity: return "Ag_PatternOpacity";
        case Semantic::Ag_TransitionOffset: return "Ag_TransitionOffset";
        case Semantic::Ag_backfaceMinOpacity: return "Ag_backfaceMinOpacity";
        case Semantic::Ag_opacity: return "Ag_opacity";
        case Semantic::Ag_pow: return "Ag_pow";
        case Semantic::Ag_refraction: return "Ag_refraction";
        case Semantic::Ag_swayBoil: return "Ag_swayBoil";
        case Semantic::Ag_swayPrevBoil: return "Ag_swayPrevBoil";
        case Semantic::Ag_texScrollU1: return "Ag_texScrollU1";
        case Semantic::Alpha: return "Alpha";
        case Semantic::AlphaBlend: return "AlphaBlend";
        case Semantic::AlphaBlendModelPosTech: return "AlphaBlendModelPosTech";
        case Semantic::AlphaBlendTech: return "AlphaBlendTech";
        case Semantic::AlphaBlendToggle: return "AlphaBlendToggle";
        case Semantic::AlphaChannel: return "AlphaChannel";
        case Semantic::AlphaContrast: return "AlphaContrast";
        case Semantic::AlphaOnSolidModelPosTech: return "AlphaOnSolidModelPosTech";
        case Semantic::AlphaOnSolidTech: return "AlphaOnSolidTech";
        case Semantic::Ambience: return "Ambience";
        case Semantic::Ambient: return "Ambient";
        case Semantic::AntiBloom: return "AntiBloom";
        case Semantic::ApplyToSky: return "ApplyToSky";
        case Semantic::Audit: return "Audit";
        case Semantic::AuditColor: return "AuditColor";
        case Semantic::AurLookup: return "AurLookup";
        case Semantic::Auraxium: return "Auraxium";
        case Semantic::AuraxiumCloak: return "AuraxiumCloak";
        case Semantic::AuraxiumCloak_RigidSkinned_0Overlay: return "AuraxiumCloak_RigidSkinned_0Overlay";
        case Semantic::AuraxiumCloak_RigidSkinned_1Overlay: return "AuraxiumCloak_RigidSkinned_1Overlay";
        case Semantic::AuraxiumCloak_RigidSkinned_2Overlay: return "AuraxiumCloak_RigidSkinned_2Overlay";
        case Semantic::AuraxiumCloak_RigidSkinned_3Overlay: return "AuraxiumCloak_RigidSkinned_3Overlay";
        case Semantic::AuraxiumCloak_RigidSkinned_4Overlay: return "AuraxiumCloak_RigidSkinned_4Overlay";
        case Semantic::AuraxiumCloak_Rigid_0Overlay: return "AuraxiumCloak_Rigid_0Overlay";
        case Semantic::AuraxiumCloak_Rigid_1Overlay: return "AuraxiumCloak_Rigid_1Overlay";
        case Semantic::AuraxiumCloak_Rigid_2Overlay: return "AuraxiumCloak_Rigid_2Overlay";
        case Semantic::AuraxiumCloak_Rigid_3Overlay: return "AuraxiumCloak_Rigid_3Overlay";
        case Semantic::AuraxiumCloak_Rigid_4Overlay: return "AuraxiumCloak_Rigid_4Overlay";
        case Semantic::AuraxiumCloak_Skinned_0Overlay: return "AuraxiumCloak_Skinned_0Overlay";
        case Semantic::AuraxiumCloak_Skinned_1Overlay: return "AuraxiumCloak_Skinned_1Overlay";
        case Semantic::AuraxiumCloak_Skinned_2Overlay: return "AuraxiumCloak_Skinned_2Overlay";
        case Semantic::AuraxiumCloak_Skinned_3Overlay: return "AuraxiumCloak_Skinned_3Overlay";
        case Semantic::AuraxiumCloak_Skinned_4Overlay: return "AuraxiumCloak_Skinned_4Overlay";
        case Semantic::AuraxiumDeRes: return "AuraxiumDeRes";
        case Semantic::AuraxiumDeRes_RigidSkinned_0Overlay: return "AuraxiumDeRes_RigidSkinned_0Overlay";
        case Semantic::AuraxiumDeRes_RigidSkinned_1Overlay: return "AuraxiumDeRes_RigidSkinned_1Overlay";
        case Semantic::AuraxiumDeRes_RigidSkinned_2Overlay: return "AuraxiumDeRes_RigidSkinned_2Overlay";
        case Semantic::AuraxiumDeRes_RigidSkinned_3Overlay: return "AuraxiumDeRes_RigidSkinned_3Overlay";
        case Semantic::AuraxiumDeRes_RigidSkinned_4Overlay: return "AuraxiumDeRes_RigidSkinned_4Overlay";
        case Semantic::AuraxiumDeRes_Rigid_0Overlay: return "AuraxiumDeRes_Rigid_0Overlay";
        case Semantic::AuraxiumDeRes_Rigid_1Overlay: return "AuraxiumDeRes_Rigid_1Overlay";
        case Semantic::AuraxiumDeRes_Rigid_2Overlay: return "AuraxiumDeRes_Rigid_2Overlay";
        case Semantic::AuraxiumDeRes_Rigid_3Overlay: return "AuraxiumDeRes_Rigid_3Overlay";
        case Semantic::AuraxiumDeRes_Rigid_4Overlay: return "AuraxiumDeRes_Rigid_4Overlay";
        case Semantic::AuraxiumDeRes_Skinned_0Overlay: return "AuraxiumDeRes_Skinned_0Overlay";
        case Semantic::AuraxiumDeRes_Skinned_1Overlay: return "AuraxiumDeRes_Skinned_1Overlay";
        case Semantic::AuraxiumDeRes_Skinned_2Overlay: return "AuraxiumDeRes_Skinned_2Overlay";
        case Semantic::AuraxiumDeRes_Skinned_3Overlay: return "AuraxiumDeRes_Skinned_3Overlay";
        case Semantic::AuraxiumDeRes_Skinned_4Overlay: return "AuraxiumDeRes_Skinned_4Overlay";
        case Semantic::AuraxiumOpaque: return "AuraxiumOpaque";
        case Semantic::AuraxiumOpaque_RigidSkinned_0Overlay: return "AuraxiumOpaque_RigidSkinned_0Overlay";
        case Semantic::AuraxiumOpaque_RigidSkinned_1Overlay: return "AuraxiumOpaque_RigidSkinned_1Overlay";
        case Semantic::AuraxiumOpaque_RigidSkinned_2Overlay: return "AuraxiumOpaque_RigidSkinned_2Overlay";
        case Semantic::AuraxiumOpaque_RigidSkinned_3Overlay: return "AuraxiumOpaque_RigidSkinned_3Overlay";
        case Semantic::AuraxiumOpaque_RigidSkinned_4Overlay: return "AuraxiumOpaque_RigidSkinned_4Overlay";
        case Semantic::AuraxiumOpaque_Rigid_0Overlay: return "AuraxiumOpaque_Rigid_0Overlay";
        case Semantic::AuraxiumOpaque_Rigid_1Overlay: return "AuraxiumOpaque_Rigid_1Overlay";
        case Semantic::AuraxiumOpaque_Rigid_2Overlay: return "AuraxiumOpaque_Rigid_2Overlay";
        case Semantic::AuraxiumOpaque_Rigid_3Overlay: return "AuraxiumOpaque_Rigid_3Overlay";
        case Semantic::AuraxiumOpaque_Rigid_4Overlay: return "AuraxiumOpaque_Rigid_4Overlay";
        case Semantic::AuraxiumOpaque_Skinned_0Overlay: return "AuraxiumOpaque_Skinned_0Overlay";
        case Semantic::AuraxiumOpaque_Skinned_1Overlay: return "AuraxiumOpaque_Skinned_1Overlay";
        case Semantic::AuraxiumOpaque_Skinned_2Overlay: return "AuraxiumOpaque_Skinned_2Overlay";
        case Semantic::AuraxiumOpaque_Skinned_3Overlay: return "AuraxiumOpaque_Skinned_3Overlay";
        case Semantic::AuraxiumOpaque_Skinned_4Overlay: return "AuraxiumOpaque_Skinned_4Overlay";
        case Semantic::AuraxiumRigidCloak: return "AuraxiumRigidCloak";
        case Semantic::AuraxiumRigidDeRes: return "AuraxiumRigidDeRes";
        case Semantic::AuraxiumRigidOpaque: return "AuraxiumRigidOpaque";
        case Semantic::Auraxium_fx_globals: return "Auraxium_fx_globals";
        case Semantic::AutoTileFreq: return "AutoTileFreq";
        case Semantic::B: return "B";
        case Semantic::BFaceMaxOpacity: return "BFaceMaxOpacity";
        case Semantic::BFaceMinOpacity: return "BFaceMinOpacity";
        case Semantic::BFaceRefrac: return "BFaceRefrac";
        case Semantic::BFaceRfraDisFactr: return "BFaceRfraDisFactr";
        case Semantic::BG: return "BG";
        case Semantic::BINORMAL: return "BINORMAL";
        case Semantic::BLENDINDICES: return "BLENDINDICES";
        case Semantic::BLENDWEIGHT: return "BLENDWEIGHT";
        case Semantic::BRDF: return "BRDF";
        case Semantic::BRDFLookup: return "BRDFLookup";
        case Semantic::BRDFlookup: return "BRDFlookup";
        case Semantic::BX0f7: return "BX0f7";
        case Semantic::BackFaceFadeDis: return "BackFaceFadeDis";
        case Semantic::BackGround: return "BackGround";
        case Semantic::BackGroundOpacity: return "BackGroundOpacity";
        case Semantic::BackfaceMaxOpacity: return "BackfaceMaxOpacity";
        case Semantic::BackfaceMinOpacity: return "BackfaceMinOpacity";
        case Semantic::BackfaceRefraction: return "BackfaceRefraction";
        case Semantic::BackfaceRefractionDistanceFactor: return "BackfaceRefractionDistanceFactor";
        case Semantic::BackfaceTingIntensityFactor: return "BackfaceTingIntensityFactor";
        case Semantic::Backfaces: return "Backfaces";
        case Semantic::Background: return "Background";
        case Semantic::BackgroundAlpha: return "BackgroundAlpha";
        case Semantic::BackgroundBoost: return "BackgroundBoost";
        case Semantic::BackgroundColor: return "BackgroundColor";
        case Semantic::Backside: return "Backside";
        case Semantic::BacksideBlur: return "BacksideBlur";
        case Semantic::BacksideDesat: return "BacksideDesat";
        case Semantic::BacksideSpec: return "BacksideSpec";
        case Semantic::Base: return "Base";
        case Semantic::BaseDiffuse: return "BaseDiffuse";
        case Semantic::BaseMaskA: return "BaseMaskA";
        case Semantic::BaseMaskB: return "BaseMaskB";
        case Semantic::Basic: return "Basic";
        case Semantic::Bd: return "Bd";
        case Semantic::BeamParticle_FullResInWater_RenderLevel2: return "BeamParticle_FullResInWater_RenderLevel2";
        case Semantic::BeamParticle_FullRes_RenderLevel0: return "BeamParticle_FullRes_RenderLevel0";
        case Semantic::BeamParticle_FullRes_RenderLevel1: return "BeamParticle_FullRes_RenderLevel1";
        case Semantic::BeamParticle_FullRes_RenderLevel2: return "BeamParticle_FullRes_RenderLevel2";
        case Semantic::BeamParticle_RenderLevel0: return "BeamParticle_RenderLevel0";
        case Semantic::BeamParticle_RenderLevel1: return "BeamParticle_RenderLevel1";
        case Semantic::BeamParticle_RenderLevel2: return "BeamParticle_RenderLevel2";
        case Semantic::Bg_FFColorreduceBloom: return "Bg_FFColorreduceBloom";
        case Semantic::Bg_contrast: return "Bg_contrast";
        case Semantic::Bg_fogTurbDirection: return "Bg_fogTurbDirection";
        case Semantic::Bg_glowBase: return "Bg_glowBase";
        case Semantic::Bg_scanIntensity: return "Bg_scanIntensity";
        case Semantic::Bg_thermalColor: return "Bg_thermalColor";
        case Semantic::Bias: return "Bias";
        case Semantic::BiasNormals: return "BiasNormals";
        case Semantic::Black: return "Black";
        case Semantic::BlackPoint: return "BlackPoint";
        case Semantic::Blend: return "Blend";
        case Semantic::BlendMask: return "BlendMask";
        case Semantic::BlendMode: return "BlendMode";
        case Semantic::BlendStrength4: return "BlendStrength4";
        case Semantic::BlendValue: return "BlendValue";
        case Semantic::Bloom: return "Bloom";
        case Semantic::BloomBlurStageCount: return "BloomBlurStageCount";
        case Semantic::BloomEnabled: return "BloomEnabled";
        case Semantic::BloomIn: return "BloomIn";
        case Semantic::BloomStrength: return "BloomStrength";
        case Semantic::Blue: return "Blue";
        case Semantic::BlueChannel: return "BlueChannel";
        case Semantic::BlueNoise32: return "BlueNoise32";
        case Semantic::BlueNoiseTexture: return "BlueNoiseTexture";
        case Semantic::BlueSource: return "BlueSource";
        case Semantic::Blur1: return "Blur1";
        case Semantic::Blur2: return "Blur2";
        case Semantic::BlurIntensity: return "BlurIntensity";
        case Semantic::BlurQuarterUpscaleSource: return "BlurQuarterUpscaleSource";
        case Semantic::BlurSource: return "BlurSource";
        case Semantic::Blur_DX9_VS1_PS2: return "Blur_DX9_VS1_PS2";
        case Semantic::Boost: return "Boost";
        case Semantic::Boost1: return "Boost1";
        case Semantic::Boost2: return "Boost2";
        case Semantic::Boost3: return "Boost3";
        case Semantic::Brightness: return "Brightness";
        case Semantic::Bump: return "Bump";
        case Semantic::BumpMap: return "BumpMap";
        case Semantic::BumpMap1: return "BumpMap1";
        case Semantic::BumpMap2: return "BumpMap2";
        case Semantic::BumpMap3: return "BumpMap3";
        case Semantic::BumpTexture: return "BumpTexture";
        case Semantic::BumpU1: return "BumpU1";
        case Semantic::BumpU2: return "BumpU2";
        case Semantic::BumpU3: return "BumpU3";
        case Semantic::BumpV1: return "BumpV1";
        case Semantic::BumpV2: return "BumpV2";
        case Semantic::BumpV3: return "BumpV3";
        case Semantic::Bumpiness: return "Bumpiness";
        case Semantic::Bumpiness1: return "Bumpiness1";
        case Semantic::Bumpiness2: return "Bumpiness2";
        case Semantic::Bumpiness3: return "Bumpiness3";
        case Semantic::C: return "C";
        case Semantic::CCP: return "CCP";
        case Semantic::CHANGE: return "CHANGE";
        case Semantic::COLOR: return "COLOR";
        case Semantic::CPY6: return "CPY6";
        case Semantic::CV: return "CV";
        case Semantic::CW4: return "CW4";
        case Semantic::CameraDirectionDelta: return "CameraDirectionDelta";
        case Semantic::CameraShadow: return "CameraShadow";
        case Semantic::CameraShadow_fx_globals: return "CameraShadow_fx_globals";
        case Semantic::CameraShakeDir: return "CameraShakeDir";
        case Semantic::CausticTex: return "CausticTex";
        case Semantic::CausticTex2: return "CausticTex2";
        case Semantic::Caustics: return "Caustics";
        case Semantic::CausticsNM: return "CausticsNM";
        case Semantic::Caustics_N: return "Caustics_N";
        case Semantic::Center: return "Center";
        case Semantic::Cg_maskViewProj: return "Cg_maskViewProj";
        case Semantic::Cg_swayWavefrontSize: return "Cg_swayWavefrontSize";
        case Semantic::Character: return "Character";
        case Semantic::Character_fx_globals: return "Character_fx_globals";
        case Semantic::ClarityOfSky: return "ClarityOfSky";
        case Semantic::Cloak: return "Cloak";
        case Semantic::CloakColor: return "CloakColor";
        case Semantic::CloakColorDistortion: return "CloakColorDistortion";
        case Semantic::CloakColorDistortion_Rigid: return "CloakColorDistortion_Rigid";
        case Semantic::CloakColorDistortion_RigidSkinned: return "CloakColorDistortion_RigidSkinned";
        case Semantic::CloakColorDistortion_Skinned: return "CloakColorDistortion_Skinned";
        case Semantic::CloakColor_Rigid: return "CloakColor_Rigid";
        case Semantic::CloakColor_RigidSkinned: return "CloakColor_RigidSkinned";
        case Semantic::CloakColor_Skinned: return "CloakColor_Skinned";
        case Semantic::CloakDarkLightColor: return "CloakDarkLightColor";
        case Semantic::CloakDarkLightColor_Rigid: return "CloakDarkLightColor_Rigid";
        case Semantic::CloakDarkLightColor_RigidSkinned: return "CloakDarkLightColor_RigidSkinned";
        case Semantic::CloakDarkLightColor_Skinned: return "CloakDarkLightColor_Skinned";
        case Semantic::CloakDepth: return "CloakDepth";
        case Semantic::CloakDepth_Rigid: return "CloakDepth_Rigid";
        case Semantic::CloakDepth_RigidSkinned: return "CloakDepth_RigidSkinned";
        case Semantic::CloakDepth_Skinned: return "CloakDepth_Skinned";
        case Semantic::CloakDistortion: return "CloakDistortion";
        case Semantic::CloakDistortion_Rigid: return "CloakDistortion_Rigid";
        case Semantic::CloakDistortion_RigidSkinned: return "CloakDistortion_RigidSkinned";
        case Semantic::CloakDistortion_Skinned: return "CloakDistortion_Skinned";
        case Semantic::Cloak_RigidSkinned_0Overlay: return "Cloak_RigidSkinned_0Overlay";
        case Semantic::Cloak_RigidSkinned_1Overlay: return "Cloak_RigidSkinned_1Overlay";
        case Semantic::Cloak_RigidSkinned_2Overlay: return "Cloak_RigidSkinned_2Overlay";
        case Semantic::Cloak_RigidSkinned_3Overlay: return "Cloak_RigidSkinned_3Overlay";
        case Semantic::Cloak_RigidSkinned_4Overlay: return "Cloak_RigidSkinned_4Overlay";
        case Semantic::Cloak_Rigid_0Overlay: return "Cloak_Rigid_0Overlay";
        case Semantic::Cloak_Rigid_1Overlay: return "Cloak_Rigid_1Overlay";
        case Semantic::Cloak_Rigid_2Overlay: return "Cloak_Rigid_2Overlay";
        case Semantic::Cloak_Rigid_3Overlay: return "Cloak_Rigid_3Overlay";
        case Semantic::Cloak_Rigid_4Overlay: return "Cloak_Rigid_4Overlay";
        case Semantic::Cloak_Skinned_0Overlay: return "Cloak_Skinned_0Overlay";
        case Semantic::Cloak_Skinned_1Overlay: return "Cloak_Skinned_1Overlay";
        case Semantic::Cloak_Skinned_2Overlay: return "Cloak_Skinned_2Overlay";
        case Semantic::Cloak_Skinned_3Overlay: return "Cloak_Skinned_3Overlay";
        case Semantic::Cloak_Skinned_4Overlay: return "Cloak_Skinned_4Overlay";
        case Semantic::Cloud: return "Cloud";
        case Semantic::CloudAnimationOffsetU: return "CloudAnimationOffsetU";
        case Semantic::CloudAnimationOffsetV: return "CloudAnimationOffsetV";
        case Semantic::CloudAnimationShift: return "CloudAnimationShift";
        case Semantic::CloudAnimationTiling: return "CloudAnimationTiling";
        case Semantic::CloudBlend: return "CloudBlend";
        case Semantic::CloudBlend_fx_globals: return "CloudBlend_fx_globals";
        case Semantic::CloudColor: return "CloudColor";
        case Semantic::CloudDensityTexture: return "CloudDensityTexture";
        case Semantic::CloudLayerWeightings: return "CloudLayerWeightings";
        case Semantic::CloudMap: return "CloudMap";
        case Semantic::CloudShadowAlphaPower: return "CloudShadowAlphaPower";
        case Semantic::CloudShadows: return "CloudShadows";
        case Semantic::CloudShadows_fx_globals: return "CloudShadows_fx_globals";
        case Semantic::CloudSilverLiningBrightness: return "CloudSilverLiningBrightness";
        case Semantic::CloudSilverLiningThickness: return "CloudSilverLiningThickness";
        case Semantic::CloudTexture: return "CloudTexture";
        case Semantic::CloudTextureFrom: return "CloudTextureFrom";
        case Semantic::CloudTextureLerp: return "CloudTextureLerp";
        case Semantic::CloudTextureTo: return "CloudTextureTo";
        case Semantic::Cloud_fx_globals: return "Cloud_fx_globals";
        case Semantic::CloudsEnabled: return "CloudsEnabled";
        case Semantic::CloundBlendingTech: return "CloundBlendingTech";
        case Semantic::Cm: return "Cm";
        case Semantic::ColdLava: return "ColdLava";
        case Semantic::ColdLavaTiling: return "ColdLavaTiling";
        case Semantic::ColdMorph: return "ColdMorph";
        case Semantic::ColdRoll: return "ColdRoll";
        case Semantic::Color: return "Color";
        case Semantic::Color1: return "Color1";
        case Semantic::Color2: return "Color2";
        case Semantic::Color3: return "Color3";
        case Semantic::ColorBlend: return "ColorBlend";
        case Semantic::ColorBlindFilter: return "ColorBlindFilter";
        case Semantic::ColorBlindFilterAmount: return "ColorBlindFilterAmount";
        case Semantic::ColorBlindFilterStrength: return "ColorBlindFilterStrength";
        case Semantic::ColorBuffer: return "ColorBuffer";
        case Semantic::ColorChannel: return "ColorChannel";
        case Semantic::ColorGrading: return "ColorGrading";
        case Semantic::ColorKeyA: return "ColorKeyA";
        case Semantic::ColorKeyB: return "ColorKeyB";
        case Semantic::ColorKeyLerp: return "ColorKeyLerp";
        case Semantic::ColorMap: return "ColorMap";
        case Semantic::ColorMapCube: return "ColorMapCube";
        case Semantic::ColorMapScrollX: return "ColorMapScrollX";
        case Semantic::ColorMapScrollY: return "ColorMapScrollY";
        case Semantic::ColorMapTiling: return "ColorMapTiling";
        case Semantic::ColorNormalXMap: return "ColorNormalXMap";
        case Semantic::ColorNormalXMap1: return "ColorNormalXMap1";
        case Semantic::ColorNormalXMap2: return "ColorNormalXMap2";
        case Semantic::ColorNormalXMap3: return "ColorNormalXMap3";
        case Semantic::ColorNormalXMap4: return "ColorNormalXMap4";
        case Semantic::ColorNormalXMap5: return "ColorNormalXMap5";
        case Semantic::ColorScale: return "ColorScale";
        case Semantic::ColorScrollU: return "ColorScrollU";
        case Semantic::ColorScrollV: return "ColorScrollV";
        case Semantic::ColorTexture: return "ColorTexture";
        case Semantic::ColorTexture2: return "ColorTexture2";
        case Semantic::ColorTexture3: return "ColorTexture3";
        case Semantic::ColorTexture4: return "ColorTexture4";
        case Semantic::ColorWrite: return "ColorWrite";
        case Semantic::ColorWrites: return "ColorWrites";
        case Semantic::ColoredFogEnabled: return "ColoredFogEnabled";
        case Semantic::CombineMasks: return "CombineMasks";
        case Semantic::Compiler: return "Compiler";
        case Semantic::CompositeEnv: return "CompositeEnv";
        case Semantic::CompositeEnv_fx_globals: return "CompositeEnv_fx_globals";
        case Semantic::CompositeParticles: return "CompositeParticles";
        case Semantic::CompositeSky: return "CompositeSky";
        case Semantic::CompositeSky_fx_globals: return "CompositeSky_fx_globals";
        case Semantic::Contrast: return "Contrast";
        case Semantic::ConvertDepth: return "ConvertDepth";
        case Semantic::ConvertDepthMode: return "ConvertDepthMode";
        case Semantic::CoordinateSpace: return "CoordinateSpace";
        case Semantic::Copy: return "Copy";
        case Semantic::CopyInvert: return "CopyInvert";
        case Semantic::CornerFrame: return "CornerFrame";
        case Semantic::Cube: return "Cube";
        case Semantic::CubeFace: return "CubeFace";
        case Semantic::CubeFaceDir: return "CubeFaceDir";
        case Semantic::CubeFaceDown: return "CubeFaceDown";
        case Semantic::CubeFaceRight: return "CubeFaceRight";
        case Semantic::CullMode: return "CullMode";
        case Semantic::CumulusCloudContrast: return "CumulusCloudContrast";
        case Semantic::CumulusCloudHeight: return "CumulusCloudHeight";
        case Semantic::CumulusCloudScrollU: return "CumulusCloudScrollU";
        case Semantic::CumulusCloudScrollV: return "CumulusCloudScrollV";
        case Semantic::CumulusCloudTiling: return "CumulusCloudTiling";
        case Semantic::CylindricalWarp: return "CylindricalWarp";
        case Semantic::CylindricalWarp_fx_globals: return "CylindricalWarp_fx_globals";
        case Semantic::D: return "D";
        case Semantic::D1: return "D1";
        case Semantic::DC: return "DC";
        case Semantic::DERES: return "DERES";
        case Semantic::DISTORTION: return "DISTORTION";
        case Semantic::DON: return "DON";
        case Semantic::DV: return "DV";
        case Semantic::DXBC: return "DXBC";
        case Semantic::DXBC0: return "DXBC0";
        case Semantic::DXBC1: return "DXBC1";
        case Semantic::DXBC2: return "DXBC2";
        case Semantic::DXBC2t: return "DXBC2t";
        case Semantic::DXBC3: return "DXBC3";
        case Semantic::DXBC33: return "DXBC33";
        case Semantic::DXBC3d: return "DXBC3d";
        case Semantic::DXBC3w: return "DXBC3w";
        case Semantic::DXBC4: return "DXBC4";
        case Semantic::DXBC5: return "DXBC5";
        case Semantic::DXBC6: return "DXBC6";
        case Semantic::DXBC6065C7: return "DXBC6065C7";
        case Semantic::DXBC7: return "DXBC7";
        case Semantic::DXBC7x: return "DXBC7x";
        case Semantic::DXBC8: return "DXBC8";
        case Semantic::DXBC8F: return "DXBC8F";
        case Semantic::DXBC9: return "DXBC9";
        case Semantic::DXBC9h: return "DXBC9h";
        case Semantic::DXBC9y: return "DXBC9y";
        case Semantic::DXBCA: return "DXBCA";
        case Semantic::DXBCB: return "DXBCB";
        case Semantic::DXBCBL: return "DXBCBL";
        case Semantic::DXBCBv: return "DXBCBv";
        case Semantic::DXBCC: return "DXBCC";
        case Semantic::DXBCD: return "DXBCD";
        case Semantic::DXBCE: return "DXBCE";
        case Semantic::DXBCEX: return "DXBCEX";
        case Semantic::DXBCF: return "DXBCF";
        case Semantic::DXBCFi: return "DXBCFi";
        case Semantic::DXBCG: return "DXBCG";
        case Semantic::DXBCH: return "DXBCH";
        case Semantic::DXBCI: return "DXBCI";
        case Semantic::DXBCIE: return "DXBCIE";
        case Semantic::DXBCIU: return "DXBCIU";
        case Semantic::DXBCIZ: return "DXBCIZ";
        case Semantic::DXBCJ: return "DXBCJ";
        case Semantic::DXBCJv: return "DXBCJv";
        case Semantic::DXBCK: return "DXBCK";
        case Semantic::DXBCL: return "DXBCL";
        case Semantic::DXBCM: return "DXBCM";
        case Semantic::DXBCMt: return "DXBCMt";
        case Semantic::DXBCN: return "DXBCN";
        case Semantic::DXBCNg: return "DXBCNg";
        case Semantic::DXBCO: return "DXBCO";
        case Semantic::DXBCP: return "DXBCP";
        case Semantic::DXBCPT: return "DXBCPT";
        case Semantic::DXBCQ: return "DXBCQ";
        case Semantic::DXBCQD: return "DXBCQD";
        case Semantic::DXBCQG: return "DXBCQG";
        case Semantic::DXBCQWm: return "DXBCQWm";
        case Semantic::DXBCRn: return "DXBCRn";
        case Semantic::DXBCS: return "DXBCS";
        case Semantic::DXBCT: return "DXBCT";
        case Semantic::DXBCU: return "DXBCU";
        case Semantic::DXBCUu: return "DXBCUu";
        case Semantic::DXBCV: return "DXBCV";
        case Semantic::DXBCVbq3: return "DXBCVbq3";
        case Semantic::DXBCW: return "DXBCW";
        case Semantic::DXBCX_E: return "DXBCX_E";
        case Semantic::DXBCY: return "DXBCY";
        case Semantic::DXBCYoK: return "DXBCYoK";
        case Semantic::DXBCZ: return "DXBCZ";
        case Semantic::DXBCZcO: return "DXBCZcO";
        case Semantic::DXBCZi0a: return "DXBCZi0a";
        case Semantic::DXBCZmJ: return "DXBCZmJ";
        case Semantic::DXBCa: return "DXBCa";
        case Semantic::DXBCa6: return "DXBCa6";
        case Semantic::DXBCav: return "DXBCav";
        case Semantic::DXBCb: return "DXBCb";
        case Semantic::DXBCbBN: return "DXBCbBN";
        case Semantic::DXBCbw_: return "DXBCbw_";
        case Semantic::DXBCc: return "DXBCc";
        case Semantic::DXBCcg: return "DXBCcg";
        case Semantic::DXBCd: return "DXBCd";
        case Semantic::DXBCdd: return "DXBCdd";
        case Semantic::DXBCe: return "DXBCe";
        case Semantic::DXBCe2: return "DXBCe2";
        case Semantic::DXBCf: return "DXBCf";
        case Semantic::DXBCg: return "DXBCg";
        case Semantic::DXBCgdRF: return "DXBCgdRF";
        case Semantic::DXBCh: return "DXBCh";
        case Semantic::DXBCh58: return "DXBCh58";
        case Semantic::DXBChT: return "DXBChT";
        case Semantic::DXBCha: return "DXBCha";
        case Semantic::DXBCha0: return "DXBCha0";
        case Semantic::DXBCho: return "DXBCho";
        case Semantic::DXBCi: return "DXBCi";
        case Semantic::DXBCj: return "DXBCj";
        case Semantic::DXBCk: return "DXBCk";
        case Semantic::DXBCkT: return "DXBCkT";
        case Semantic::DXBCkv: return "DXBCkv";
        case Semantic::DXBCl: return "DXBCl";
        case Semantic::DXBCm: return "DXBCm";
        case Semantic::DXBCmK: return "DXBCmK";
        case Semantic::DXBCn: return "DXBCn";
        case Semantic::DXBCnp: return "DXBCnp";
        case Semantic::DXBCo: return "DXBCo";
        case Semantic::DXBCo0: return "DXBCo0";
        case Semantic::DXBCoJ: return "DXBCoJ";
        case Semantic::DXBCp: return "DXBCp";
        case Semantic::DXBCpl: return "DXBCpl";
        case Semantic::DXBCq: return "DXBCq";
        case Semantic::DXBCr: return "DXBCr";
        case Semantic::DXBCrAn: return "DXBCrAn";
        case Semantic::DXBCs: return "DXBCs";
        case Semantic::DXBCsL: return "DXBCsL";
        case Semantic::DXBCt: return "DXBCt";
        case Semantic::DXBCtCK: return "DXBCtCK";
        case Semantic::DXBCtu: return "DXBCtu";
        case Semantic::DXBCu: return "DXBCu";
        case Semantic::DXBCuO: return "DXBCuO";
        case Semantic::DXBCv: return "DXBCv";
        case Semantic::DXBCw: return "DXBCw";
        case Semantic::DXBCwn: return "DXBCwn";
        case Semantic::DXBCx: return "DXBCx";
        case Semantic::DXBCxTfg: return "DXBCxTfg";
        case Semantic::DXBCxm: return "DXBCxm";
        case Semantic::DXBCy: return "DXBCy";
        case Semantic::DXBCz: return "DXBCz";
        case Semantic::DXBCzd: return "DXBCzd";
        case Semantic::DXT1: return "DXT1";
        case Semantic::DXT3: return "DXT3";
        case Semantic::DXT5: return "DXT5";
        case Semantic::DXT5_NM: return "DXT5_NM";
        case Semantic::DXT5nm: return "DXT5nm";
        case Semantic::DZH: return "DZH";
        case Semantic::DZHn: return "DZHn";
        case Semantic::DZJ: return "DZJ";
        case Semantic::Damage: return "Damage";
        case Semantic::DamageA: return "DamageA";
        case Semantic::DamageB: return "DamageB";
        case Semantic::DamageCube: return "DamageCube";
        case Semantic::DamageVectors: return "DamageVectors";
        case Semantic::DaylightCompensator: return "DaylightCompensator";
        case Semantic::DeRes: return "DeRes";
        case Semantic::DeResDepth: return "DeResDepth";
        case Semantic::DeResDepth_Rigid: return "DeResDepth_Rigid";
        case Semantic::DeResDepth_RigidSkinned: return "DeResDepth_RigidSkinned";
        case Semantic::DeResDepth_Skinned: return "DeResDepth_Skinned";
        case Semantic::DeResGlass: return "DeResGlass";
        case Semantic::DeResGlow: return "DeResGlow";
        case Semantic::DeResGlow_Rigid: return "DeResGlow_Rigid";
        case Semantic::DeResGlow_RigidSkinned: return "DeResGlow_RigidSkinned";
        case Semantic::DeResGlow_Skinned: return "DeResGlow_Skinned";
        case Semantic::DeRes_RigidSkinned_0Overlay: return "DeRes_RigidSkinned_0Overlay";
        case Semantic::DeRes_RigidSkinned_1Overlay: return "DeRes_RigidSkinned_1Overlay";
        case Semantic::DeRes_RigidSkinned_2Overlay: return "DeRes_RigidSkinned_2Overlay";
        case Semantic::DeRes_RigidSkinned_3Overlay: return "DeRes_RigidSkinned_3Overlay";
        case Semantic::DeRes_RigidSkinned_4Overlay: return "DeRes_RigidSkinned_4Overlay";
        case Semantic::DeRes_Rigid_0Overlay: return "DeRes_Rigid_0Overlay";
        case Semantic::DeRes_Rigid_1Overlay: return "DeRes_Rigid_1Overlay";
        case Semantic::DeRes_Rigid_2Overlay: return "DeRes_Rigid_2Overlay";
        case Semantic::DeRes_Rigid_3Overlay: return "DeRes_Rigid_3Overlay";
        case Semantic::DeRes_Rigid_4Overlay: return "DeRes_Rigid_4Overlay";
        case Semantic::DeRes_Skinned_0Overlay: return "DeRes_Skinned_0Overlay";
        case Semantic::DeRes_Skinned_1Overlay: return "DeRes_Skinned_1Overlay";
        case Semantic::DeRes_Skinned_2Overlay: return "DeRes_Skinned_2Overlay";
        case Semantic::DeRes_Skinned_3Overlay: return "DeRes_Skinned_3Overlay";
        case Semantic::DeRes_Skinned_4Overlay: return "DeRes_Skinned_4Overlay";
        case Semantic::DebugCharacterTranslucent: return "DebugCharacterTranslucent";
        case Semantic::DebugCharacterTranslucent_fx_globals: return "DebugCharacterTranslucent_fx_globals";
        case Semantic::DebugObjectTranslucent: return "DebugObjectTranslucent";
        case Semantic::DebugObjectTranslucent_fx_globals: return "DebugObjectTranslucent_fx_globals";
        case Semantic::DebugShader: return "DebugShader";
        case Semantic::DebugTerrainLod: return "DebugTerrainLod";
        case Semantic::DebugText: return "DebugText";
        case Semantic::DebugVehicleTranslucent: return "DebugVehicleTranslucent";
        case Semantic::DebugVehicleTranslucent_fx_globals: return "DebugVehicleTranslucent_fx_globals";
        case Semantic::Decal: return "Decal";
        case Semantic::DecalOpaque: return "DecalOpaque";
        case Semantic::DecalTint: return "DecalTint";
        case Semantic::DecalTintHighlight: return "DecalTintHighlight";
        case Semantic::DecalTintMidtone: return "DecalTintMidtone";
        case Semantic::DecalTintRotation: return "DecalTintRotation";
        case Semantic::DecalTintScale: return "DecalTintScale";
        case Semantic::DecalTintShadow: return "DecalTintShadow";
        case Semantic::DecalTintTranslation: return "DecalTintTranslation";
        case Semantic::DecalUVSet: return "DecalUVSet";
        case Semantic::DefaultTextures: return "DefaultTextures";
        case Semantic::Density: return "Density";
        case Semantic::Depth: return "Depth";
        case Semantic::DepthBias: return "DepthBias";
        case Semantic::DepthOfFieldTransition: return "DepthOfFieldTransition";
        case Semantic::DepthOpacityBias: return "DepthOpacityBias";
        case Semantic::DepthPrePass: return "DepthPrePass";
        case Semantic::DepthSource: return "DepthSource";
        case Semantic::DepthToAlpha: return "DepthToAlpha";
        case Semantic::DepthToAlpha_fx_globals: return "DepthToAlpha_fx_globals";
        case Semantic::Depth_Rigid: return "Depth_Rigid";
        case Semantic::Depth_RigidSkinned: return "Depth_RigidSkinned";
        case Semantic::Depth_Skinned: return "Depth_Skinned";
        case Semantic::Desat: return "Desat";
        case Semantic::DesaturationIntensity: return "DesaturationIntensity";
        case Semantic::Designer: return "Designer";
        case Semantic::DesignerInstanced: return "DesignerInstanced";
        case Semantic::DesignerInstanced_fx_globals: return "DesignerInstanced_fx_globals";
        case Semantic::Designer_fx_globals: return "Designer_fx_globals";
        case Semantic::Detail: return "Detail";
        case Semantic::DetailBump: return "DetailBump";
        case Semantic::DetailBumpiness: return "DetailBumpiness";
        case Semantic::DetailBumpinessB: return "DetailBumpinessB";
        case Semantic::DetailColorMap: return "DetailColorMap";
        case Semantic::DetailFrequency: return "DetailFrequency";
        case Semantic::DetailFrequencyB: return "DetailFrequencyB";
        case Semantic::DetailMask: return "DetailMask";
        case Semantic::DetailMaskMap: return "DetailMaskMap";
        case Semantic::DetailMaskUsageOrder: return "DetailMaskUsageOrder";
        case Semantic::DetailNormalMap: return "DetailNormalMap";
        case Semantic::DetailScale: return "DetailScale";
        case Semantic::DetailScale4: return "DetailScale4";
        case Semantic::DetailScale5th: return "DetailScale5th";
        case Semantic::DetailSelectB: return "DetailSelectB";
        case Semantic::DetailSpecMap: return "DetailSpecMap";
        case Semantic::Dg_highQualityLighting: return "Dg_highQualityLighting";
        case Semantic::Dg_objectID: return "Dg_objectID";
        case Semantic::Dg_skyLightCoeff0: return "Dg_skyLightCoeff0";
        case Semantic::Dg_step: return "Dg_step";
        case Semantic::Dg_worldMatrix: return "Dg_worldMatrix";
        case Semantic::Dielectric: return "Dielectric";
        case Semantic::Diffuse: return "Diffuse";
        case Semantic::DiffuseB: return "DiffuseB";
        case Semantic::DirShadowMapCoeffs: return "DirShadowMapCoeffs";
        case Semantic::Direction: return "Direction";
        case Semantic::DirectionBlurMode: return "DirectionBlurMode";
        case Semantic::DirectionalLightColor: return "DirectionalLightColor";
        case Semantic::DirectionalLightDirection: return "DirectionalLightDirection";
        case Semantic::DirectionalLightShadowInvViewProj: return "DirectionalLightShadowInvViewProj";
        case Semantic::DirectionalLightShadowMap: return "DirectionalLightShadowMap";
        case Semantic::DirectionalLightShadowViewProj: return "DirectionalLightShadowViewProj";
        case Semantic::DirectionalLightViewSpaceDirection: return "DirectionalLightViewSpaceDirection";
        case Semantic::Distortion: return "Distortion";
        case Semantic::DistortionLameScale: return "DistortionLameScale";
        case Semantic::DistortionOcean: return "DistortionOcean";
        case Semantic::DistortionRiver: return "DistortionRiver";
        case Semantic::DistortionScaleU: return "DistortionScaleU";
        case Semantic::DistortionScaleV: return "DistortionScaleV";
        case Semantic::DistortionSpeedU: return "DistortionSpeedU";
        case Semantic::DistortionSpeedV: return "DistortionSpeedV";
        case Semantic::DistortionStream: return "DistortionStream";
        case Semantic::DistortionSwamp: return "DistortionSwamp";
        case Semantic::DistortionTech: return "DistortionTech";
        case Semantic::DistortionTexture: return "DistortionTexture";
        case Semantic::DizzyIntensity: return "DizzyIntensity";
        case Semantic::Dm43World: return "Dm43World";
        case Semantic::Dot: return "Dot";
        case Semantic::Double: return "Double";
        case Semantic::DoubleSided: return "DoubleSided";
        case Semantic::DownsampleDepthMode: return "DownsampleDepthMode";
        case Semantic::Dv: return "Dv";
        case Semantic::Dvt: return "Dvt";
        case Semantic::E: return "E";
        case Semantic::E3Blur: return "E3Blur";
        case Semantic::E3Brightness: return "E3Brightness";
        case Semantic::E3Desat: return "E3Desat";
        case Semantic::ENoise3D: return "ENoise3D";
        case Semantic::EcUG: return "EcUG";
        case Semantic::Ecd: return "Ecd";
        case Semantic::Ect: return "Ect";
        case Semantic::Edge: return "Edge";
        case Semantic::Eg_sunGlowMin: return "Eg_sunGlowMin";
        case Semantic::Elasticity: return "Elasticity";
        case Semantic::Emissive: return "Emissive";
        case Semantic::EmissiveIsTransB: return "EmissiveIsTransB";
        case Semantic::EmissiveWith3Textures: return "EmissiveWith3Textures";
        case Semantic::EmitsHeat: return "EmitsHeat";
        case Semantic::Empire: return "Empire";
        case Semantic::EmpireTintA: return "EmpireTintA";
        case Semantic::EmpireTintB: return "EmpireTintB";
        case Semantic::Enable: return "Enable";
        case Semantic::EnableAlphaBlending: return "EnableAlphaBlending";
        case Semantic::EnableAlphaCutout: return "EnableAlphaCutout";
        case Semantic::EnableColorGrading: return "EnableColorGrading";
        case Semantic::EnableExtraTint: return "EnableExtraTint";
        case Semantic::EnablePlanarMapAB: return "EnablePlanarMapAB";
        case Semantic::EnablePlanarTint: return "EnablePlanarTint";
        case Semantic::EnableSceneDepthAlphaCutout: return "EnableSceneDepthAlphaCutout";
        case Semantic::EnableShadowFastZ: return "EnableShadowFastZ";
        case Semantic::EnableSway: return "EnableSway";
        case Semantic::EnableTileUV0: return "EnableTileUV0";
        case Semantic::End: return "End";
        case Semantic::EnvFilter: return "EnvFilter";
        case Semantic::EnvFilter_fx_globals: return "EnvFilter_fx_globals";
        case Semantic::EvComp: return "EvComp";
        case Semantic::Extra: return "Extra";
        case Semantic::ExtraTint: return "ExtraTint";
        case Semantic::ExtraTintColorA: return "ExtraTintColorA";
        case Semantic::ExtraTintColorB: return "ExtraTintColorB";
        case Semantic::ExtraTintOpacity: return "ExtraTintOpacity";
        case Semantic::ExtraTintScale: return "ExtraTintScale";
        case Semantic::Ey: return "Ey";
        case Semantic::F: return "F";
        case Semantic::F0_: return "F0_";
        case Semantic::F2: return "F2";
        case Semantic::FFA: return "FFA";
        case Semantic::FP: return "FP";
        case Semantic::FW: return "FW";
        case Semantic::FZ: return "FZ";
        case Semantic::Fade: return "Fade";
        case Semantic::FadeModelMaterial: return "FadeModelMaterial";
        case Semantic::FadeOutEnd: return "FadeOutEnd";
        case Semantic::FadeOutStart: return "FadeOutStart";
        case Semantic::FadeOverride: return "FadeOverride";
        case Semantic::FallOff: return "FallOff";
        case Semantic::FilterStep: return "FilterStep";
        case Semantic::FinalTierShadowMap: return "FinalTierShadowMap";
        case Semantic::FlashIntensity: return "FlashIntensity";
        case Semantic::Flora: return "Flora";
        case Semantic::FloraModel: return "FloraModel";
        case Semantic::FloraModel_VS3_PS3: return "FloraModel_VS3_PS3";
        case Semantic::Foam: return "Foam";
        case Semantic::FoamBrightness: return "FoamBrightness";
        case Semantic::FoamColor: return "FoamColor";
        case Semantic::FoamDepthBias: return "FoamDepthBias";
        case Semantic::FoamEnabled: return "FoamEnabled";
        case Semantic::FoamEnd: return "FoamEnd";
        case Semantic::FoamFallOff: return "FoamFallOff";
        case Semantic::FoamNormal: return "FoamNormal";
        case Semantic::FoamScale: return "FoamScale";
        case Semantic::FoamScrollU: return "FoamScrollU";
        case Semantic::FoamScrollU1: return "FoamScrollU1";
        case Semantic::FoamScrollV: return "FoamScrollV";
        case Semantic::FoamScrollV1: return "FoamScrollV1";
        case Semantic::FoamStart: return "FoamStart";
        case Semantic::FoamUVScale: return "FoamUVScale";
        case Semantic::FoamWaterTiling: return "FoamWaterTiling";
        case Semantic::FogAngleColorGradientTexture: return "FogAngleColorGradientTexture";
        case Semantic::FogBlurPass: return "FogBlurPass";
        case Semantic::FogColor: return "FogColor";
        case Semantic::FogDensity: return "FogDensity";
        case Semantic::FogDepthColorGradientTexture: return "FogDepthColorGradientTexture";
        case Semantic::FogDepthHorizontalMult: return "FogDepthHorizontalMult";
        case Semantic::FogEnable: return "FogEnable";
        case Semantic::FogFloor: return "FogFloor";
        case Semantic::FogGradient: return "FogGradient";
        case Semantic::FogHorizontalGradientVector: return "FogHorizontalGradientVector";
        case Semantic::FogMap: return "FogMap";
        case Semantic::FogShadowsEnable: return "FogShadowsEnable";
        case Semantic::FogSkyFar: return "FogSkyFar";
        case Semantic::FogSkyNear: return "FogSkyNear";
        case Semantic::Foliage: return "Foliage";
        case Semantic::FoliageCulling: return "FoliageCulling";
        case Semantic::FoliageGlowScroll: return "FoliageGlowScroll";
        case Semantic::FoliageGlowScrollInstanced: return "FoliageGlowScrollInstanced";
        case Semantic::FoliageGlowScrollInstanced_fx_globals: return "FoliageGlowScrollInstanced_fx_globals";
        case Semantic::FoliageGlowScroll_fx_globals: return "FoliageGlowScroll_fx_globals";
        case Semantic::FoliageInstanced: return "FoliageInstanced";
        case Semantic::FoliageInstanced_fx_globals: return "FoliageInstanced_fx_globals";
        case Semantic::FoliageNoiseTexture: return "FoliageNoiseTexture";
        case Semantic::FoliageSingleSided: return "FoliageSingleSided";
        case Semantic::FoliageSingleSided_fx_globals: return "FoliageSingleSided_fx_globals";
        case Semantic::Foliage_fx_globals: return "Foliage_fx_globals";
        case Semantic::FontTexture: return "FontTexture";
        case Semantic::For: return "For";
        case Semantic::ForceFieldAdditive: return "ForceFieldAdditive";
        case Semantic::ForceFieldBGOpacity: return "ForceFieldBGOpacity";
        case Semantic::ForceFieldColor: return "ForceFieldColor";
        case Semantic::ForceFieldColor_fx_globals: return "ForceFieldColor_fx_globals";
        case Semantic::ForceFieldColor_planar: return "ForceFieldColor_planar";
        case Semantic::ForceFieldColor_planar_fx_globals: return "ForceFieldColor_planar_fx_globals";
        case Semantic::ForceFieldDistortion: return "ForceFieldDistortion";
        case Semantic::ForceFieldDistortion_fx_globals: return "ForceFieldDistortion_fx_globals";
        case Semantic::ForceFieldDistortion_planar: return "ForceFieldDistortion_planar";
        case Semantic::ForceFieldDistortion_planar_fx_globals: return "ForceFieldDistortion_planar_fx_globals";
        case Semantic::ForceFieldOpacity: return "ForceFieldOpacity";
        case Semantic::ForegroundWScale: return "ForegroundWScale";
        case Semantic::ForegroundZBias: return "ForegroundZBias";
        case Semantic::ForegroundZScale: return "ForegroundZScale";
        case Semantic::Forward: return "Forward";
        case Semantic::FrameColor: return "FrameColor";
        case Semantic::FrameCount: return "FrameCount";
        case Semantic::FrameFade: return "FrameFade";
        case Semantic::FrameOn: return "FrameOn";
        case Semantic::FrameRatio: return "FrameRatio";
        case Semantic::FrameWidth: return "FrameWidth";
        case Semantic::Freq: return "Freq";
        case Semantic::Frequency: return "Frequency";
        case Semantic::Fresnel: return "Fresnel";
        case Semantic::FresnelFuncTexture: return "FresnelFuncTexture";
        case Semantic::FtA: return "FtA";
        case Semantic::FtAM: return "FtAM";
        case Semantic::FtAO: return "FtAO";
        case Semantic::FtAn: return "FtAn";
        case Semantic::FtkPN: return "FtkPN";
        case Semantic::FullScreenEffectDOF: return "FullScreenEffectDOF";
        case Semantic::FullScreenEffectThermal: return "FullScreenEffectThermal";
        case Semantic::FullScreenEffectVR: return "FullScreenEffectVR";
        case Semantic::FullScreenEffects: return "FullScreenEffects";
        case Semantic::FullscreenEffectID: return "FullscreenEffectID";
        case Semantic::FullscreenEffectsPass1: return "FullscreenEffectsPass1";
        case Semantic::FullscreenEffectsPass1_fx_globals: return "FullscreenEffectsPass1_fx_globals";
        case Semantic::G: return "G";
        case Semantic::G6: return "G6";
        case Semantic::GA: return "GA";
        case Semantic::GBuffer0: return "GBuffer0";
        case Semantic::GBuffer1: return "GBuffer1";
        case Semantic::GBuffer2: return "GBuffer2";
        case Semantic::GBuffer3: return "GBuffer3";
        case Semantic::GFA: return "GFA";
        case Semantic::GLAZE: return "GLAZE";
        case Semantic::GLOW: return "GLOW";
        case Semantic::GP: return "GP";
        case Semantic::GX: return "GX";
        case Semantic::Ga: return "Ga";
        case Semantic::GaussianIntensity: return "GaussianIntensity";
        case Semantic::GaussianRadius: return "GaussianRadius";
        case Semantic::Glass: return "Glass";
        case Semantic::GlassPass1: return "GlassPass1";
        case Semantic::GlassPass2: return "GlassPass2";
        case Semantic::GlassTech: return "GlassTech";
        case Semantic::Glass_Rigid: return "Glass_Rigid";
        case Semantic::Glass_Rigid_Skinned: return "Glass_Rigid_Skinned";
        case Semantic::Glass_Skinned: return "Glass_Skinned";
        case Semantic::Glaze: return "Glaze";
        case Semantic::GlazeMax: return "GlazeMax";
        case Semantic::GlazeMin: return "GlazeMin";
        case Semantic::GlobalLightLowEnd: return "GlobalLightLowEnd";
        case Semantic::GlobalLightLowEnd_fx_globals: return "GlobalLightLowEnd_fx_globals";
        case Semantic::Globals: return "Globals";
        case Semantic::Glow: return "Glow";
        case Semantic::GlowBase: return "GlowBase";
        case Semantic::GlowBrightness: return "GlowBrightness";
        case Semantic::GlowContrast: return "GlowContrast";
        case Semantic::GlowMax: return "GlowMax";
        case Semantic::GlowMin: return "GlowMin";
        case Semantic::GlowOffset: return "GlowOffset";
        case Semantic::GlowThickness: return "GlowThickness";
        case Semantic::GlowUVScale: return "GlowUVScale";
        case Semantic::GlowWith1TextureInWater_Tinted: return "GlowWith1TextureInWater_Tinted";
        case Semantic::GlowWith1Texture_Tinted: return "GlowWith1Texture_Tinted";
        case Semantic::GlowWith2TexturesInWater_Tinted: return "GlowWith2TexturesInWater_Tinted";
        case Semantic::GlowWith2Textures_Tinted: return "GlowWith2Textures_Tinted";
        case Semantic::GlowWith3Textures_Tinted: return "GlowWith3Textures_Tinted";
        case Semantic::Glow_fx_globals: return "Glow_fx_globals";
        case Semantic::GodRayEndFade: return "GodRayEndFade";
        case Semantic::GodRayStartFade: return "GodRayStartFade";
        case Semantic::GradientRedBlueRed: return "GradientRedBlueRed";
        case Semantic::Green: return "Green";
        case Semantic::GreenChannel: return "GreenChannel";
        case Semantic::GreenSource: return "GreenSource";
        case Semantic::Grey: return "Grey";
        case Semantic::Grid: return "Grid";
        case Semantic::GridPattern: return "GridPattern";
        case Semantic::GroundFog: return "GroundFog";
        case Semantic::GroundFogTechnique: return "GroundFogTechnique";
        case Semantic::GroundFog_fx_globals: return "GroundFog_fx_globals";
        case Semantic::Gux: return "Gux";
        case Semantic::Gv: return "Gv";
        case Semantic::H: return "H";
        case Semantic::H6: return "H6";
        case Semantic::HAg_holoOpacity: return "HAg_holoOpacity";
        case Semantic::HB8: return "HB8";
        case Semantic::HBg_infraRedRange: return "HBg_infraRedRange";
        case Semantic::HEIGHT: return "HEIGHT";
        case Semantic::HLSL: return "HLSL";
        case Semantic::HalfResStreakParticle: return "HalfResStreakParticle";
        case Semantic::Height: return "Height";
        case Semantic::HeightMap: return "HeightMap";
        case Semantic::HideFlatness: return "HideFlatness";
        case Semantic::HighQualityLighting: return "HighQualityLighting";
        case Semantic::Highlight: return "Highlight";
        case Semantic::Holo: return "Holo";
        case Semantic::HoloColor: return "HoloColor";
        case Semantic::HoloContrast: return "HoloContrast";
        case Semantic::HoloEdge: return "HoloEdge";
        case Semantic::HoloHottness: return "HoloHottness";
        case Semantic::HoloNoise: return "HoloNoise";
        case Semantic::HoloNoiseSpeed: return "HoloNoiseSpeed";
        case Semantic::HoloNoiseTiling: return "HoloNoiseTiling";
        case Semantic::HoloOpacity: return "HoloOpacity";
        case Semantic::HoloScanIntensity: return "HoloScanIntensity";
        case Semantic::HoloScanSpacing: return "HoloScanSpacing";
        case Semantic::HoloScanSpeed: return "HoloScanSpeed";
        case Semantic::HoloTexture: return "HoloTexture";
        case Semantic::HoloTilingRateU: return "HoloTilingRateU";
        case Semantic::HoloTilingRateV: return "HoloTilingRateV";
        case Semantic::Hologram: return "Hologram";
        case Semantic::HologramUVSet: return "HologramUVSet";
        case Semantic::Hologram_Rigid: return "Hologram_Rigid";
        case Semantic::Hologram_RigidSkinned: return "Hologram_RigidSkinned";
        case Semantic::Hologram_Skinned: return "Hologram_Skinned";
        case Semantic::HorizonFadeHeight: return "HorizonFadeHeight";
        case Semantic::HorizonGlowColor: return "HorizonGlowColor";
        case Semantic::HorizonWidthHeightLat: return "HorizonWidthHeightLat";
        case Semantic::Horizontal: return "Horizontal";
        case Semantic::HotLava: return "HotLava";
        case Semantic::HotLavaTiling: return "HotLavaTiling";
        case Semantic::HotMorph: return "HotMorph";
        case Semantic::HotRoll: return "HotRoll";
        case Semantic::Hotness: return "Hotness";
        case Semantic::Hottness: return "Hottness";
        case Semantic::Hw3: return "Hw3";
        case Semantic::I: return "I";
        case Semantic::IM: return "IM";
        case Semantic::IMS: return "IMS";
        case Semantic::IRIS: return "IRIS";
        case Semantic::ISGN: return "ISGN";
        case Semantic::ISGND: return "ISGND";
        case Semantic::ISGNH: return "ISGNH";
        case Semantic::ISGNL: return "ISGNL";
        case Semantic::ISGNP: return "ISGNP";
        case Semantic::ISGNd: return "ISGNd";
        case Semantic::ISGNh: return "ISGNh";
        case Semantic::ISGNl: return "ISGNl";
        case Semantic::ISGNt: return "ISGNt";
        case Semantic::Il: return "Il";
        case Semantic::InForeground: return "InForeground";
        case Semantic::InfraRedColor: return "InfraRedColor";
        case Semantic::InfraRedOutlineAlpha: return "InfraRedOutlineAlpha";
        case Semantic::InfraRedOutlineColor: return "InfraRedOutlineColor";
        case Semantic::InfraRedOutlineWidth: return "InfraRedOutlineWidth";
        case Semantic::InfraRedScanLines: return "InfraRedScanLines";
        case Semantic::InfraRedViewRange: return "InfraRedViewRange";
        case Semantic::InnerOuter: return "InnerOuter";
        case Semantic::InputTextures: return "InputTextures";
        case Semantic::InstanceCached: return "InstanceCached";
        case Semantic::Instanced: return "Instanced";
        case Semantic::Intensity: return "Intensity";
        case Semantic::InteriorProbeWeight: return "InteriorProbeWeight";
        case Semantic::InvGamma: return "InvGamma";
        case Semantic::Invisible: return "Invisible";
        case Semantic::IrisClampHigh: return "IrisClampHigh";
        case Semantic::IrisClampLow: return "IrisClampLow";
        case Semantic::IrisVisionOffset: return "IrisVisionOffset";
        case Semantic::IronSight: return "IronSight";
        case Semantic::IsShadowGenPass: return "IsShadowGenPass";
        case Semantic::Iyk3: return "Iyk3";
        case Semantic::J: return "J";
        case Semantic::J2T: return "J2T";
        case Semantic::JCm: return "JCm";
        case Semantic::K: return "K";
        case Semantic::K4: return "K4";
        case Semantic::KRi1pC: return "KRi1pC";
        case Semantic::KS: return "KS";
        case Semantic::KeyLuminance: return "KeyLuminance";
        case Semantic::KtkPN: return "KtkPN";
        case Semantic::L: return "L";
        case Semantic::L8: return "L8";
        case Semantic::LFL: return "LFL";
        case Semantic::LRH: return "LRH";
        case Semantic::LS: return "LS";
        case Semantic::Lava: return "Lava";
        case Semantic::Lava_fx_globals: return "Lava_fx_globals";
        case Semantic::LeftFrame: return "LeftFrame";
        case Semantic::Length: return "Length";
        case Semantic::LensCenterFalloffCutoff: return "LensCenterFalloffCutoff";
        case Semantic::LensDirtBloomSunSkyStrAlpha: return "LensDirtBloomSunSkyStrAlpha";
        case Semantic::LensDirtLayer1SizeStrRanges: return "LensDirtLayer1SizeStrRanges";
        case Semantic::LensDirtLayer2SizeStrRanges: return "LensDirtLayer2SizeStrRanges";
        case Semantic::LensDirtLayerDensities: return "LensDirtLayerDensities";
        case Semantic::LensDirtNoiseScaleStr: return "LensDirtNoiseScaleStr";
        case Semantic::LensEffects: return "LensEffects";
        case Semantic::LensEffectsEnabled: return "LensEffectsEnabled";
        case Semantic::LensEffects_fx_globals: return "LensEffects_fx_globals";
        case Semantic::LensHazeSunSkyStr: return "LensHazeSunSkyStr";
        case Semantic::LensHoodFalloffAngle: return "LensHoodFalloffAngle";
        case Semantic::Lerp: return "Lerp";
        case Semantic::Lerp2: return "Lerp2";
        case Semantic::Lerp3: return "Lerp3";
        case Semantic::Light: return "Light";
        case Semantic::LightColor: return "LightColor";
        case Semantic::LightDirectionRSM: return "LightDirectionRSM";
        case Semantic::LightFalloff: return "LightFalloff";
        case Semantic::LightPositionRSM: return "LightPositionRSM";
        case Semantic::LightScattering: return "LightScattering";
        case Semantic::LightTypeRSM: return "LightTypeRSM";
        case Semantic::LitMode: return "LitMode";
        case Semantic::Lm3XQ: return "Lm3XQ";
        case Semantic::LocalBasis: return "LocalBasis";
        case Semantic::LodIndex: return "LodIndex";
        case Semantic::LodNearDistance: return "LodNearDistance";
        case Semantic::LodScale: return "LodScale";
        case Semantic::LowEnd: return "LowEnd";
        case Semantic::Lq: return "Lq";
        case Semantic::Lt: return "Lt";
        case Semantic::LvMj2: return "LvMj2";
        case Semantic::Ly: return "Ly";
        case Semantic::M: return "M";
        case Semantic::MA: return "MA";
        case Semantic::METALIC: return "METALIC";
        case Semantic::MainSceneCameraPos: return "MainSceneCameraPos";
        case Semantic::Map: return "Map";
        case Semantic::Mask: return "Mask";
        case Semantic::MaskTexture: return "MaskTexture";
        case Semantic::Max: return "Max";
        case Semantic::MaxDayColor: return "MaxDayColor";
        case Semantic::MaxDayFoamC: return "MaxDayFoamC";
        case Semantic::MaxNightColor: return "MaxNightColor";
        case Semantic::MaxNightFoamC: return "MaxNightFoamC";
        case Semantic::MaxValue: return "MaxValue";
        case Semantic::Metalic: return "Metalic";
        case Semantic::Metallic: return "Metallic";
        case Semantic::MetersPerSecond: return "MetersPerSecond";
        case Semantic::Microsoft: return "Microsoft";
        case Semantic::Midtone: return "Midtone";
        case Semantic::Min: return "Min";
        case Semantic::MinDayColor: return "MinDayColor";
        case Semantic::MinDayFoamC: return "MinDayFoamC";
        case Semantic::MinNightColor: return "MinNightColor";
        case Semantic::MinNightFoamC: return "MinNightFoamC";
        case Semantic::MinValue: return "MinValue";
        case Semantic::MiniMapLight: return "MiniMapLight";
        case Semantic::MiniMapLight_fx_globals: return "MiniMapLight_fx_globals";
        case Semantic::MiniMapWater: return "MiniMapWater";
        case Semantic::MiniMapWater_fx_globals: return "MiniMapWater_fx_globals";
        case Semantic::Model: return "Model";
        case Semantic::ModelDoubleSided: return "ModelDoubleSided";
        case Semantic::Model_fx_globals: return "Model_fx_globals";
        case Semantic::MorphTiling: return "MorphTiling";
        case Semantic::MotionBlur: return "MotionBlur";
        case Semantic::MotionBlurPower: return "MotionBlurPower";
        case Semantic::MotionTiles: return "MotionTiles";
        case Semantic::Mt9: return "Mt9";
        case Semantic::MuJD: return "MuJD";
        case Semantic::Mud: return "Mud";
        case Semantic::MultiDataMap: return "MultiDataMap";
        case Semantic::N: return "N";
        case Semantic::NBFK: return "NBFK";
        case Semantic::NM: return "NM";
        case Semantic::NORMAL: return "NORMAL";
        case Semantic::NightLightsMap: return "NightLightsMap";
        case Semantic::NightLightsTexture: return "NightLightsTexture";
        case Semantic::NightVisionIntensity: return "NightVisionIntensity";
        case Semantic::NightVisionNoise: return "NightVisionNoise";
        case Semantic::NightVisionScanLines: return "NightVisionScanLines";
        case Semantic::NightVisionWhitePointAdjustment: return "NightVisionWhitePointAdjustment";
        case Semantic::NoDepth: return "NoDepth";
        case Semantic::NoOp: return "NoOp";
        case Semantic::Noise: return "Noise";
        case Semantic::Noise2D: return "Noise2D";
        case Semantic::Noise3D: return "Noise3D";
        case Semantic::NoiseAlpha: return "NoiseAlpha";
        case Semantic::NoiseSpeed: return "NoiseSpeed";
        case Semantic::NoiseTex: return "NoiseTex";
        case Semantic::NoiseThickness: return "NoiseThickness";
        case Semantic::NoiseTiling: return "NoiseTiling";
        case Semantic::Normal: return "Normal";
        case Semantic::NormalDistortion: return "NormalDistortion";
        case Semantic::NormalMap: return "NormalMap";
        case Semantic::Normals: return "Normals";
        case Semantic::NormalsBuffer: return "NormalsBuffer";
        case Semantic::Nqxa: return "Nqxa";
        case Semantic::O: return "O";
        case Semantic::ONLY: return "ONLY";
        case Semantic::OPAQUE: return "OPAQUE";
        case Semantic::OSG58: return "OSG58";
        case Semantic::OSGN: return "OSGN";
        case Semantic::OSGND: return "OSGND";
        case Semantic::OSGNL: return "OSGNL";
        case Semantic::OSGNP: return "OSGNP";
        case Semantic::OSGNh: return "OSGNh";
        case Semantic::OSGNl: return "OSGNl";
        case Semantic::OSGNt: return "OSGNt";
        case Semantic::OXYg: return "OXYg";
        case Semantic::Object: return "Object";
        case Semantic::ObjectColor: return "ObjectColor";
        case Semantic::ObjectGrid: return "ObjectGrid";
        case Semantic::ObjectGrid_fx_globals: return "ObjectGrid_fx_globals";
        case Semantic::ObjectID: return "ObjectID";
        case Semantic::ObjectShadow: return "ObjectShadow";
        case Semantic::Object_fx_globals: return "Object_fx_globals";
        case Semantic::Ocean: return "Ocean";
        case Semantic::Offset: return "Offset";
        case Semantic::Opacity: return "Opacity";
        case Semantic::Opacity_: return "Opacity_";
        case Semantic::Opaque: return "Opaque";
        case Semantic::OpaqueInstanced: return "OpaqueInstanced";
        case Semantic::Opaque_RigidSkinned_0Overlay: return "Opaque_RigidSkinned_0Overlay";
        case Semantic::Opaque_RigidSkinned_1Overlay: return "Opaque_RigidSkinned_1Overlay";
        case Semantic::Opaque_RigidSkinned_2Overlay: return "Opaque_RigidSkinned_2Overlay";
        case Semantic::Opaque_RigidSkinned_3Overlay: return "Opaque_RigidSkinned_3Overlay";
        case Semantic::Opaque_RigidSkinned_4Overlay: return "Opaque_RigidSkinned_4Overlay";
        case Semantic::Opaque_Rigid_0Overlay: return "Opaque_Rigid_0Overlay";
        case Semantic::Opaque_Rigid_1Overlay: return "Opaque_Rigid_1Overlay";
        case Semantic::Opaque_Rigid_2Overlay: return "Opaque_Rigid_2Overlay";
        case Semantic::Opaque_Rigid_3Overlay: return "Opaque_Rigid_3Overlay";
        case Semantic::Opaque_Rigid_4Overlay: return "Opaque_Rigid_4Overlay";
        case Semantic::Opaque_Skinned_0Overlay: return "Opaque_Skinned_0Overlay";
        case Semantic::Opaque_Skinned_1Overlay: return "Opaque_Skinned_1Overlay";
        case Semantic::Opaque_Skinned_2Overlay: return "Opaque_Skinned_2Overlay";
        case Semantic::Opaque_Skinned_3Overlay: return "Opaque_Skinned_3Overlay";
        case Semantic::Opaque_Skinned_4Overlay: return "Opaque_Skinned_4Overlay";
        case Semantic::Options: return "Options";
        case Semantic::OrU7: return "OrU7";
        case Semantic::Ot: return "Ot";
        case Semantic::Overcast: return "Overcast";
        case Semantic::Overlay: return "Overlay";
        case Semantic::Overlay1: return "Overlay1";
        case Semantic::Overlay1ColorChannel: return "Overlay1ColorChannel";
        case Semantic::Overlay1Tiling: return "Overlay1Tiling";
        case Semantic::Overlay1UVSet: return "Overlay1UVSet";
        case Semantic::Overlay2: return "Overlay2";
        case Semantic::Overlay2ColorChannel: return "Overlay2ColorChannel";
        case Semantic::Overlay2Tiling: return "Overlay2Tiling";
        case Semantic::Overlay2UVSet: return "Overlay2UVSet";
        case Semantic::Overlay3: return "Overlay3";
        case Semantic::Overlay3ColorChannel: return "Overlay3ColorChannel";
        case Semantic::Overlay3Tiling: return "Overlay3Tiling";
        case Semantic::Overlay3UVSet: return "Overlay3UVSet";
        case Semantic::Overlay4: return "Overlay4";
        case Semantic::Overlay4ColorChannel: return "Overlay4ColorChannel";
        case Semantic::Overlay4Tiling: return "Overlay4Tiling";
        case Semantic::Overlay4UVSet: return "Overlay4UVSet";
        case Semantic::OverlayA: return "OverlayA";
        case Semantic::OverlayB: return "OverlayB";
        case Semantic::OverlayMask: return "OverlayMask";
        case Semantic::OverlayNM: return "OverlayNM";
        case Semantic::OverlayScale: return "OverlayScale";
        case Semantic::OverlaySmoothing: return "OverlaySmoothing";
        case Semantic::OverlayTiling: return "OverlayTiling";
        case Semantic::P: return "P";
        case Semantic::PCSG: return "PCSG";
        case Semantic::POSITION: return "POSITION";
        case Semantic::P_B: return "P_B";
        case Semantic::P_BK: return "P_BK";
        case Semantic::ParticleCameraEye: return "ParticleCameraEye";
        case Semantic::ParticleColor: return "ParticleColor";
        case Semantic::ParticleColorTexture: return "ParticleColorTexture";
        case Semantic::ParticleDistort: return "ParticleDistort";
        case Semantic::ParticleDistort_fx_globals: return "ParticleDistort_fx_globals";
        case Semantic::ParticleMaskTextureMap: return "ParticleMaskTextureMap";
        case Semantic::ParticleNormalTexture: return "ParticleNormalTexture";
        case Semantic::ParticleOptions: return "ParticleOptions";
        case Semantic::ParticleOptions2: return "ParticleOptions2";
        case Semantic::ParticlePCFShadows: return "ParticlePCFShadows";
        case Semantic::ParticlePCFShadows_fx_globals: return "ParticlePCFShadows_fx_globals";
        case Semantic::ParticleTextureParams: return "ParticleTextureParams";
        case Semantic::ParticleTintColor: return "ParticleTintColor";
        case Semantic::ParticleWorld: return "ParticleWorld";
        case Semantic::ParticleWorldViewInverse: return "ParticleWorldViewInverse";
        case Semantic::ParticlesShadowMode: return "ParticlesShadowMode";
        case Semantic::Pass0: return "Pass0";
        case Semantic::Pass1: return "Pass1";
        case Semantic::Pass2: return "Pass2";
        case Semantic::Pass3: return "Pass3";
        case Semantic::Pass4: return "Pass4";
        case Semantic::Pass5: return "Pass5";
        case Semantic::Pass6: return "Pass6";
        case Semantic::Pass7: return "Pass7";
        case Semantic::Pass8: return "Pass8";
        case Semantic::Pass9: return "Pass9";
        case Semantic::Pattern: return "Pattern";
        case Semantic::PatternAlpha: return "PatternAlpha";
        case Semantic::PatternColor: return "PatternColor";
        case Semantic::PatternGlow: return "PatternGlow";
        case Semantic::PatternOpacity: return "PatternOpacity";
        case Semantic::PatternScaler: return "PatternScaler";
        case Semantic::PatternTiling: return "PatternTiling";
        case Semantic::PeakAlphaFromTexture: return "PeakAlphaFromTexture";
        case Semantic::Periodic: return "Periodic";
        case Semantic::PerlinNoise: return "PerlinNoise";
        case Semantic::PerlinNoise3D: return "PerlinNoise3D";
        case Semantic::PickColor: return "PickColor";
        case Semantic::PickFoliage: return "PickFoliage";
        case Semantic::PickFoliage_fx_globals: return "PickFoliage_fx_globals";
        case Semantic::PickRigid: return "PickRigid";
        case Semantic::PickRigid_fx_globals: return "PickRigid_fx_globals";
        case Semantic::PickTerrain: return "PickTerrain";
        case Semantic::PickTerrain_fx_globals: return "PickTerrain_fx_globals";
        case Semantic::PixelShaderIndex: return "PixelShaderIndex";
        case Semantic::Planar: return "Planar";
        case Semantic::PlanarMapA: return "PlanarMapA";
        case Semantic::PlanarMapBrightness: return "PlanarMapBrightness";
        case Semantic::Planet: return "Planet";
        case Semantic::PlanetAtmosphere: return "PlanetAtmosphere";
        case Semantic::PlanetAtmosphere_fx_globals: return "PlanetAtmosphere_fx_globals";
        case Semantic::Planet_fx_globals: return "Planet_fx_globals";
        case Semantic::Pm3XQ: return "Pm3XQ";
        case Semantic::PointLight: return "PointLight";
        case Semantic::PointLightColor: return "PointLightColor";
        case Semantic::PointLightPosition: return "PointLightPosition";
        case Semantic::PointLightRange: return "PointLightRange";
        case Semantic::Pointiness: return "Pointiness";
        case Semantic::Polarize: return "Polarize";
        case Semantic::PositionScale: return "PositionScale";
        case Semantic::Post: return "Post";
        case Semantic::PostBloomCutoff: return "PostBloomCutoff";
        case Semantic::PostEffect: return "PostEffect";
        case Semantic::PostFocus: return "PostFocus";
        case Semantic::PostLowEnd: return "PostLowEnd";
        case Semantic::PostLowEnd_fx_globals: return "PostLowEnd_fx_globals";
        case Semantic::PostObscure: return "PostObscure";
        case Semantic::PostVignette: return "PostVignette";
        case Semantic::Power: return "Power";
        case Semantic::PreLit: return "PreLit";
        case Semantic::PreZ: return "PreZ";
        case Semantic::Pre_Z: return "Pre_Z";
        case Semantic::PrimaryInputTexture: return "PrimaryInputTexture";
        case Semantic::Primitive2D: return "Primitive2D";
        case Semantic::Primitive2DTexture: return "Primitive2DTexture";
        case Semantic::Primitive2DTexture2: return "Primitive2DTexture2";
        case Semantic::Primitive2DTexture2_fx_globals: return "Primitive2DTexture2_fx_globals";
        case Semantic::Primitive2DTexture3: return "Primitive2DTexture3";
        case Semantic::Primitive2DTexture3_fx_globals: return "Primitive2DTexture3_fx_globals";
        case Semantic::Primitive2D_fx_globals: return "Primitive2D_fx_globals";
        case Semantic::Primitive3D: return "Primitive3D";
        case Semantic::ProbeEvComp: return "ProbeEvComp";
        case Semantic::ProjDecal: return "ProjDecal";
        case Semantic::ProjDecalClear: return "ProjDecalClear";
        case Semantic::ProjDecalLighting: return "ProjDecalLighting";
        case Semantic::PuBc: return "PuBc";
        case Semantic::PuBct: return "PuBct";
        case Semantic::Q: return "Q";
        case Semantic::QBE: return "QBE";
        case Semantic::Qjk: return "Qjk";
        case Semantic::Qyvo: return "Qyvo";
        case Semantic::R: return "R";
        case Semantic::RB: return "RB";
        case Semantic::RBfY: return "RBfY";
        case Semantic::RD11: return "RD11";
        case Semantic::RDEF: return "RDEF";
        case Semantic::RDEF0: return "RDEF0";
        case Semantic::RDEF4: return "RDEF4";
        case Semantic::RDEF8: return "RDEF8";
        case Semantic::RDEFD: return "RDEFD";
        case Semantic::RDEFD3: return "RDEFD3";
        case Semantic::RDEFH: return "RDEFH";
        case Semantic::RDEFL: return "RDEFL";
        case Semantic::RDEFP: return "RDEFP";
        case Semantic::RDEFT: return "RDEFT";
        case Semantic::RDEFX: return "RDEFX";
        case Semantic::RDEFd: return "RDEFd";
        case Semantic::RDEFh: return "RDEFh";
        case Semantic::RDEFl: return "RDEFl";
        case Semantic::RDEFp: return "RDEFp";
        case Semantic::RDEFt: return "RDEFt";
        case Semantic::RDEFx: return "RDEFx";
        case Semantic::RDWo1: return "RDWo1";
        case Semantic::RFL: return "RFL";
        case Semantic::RGBA: return "RGBA";
        case Semantic::RIPPLE: return "RIPPLE";
        case Semantic::ROUGH: return "ROUGH";
        case Semantic::RRH: return "RRH";
        case Semantic::RSMShadowOffset: return "RSMShadowOffset";
        case Semantic::RSMShadowScale: return "RSMShadowScale";
        case Semantic::RainbowGradient: return "RainbowGradient";
        case Semantic::RainbowRadial: return "RainbowRadial";
        case Semantic::RainbowRadialPower: return "RainbowRadialPower";
        case Semantic::RainbowRadialStrength: return "RainbowRadialStrength";
        case Semantic::RainbowRadial_fx_globals: return "RainbowRadial_fx_globals";
        case Semantic::RandomSeed: return "RandomSeed";
        case Semantic::RcpLodRange: return "RcpLodRange";
        case Semantic::Red: return "Red";
        case Semantic::RedChannel: return "RedChannel";
        case Semantic::RedDot: return "RedDot";
        case Semantic::RedDotColorOverride: return "RedDotColorOverride";
        case Semantic::RedDot_fx_globals: return "RedDot_fx_globals";
        case Semantic::RedSource: return "RedSource";
        case Semantic::Reduce: return "Reduce";
        case Semantic::ReduceBloom: return "ReduceBloom";
        case Semantic::RefCameraMatrix: return "RefCameraMatrix";
        case Semantic::Reflection: return "Reflection";
        case Semantic::Refract: return "Refract";
        case Semantic::Refraction: return "Refraction";
        case Semantic::Replication: return "Replication";
        case Semantic::ReplicationMask: return "ReplicationMask";
        case Semantic::Res: return "Res";
        case Semantic::ResColor: return "ResColor";
        case Semantic::ResPattern: return "ResPattern";
        case Semantic::ResolveTransparency: return "ResolveTransparency";
        case Semantic::ResourceName: return "ResourceName";
        case Semantic::ResourceType: return "ResourceType";
        case Semantic::Rigid: return "Rigid";
        case Semantic::RigidCloak: return "RigidCloak";
        case Semantic::RigidCloakColor: return "RigidCloakColor";
        case Semantic::RigidCloakColorDistortion: return "RigidCloakColorDistortion";
        case Semantic::RigidCloakDarkLightColor: return "RigidCloakDarkLightColor";
        case Semantic::RigidCloakDepth: return "RigidCloakDepth";
        case Semantic::RigidCloakDistortion: return "RigidCloakDistortion";
        case Semantic::RigidDeRes: return "RigidDeRes";
        case Semantic::RigidDeResDepth: return "RigidDeResDepth";
        case Semantic::RigidDeResDepth_fx_globals: return "RigidDeResDepth_fx_globals";
        case Semantic::RigidDeResGlass: return "RigidDeResGlass";
        case Semantic::RigidDeResGlow: return "RigidDeResGlow";
        case Semantic::RigidDepth: return "RigidDepth";
        case Semantic::RigidGlass: return "RigidGlass";
        case Semantic::RigidGlowWith1Texture_Tinted: return "RigidGlowWith1Texture_Tinted";
        case Semantic::RigidGlowWith2Textures_Tinted: return "RigidGlowWith2Textures_Tinted";
        case Semantic::RigidGlowWith3Textures_Tinted: return "RigidGlowWith3Textures_Tinted";
        case Semantic::RigidHologram: return "RigidHologram";
        case Semantic::RigidInstancedDepth_VS3_PS3: return "RigidInstancedDepth_VS3_PS3";
        case Semantic::RigidLODTech: return "RigidLODTech";
        case Semantic::RigidLODs: return "RigidLODs";
        case Semantic::RigidLODs_fx_globals: return "RigidLODs_fx_globals";
        case Semantic::RigidOpaque: return "RigidOpaque";
        case Semantic::RigidShieldColor: return "RigidShieldColor";
        case Semantic::RigidShieldDistortion: return "RigidShieldDistortion";
        case Semantic::RigidSkinnedLODs: return "RigidSkinnedLODs";
        case Semantic::RigidSkinnedLODs_fx_globals: return "RigidSkinnedLODs_fx_globals";
        case Semantic::RippleFreq: return "RippleFreq";
        case Semantic::RippleSpeed: return "RippleSpeed";
        case Semantic::RippleX: return "RippleX";
        case Semantic::RippleY: return "RippleY";
        case Semantic::RippleZ: return "RippleZ";
        case Semantic::River: return "River";
        case Semantic::RollTiling: return "RollTiling";
        case Semantic::Rotation: return "Rotation";
        case Semantic::Rough: return "Rough";
        case Semantic::S: return "S";
        case Semantic::SCALE: return "SCALE";
        case Semantic::SCROLL: return "SCROLL";
        case Semantic::SD: return "SD";
        case Semantic::SHEX: return "SHEX";
        case Semantic::SHEX0: return "SHEX0";
        case Semantic::SHEX4: return "SHEX4";
        case Semantic::SHEX8: return "SHEX8";
        case Semantic::SHEXD: return "SHEXD";
        case Semantic::SHEXH: return "SHEXH";
        case Semantic::SHEXL: return "SHEXL";
        case Semantic::SHEXP: return "SHEXP";
        case Semantic::SHEXP1: return "SHEXP1";
        case Semantic::SHEXT: return "SHEXT";
        case Semantic::SHEXX: return "SHEXX";
        case Semantic::SHEXd: return "SHEXd";
        case Semantic::SHEXh: return "SHEXh";
        case Semantic::SHEXl: return "SHEXl";
        case Semantic::SHEXp: return "SHEXp";
        case Semantic::SHEXt: return "SHEXt";
        case Semantic::SHEXx: return "SHEXx";
        case Semantic::SOE_UIType: return "SOE_UIType";
        case Semantic::SSAO: return "SSAO";
        case Semantic::SSAOSourceDepth: return "SSAOSourceDepth";
        case Semantic::STAT: return "STAT";
        case Semantic::STEALTH: return "STEALTH";
        case Semantic::SV_Depth: return "SV_Depth";
        case Semantic::SV_InsideTessFactor: return "SV_InsideTessFactor";
        case Semantic::SV_IsFrontFace: return "SV_IsFrontFace";
        case Semantic::SV_Position: return "SV_Position";
        case Semantic::SV_Target: return "SV_Target";
        case Semantic::SV_TessFactor: return "SV_TessFactor";
        case Semantic::SV_VertexID: return "SV_VertexID";
        case Semantic::Satellite: return "Satellite";
        case Semantic::SatelliteBlend: return "SatelliteBlend";
        case Semantic::SatelliteBrightness: return "SatelliteBrightness";
        case Semantic::SatelliteColor: return "SatelliteColor";
        case Semantic::SatelliteDepth: return "SatelliteDepth";
        case Semantic::SatelliteHdrTexture: return "SatelliteHdrTexture";
        case Semantic::SatelliteUVOffsetNScale: return "SatelliteUVOffsetNScale";
        case Semantic::SatelliteWorldMatrix: return "SatelliteWorldMatrix";
        case Semantic::Satellite_fx_globals: return "Satellite_fx_globals";
        case Semantic::Scale: return "Scale";
        case Semantic::Scale1: return "Scale1";
        case Semantic::Scale1_U: return "Scale1_U";
        case Semantic::Scale1_V: return "Scale1_V";
        case Semantic::Scale2: return "Scale2";
        case Semantic::Scale2_U: return "Scale2_U";
        case Semantic::Scale2_V: return "Scale2_V";
        case Semantic::Scale3: return "Scale3";
        case Semantic::Scale3_U: return "Scale3_U";
        case Semantic::Scale3_V: return "Scale3_V";
        case Semantic::ScaleB: return "ScaleB";
        case Semantic::ScaleBias: return "ScaleBias";
        case Semantic::ScaleEnd: return "ScaleEnd";
        case Semantic::ScalePower: return "ScalePower";
        case Semantic::ScaleStart: return "ScaleStart";
        case Semantic::ScaleWavefrontSize: return "ScaleWavefrontSize";
        case Semantic::ScaleX: return "ScaleX";
        case Semantic::ScaleY: return "ScaleY";
        case Semantic::Scaler: return "Scaler";
        case Semantic::Scan: return "Scan";
        case Semantic::ScatterConstants: return "ScatterConstants";
        case Semantic::ScatterLight: return "ScatterLight";
        case Semantic::ScatterWashBias: return "ScatterWashBias";
        case Semantic::ScatterWavelengths: return "ScatterWavelengths";
        case Semantic::Scattering: return "Scattering";
        case Semantic::ScreenDirt: return "ScreenDirt";
        case Semantic::ScreenDirtLookup: return "ScreenDirtLookup";
        case Semantic::ScreenDirtLookupTex: return "ScreenDirtLookupTex";
        case Semantic::ScreenDirtTex: return "ScreenDirtTex";
        case Semantic::ScreenFrame: return "ScreenFrame";
        case Semantic::ScreenFrameColor: return "ScreenFrameColor";
        case Semantic::ScreenFrameUI: return "ScreenFrameUI";
        case Semantic::ScreenFrameUI_fx_globals: return "ScreenFrameUI_fx_globals";
        case Semantic::Scroll: return "Scroll";
        case Semantic::Scroll1: return "Scroll1";
        case Semantic::Scroll1_U: return "Scroll1_U";
        case Semantic::Scroll1_V: return "Scroll1_V";
        case Semantic::Scroll2: return "Scroll2";
        case Semantic::Scroll2_U: return "Scroll2_U";
        case Semantic::Scroll2_V: return "Scroll2_V";
        case Semantic::Scroll3: return "Scroll3";
        case Semantic::Scroll3_U: return "Scroll3_U";
        case Semantic::Scroll3_V: return "Scroll3_V";
        case Semantic::ScrollU: return "ScrollU";
        case Semantic::ScrollU_: return "ScrollU_";
        case Semantic::ScrollV: return "ScrollV";
        case Semantic::ScrollV_: return "ScrollV_";
        case Semantic::Sediment: return "Sediment";
        case Semantic::Select: return "Select";
        case Semantic::Set: return "Set";
        case Semantic::SevenTapGaussian: return "SevenTapGaussian";
        case Semantic::SevenTapGaussian_fx_globals: return "SevenTapGaussian_fx_globals";
        case Semantic::Shader: return "Shader";
        case Semantic::Shadow: return "Shadow";
        case Semantic::ShadowDepthBias: return "ShadowDepthBias";
        case Semantic::ShadowDepthOffsets: return "ShadowDepthOffsets";
        case Semantic::ShadowDepthScales: return "ShadowDepthScales";
        case Semantic::ShadowEnable: return "ShadowEnable";
        case Semantic::ShadowEnableFastZ: return "ShadowEnableFastZ";
        case Semantic::ShadowFilter: return "ShadowFilter";
        case Semantic::ShadowFilterSource: return "ShadowFilterSource";
        case Semantic::ShadowFilter_fx_globals: return "ShadowFilter_fx_globals";
        case Semantic::ShadowMap: return "ShadowMap";
        case Semantic::ShadowMapCoeffs: return "ShadowMapCoeffs";
        case Semantic::ShadowProjector: return "ShadowProjector";
        case Semantic::ShadowProjector_fx_globals: return "ShadowProjector_fx_globals";
        case Semantic::ShadowResolve: return "ShadowResolve";
        case Semantic::ShadowResolveInput: return "ShadowResolveInput";
        case Semantic::ShadowResolveOrtho: return "ShadowResolveOrtho";
        case Semantic::ShadowSampleMode: return "ShadowSampleMode";
        case Semantic::ShadowSlopeScaledDepthBias: return "ShadowSlopeScaledDepthBias";
        case Semantic::ShadowViewProj: return "ShadowViewProj";
        case Semantic::ShadowsFilterType: return "ShadowsFilterType";
        case Semantic::Sharpness: return "Sharpness";
        case Semantic::Shield: return "Shield";
        case Semantic::ShieldBGColor: return "ShieldBGColor";
        case Semantic::ShieldColor: return "ShieldColor";
        case Semantic::ShieldColor_Rigid: return "ShieldColor_Rigid";
        case Semantic::ShieldColor_RigidSkinned: return "ShieldColor_RigidSkinned";
        case Semantic::ShieldColor_Skinned: return "ShieldColor_Skinned";
        case Semantic::ShieldDistance: return "ShieldDistance";
        case Semantic::ShieldDistortion: return "ShieldDistortion";
        case Semantic::ShieldDistortion_Rigid: return "ShieldDistortion_Rigid";
        case Semantic::ShieldDistortion_RigidSkinned: return "ShieldDistortion_RigidSkinned";
        case Semantic::ShieldDistortion_Skinned: return "ShieldDistortion_Skinned";
        case Semantic::ShieldFresnel: return "ShieldFresnel";
        case Semantic::ShieldHottness: return "ShieldHottness";
        case Semantic::ShieldPattern: return "ShieldPattern";
        case Semantic::ShieldReduceBloom: return "ShieldReduceBloom";
        case Semantic::Shift: return "Shift";
        case Semantic::Show: return "Show";
        case Semantic::ShowDecalTint: return "ShowDecalTint";
        case Semantic::ShowTilingTint: return "ShowTilingTint";
        case Semantic::Sigma: return "Sigma";
        case Semantic::SiltColor: return "SiltColor";
        case Semantic::SiltDepth: return "SiltDepth";
        case Semantic::SiltNFoam: return "SiltNFoam";
        case Semantic::SiltNFoamTexture: return "SiltNFoamTexture";
        case Semantic::SimpleEmissive: return "SimpleEmissive";
        case Semantic::SimpleEmissive_fx_globals: return "SimpleEmissive_fx_globals";
        case Semantic::SimpleGlow: return "SimpleGlow";
        case Semantic::SimpleGlow_fx_globals: return "SimpleGlow_fx_globals";
        case Semantic::SimpleSpriteParticle: return "SimpleSpriteParticle";
        case Semantic::SimpleSpriteParticleDistortion: return "SimpleSpriteParticleDistortion";
        case Semantic::SimpleSpriteParticleEmitter: return "SimpleSpriteParticleEmitter";
        case Semantic::SimpleSpriteParticleEmitterDistortion: return "SimpleSpriteParticleEmitterDistortion";
        case Semantic::SimpleSpriteParticleEmitterDistortion_fx_globals: return "SimpleSpriteParticleEmitterDistortion_fx_globals";
        case Semantic::SimpleSpriteParticleEmitterFillVisualization: return "SimpleSpriteParticleEmitterFillVisualization";
        case Semantic::SimpleSpriteParticleEmitterFillVisualization_fx_globals: return "SimpleSpriteParticleEmitterFillVisualization_fx_globals";
        case Semantic::SimpleSpriteParticleEmitter_fx_globals: return "SimpleSpriteParticleEmitter_fx_globals";
        case Semantic::SimpleSpriteParticleFillVisualization: return "SimpleSpriteParticleFillVisualization";
        case Semantic::SimpleSpriteParticleInWater: return "SimpleSpriteParticleInWater";
        case Semantic::Simple_VS1_PS2: return "Simple_VS1_PS2";
        case Semantic::Simple_VS2_PS2: return "Simple_VS2_PS2";
        case Semantic::Simple_VS3_PS3: return "Simple_VS3_PS3";
        case Semantic::SingleSided: return "SingleSided";
        case Semantic::Size: return "Size";
        case Semantic::Skinned: return "Skinned";
        case Semantic::SkinnedDepth: return "SkinnedDepth";
        case Semantic::SkinnedGlowWith1Texture_Tinted: return "SkinnedGlowWith1Texture_Tinted";
        case Semantic::SkinnedGlowWith2Textures_Tinted: return "SkinnedGlowWith2Textures_Tinted";
        case Semantic::SkinnedGlowWith3Textures_Tinted: return "SkinnedGlowWith3Textures_Tinted";
        case Semantic::SkinnedLODTech: return "SkinnedLODTech";
        case Semantic::SkinnedLODs: return "SkinnedLODs";
        case Semantic::SkinnedLODs_fx_globals: return "SkinnedLODs_fx_globals";
        case Semantic::Sky2_VS11_PS0: return "Sky2_VS11_PS0";
        case Semantic::SkyBox_VS11_PS2: return "SkyBox_VS11_PS2";
        case Semantic::SkyBox_VS2_PS2: return "SkyBox_VS2_PS2";
        case Semantic::SkyColor: return "SkyColor";
        case Semantic::SkyCube: return "SkyCube";
        case Semantic::SkyCube_fx_globals: return "SkyCube_fx_globals";
        case Semantic::SkyDepth: return "SkyDepth";
        case Semantic::SkyDome: return "SkyDome";
        case Semantic::SkyDome_fx_globals: return "SkyDome_fx_globals";
        case Semantic::SkyFogShadowsEnabled: return "SkyFogShadowsEnabled";
        case Semantic::SkyHorizon: return "SkyHorizon";
        case Semantic::SkyHorizon_fx_globals: return "SkyHorizon_fx_globals";
        case Semantic::SkyLightCoeff0: return "SkyLightCoeff0";
        case Semantic::SkyLightCoeff2: return "SkyLightCoeff2";
        case Semantic::SkyLightCoeff6: return "SkyLightCoeff6";
        case Semantic::SkyLightEnvmap: return "SkyLightEnvmap";
        case Semantic::SkyLightProbeColor0: return "SkyLightProbeColor0";
        case Semantic::SkyLightProbeColor1: return "SkyLightProbeColor1";
        case Semantic::SkyLightProbeLerp: return "SkyLightProbeLerp";
        case Semantic::SkyLightProbeLocation0: return "SkyLightProbeLocation0";
        case Semantic::SkyLightProbeLocation1: return "SkyLightProbeLocation1";
        case Semantic::SkyLightProbeNormal0: return "SkyLightProbeNormal0";
        case Semantic::SkyLightProbeNormal1: return "SkyLightProbeNormal1";
        case Semantic::SkyMask: return "SkyMask";
        case Semantic::SkyMaskStencilTech: return "SkyMaskStencilTech";
        case Semantic::SkyMaskStencilTechClear: return "SkyMaskStencilTechClear";
        case Semantic::SkyMask_fx_globals: return "SkyMask_fx_globals";
        case Semantic::SkyMesh: return "SkyMesh";
        case Semantic::SkyMeshBlend: return "SkyMeshBlend";
        case Semantic::SkyMeshBlend_fx_globals: return "SkyMeshBlend_fx_globals";
        case Semantic::SkyMesh_fx_globals: return "SkyMesh_fx_globals";
        case Semantic::SkyRenderMode: return "SkyRenderMode";
        case Semantic::SkyRenderModes: return "SkyRenderModes";
        case Semantic::SkyStencilMaskEnabled: return "SkyStencilMaskEnabled";
        case Semantic::SkyTexture: return "SkyTexture";
        case Semantic::Sky_VS11_PS0: return "Sky_VS11_PS0";
        case Semantic::Sky_VS30_PS0: return "Sky_VS30_PS0";
        case Semantic::Slope: return "Slope";
        case Semantic::Smoothing: return "Smoothing";
        case Semantic::Smoothness: return "Smoothness";
        case Semantic::Softness: return "Softness";
        case Semantic::SolidModelPosTech: return "SolidModelPosTech";
        case Semantic::SolidTech: return "SolidTech";
        case Semantic::Source: return "Source";
        case Semantic::Source0: return "Source0";
        case Semantic::Source1: return "Source1";
        case Semantic::SourceColor: return "SourceColor";
        case Semantic::SourceColorTexture: return "SourceColorTexture";
        case Semantic::SourceCube: return "SourceCube";
        case Semantic::SourceDepth: return "SourceDepth";
        case Semantic::SourceMip: return "SourceMip";
        case Semantic::SourceMipLevel: return "SourceMipLevel";
        case Semantic::SourceTexture: return "SourceTexture";
        case Semantic::Spacing: return "Spacing";
        case Semantic::SparkFlowX: return "SparkFlowX";
        case Semantic::SparkFlowZ: return "SparkFlowZ";
        case Semantic::SparkMask: return "SparkMask";
        case Semantic::SparkOpacity: return "SparkOpacity";
        case Semantic::Spec: return "Spec";
        case Semantic::SpecB: return "SpecB";
        case Semantic::SpecBlendNormalYMap: return "SpecBlendNormalYMap";
        case Semantic::SpecBlendNormalYMap1: return "SpecBlendNormalYMap1";
        case Semantic::SpecBlendNormalYMap2: return "SpecBlendNormalYMap2";
        case Semantic::SpecBlendNormalYMap3: return "SpecBlendNormalYMap3";
        case Semantic::SpecBlendNormalYMap4: return "SpecBlendNormalYMap4";
        case Semantic::SpecBlendNormalYMap5: return "SpecBlendNormalYMap5";
        case Semantic::SpecGlow: return "SpecGlow";
        case Semantic::SpecMap: return "SpecMap";
        case Semantic::SpecMax: return "SpecMax";
        case Semantic::SpecMin: return "SpecMin";
        case Semantic::SpecMinMax1: return "SpecMinMax1";
        case Semantic::SpecMinMax2: return "SpecMinMax2";
        case Semantic::SpecMinMax3: return "SpecMinMax3";
        case Semantic::SpecMinMax4: return "SpecMinMax4";
        case Semantic::SpecMinMax5: return "SpecMinMax5";
        case Semantic::SpecSmoothness: return "SpecSmoothness";
        case Semantic::SpecSmoothnessMax: return "SpecSmoothnessMax";
        case Semantic::SpecSmoothnessMin: return "SpecSmoothnessMin";
        case Semantic::Specular: return "Specular";
        case Semantic::Specularity: return "Specularity";
        case Semantic::Speed: return "Speed";
        case Semantic::SplatShadowDepth: return "SplatShadowDepth";
        case Semantic::SpriteParticle: return "SpriteParticle";
        case Semantic::SpriteParticleDistortion: return "SpriteParticleDistortion";
        case Semantic::SpriteParticleEmitter: return "SpriteParticleEmitter";
        case Semantic::SpriteParticleEmitterDistortion: return "SpriteParticleEmitterDistortion";
        case Semantic::SpriteParticleEmitterDistortion_fx_globals: return "SpriteParticleEmitterDistortion_fx_globals";
        case Semantic::SpriteParticleEmitterFillVisualization: return "SpriteParticleEmitterFillVisualization";
        case Semantic::SpriteParticleEmitterFillVisualization_fx_globals: return "SpriteParticleEmitterFillVisualization_fx_globals";
        case Semantic::SpriteParticleEmitter_fx_globals: return "SpriteParticleEmitter_fx_globals";
        case Semantic::SpriteParticleFullRes: return "SpriteParticleFullRes";
        case Semantic::SpriteParticleFullResInWater: return "SpriteParticleFullResInWater";
        case Semantic::SpriteParticle_FullRes: return "SpriteParticle_FullRes";
        case Semantic::Stage: return "Stage";
        case Semantic::Standard: return "Standard";
        case Semantic::StandardNoZ: return "StandardNoZ";
        case Semantic::StarsColor: return "StarsColor";
        case Semantic::Start: return "Start";
        case Semantic::StealthBlend: return "StealthBlend";
        case Semantic::StealthDistortion: return "StealthDistortion";
        case Semantic::Step: return "Step";
        case Semantic::StratusCloudHeight: return "StratusCloudHeight";
        case Semantic::StratusCloudScrollU: return "StratusCloudScrollU";
        case Semantic::StratusCloudScrollV: return "StratusCloudScrollV";
        case Semantic::StratusCloudTiling: return "StratusCloudTiling";
        case Semantic::StreakElasticity: return "StreakElasticity";
        case Semantic::StreakParticle: return "StreakParticle";
        case Semantic::StreakParticleInWater: return "StreakParticleInWater";
        case Semantic::Stream: return "Stream";
        case Semantic::StreamWater: return "StreamWater";
        case Semantic::StreamWater_fx_globals: return "StreamWater_fx_globals";
        case Semantic::Strength: return "Strength";
        case Semantic::Structure: return "Structure";
        case Semantic::StructureBlend: return "StructureBlend";
        case Semantic::StructureBlend_fx_globals: return "StructureBlend_fx_globals";
        case Semantic::StructureColorInstancedTech: return "StructureColorInstancedTech";
        case Semantic::StructureColorTech: return "StructureColorTech";
        case Semantic::StructureDecal: return "StructureDecal";
        case Semantic::StructureDecal_fx_globals: return "StructureDecal_fx_globals";
        case Semantic::StructureInstanced: return "StructureInstanced";
        case Semantic::StructureInstanced_fx_globals: return "StructureInstanced_fx_globals";
        case Semantic::StructureNoiseTexture: return "StructureNoiseTexture";
        case Semantic::StructureSkinned: return "StructureSkinned";
        case Semantic::StructureSkinned_fx_globals: return "StructureSkinned_fx_globals";
        case Semantic::StructureSnow: return "StructureSnow";
        case Semantic::StructureSnow_fx_globals: return "StructureSnow_fx_globals";
        case Semantic::StructureTint: return "StructureTint";
        case Semantic::StructureTint_fx_globals: return "StructureTint_fx_globals";
        case Semantic::StructureWsOverlay: return "StructureWsOverlay";
        case Semantic::StructureWsOverlay_fx_globals: return "StructureWsOverlay_fx_globals";
        case Semantic::Structure_fx_globals: return "Structure_fx_globals";
        case Semantic::Structure_rsm: return "Structure_rsm";
        case Semantic::Structure_rsm_fx_globals: return "Structure_rsm_fx_globals";
        case Semantic::SubsurfaceOcean: return "SubsurfaceOcean";
        case Semantic::SubsurfaceRiver: return "SubsurfaceRiver";
        case Semantic::SubsurfaceStream: return "SubsurfaceStream";
        case Semantic::SubsurfaceSwamp: return "SubsurfaceSwamp";
        case Semantic::SunBiasedHorizonGlowColor: return "SunBiasedHorizonGlowColor";
        case Semantic::SunBiasedHorizonWidthHeightLatSundis: return "SunBiasedHorizonWidthHeightLatSundis";
        case Semantic::SunDir: return "SunDir";
        case Semantic::SunFalloffsStarsBlend: return "SunFalloffsStarsBlend";
        case Semantic::SunGlowColor: return "SunGlowColor";
        case Semantic::SunLightDeferredShadow: return "SunLightDeferredShadow";
        case Semantic::SunPosition: return "SunPosition";
        case Semantic::Surface: return "Surface";
        case Semantic::SurfaceMap: return "SurfaceMap";
        case Semantic::SurfaceScale: return "SurfaceScale";
        case Semantic::SurfaceTexture: return "SurfaceTexture";
        case Semantic::Sv5: return "Sv5";
        case Semantic::Swamp: return "Swamp";
        case Semantic::Sway: return "Sway";
        case Semantic::SwayBoilSpeed: return "SwayBoilSpeed";
        case Semantic::SwayDir: return "SwayDir";
        case Semantic::SwayPrevBoilSpeed: return "SwayPrevBoilSpeed";
        case Semantic::SwayPrevSpeed: return "SwayPrevSpeed";
        case Semantic::SwayScale: return "SwayScale";
        case Semantic::SwaySmoothing: return "SwaySmoothing";
        case Semantic::SwaySpeed: return "SwaySpeed";
        case Semantic::SwayStrength: return "SwayStrength";
        case Semantic::T: return "T";
        case Semantic::T6m: return "T6m";
        case Semantic::TA: return "TA";
        case Semantic::TANGENT: return "TANGENT";
        case Semantic::TEXCOORD: return "TEXCOORD";
        case Semantic::TankTread: return "TankTread";
        case Semantic::TankTread_fx_globals: return "TankTread_fx_globals";
        case Semantic::TargetColorTexture: return "TargetColorTexture";
        case Semantic::TargetDepthTexture: return "TargetDepthTexture";
        case Semantic::TdDj: return "TdDj";
        case Semantic::Technique1: return "Technique1";
        case Semantic::Terrain1LayerLod: return "Terrain1LayerLod";
        case Semantic::Terrain1LayerLod_fx_globals: return "Terrain1LayerLod_fx_globals";
        case Semantic::Terrain2LayerLod: return "Terrain2LayerLod";
        case Semantic::Terrain2LayerLod_fx_globals: return "Terrain2LayerLod_fx_globals";
        case Semantic::Terrain3LayerLod: return "Terrain3LayerLod";
        case Semantic::Terrain3LayerLod_fx_globals: return "Terrain3LayerLod_fx_globals";
        case Semantic::Terrain4LayerLod: return "Terrain4LayerLod";
        case Semantic::Terrain4LayerLod_fx_globals: return "Terrain4LayerLod_fx_globals";
        case Semantic::Terrain5LayerLod: return "Terrain5LayerLod";
        case Semantic::Terrain5LayerLod_fx_globals: return "Terrain5LayerLod_fx_globals";
        case Semantic::Terrain5Layer_VS3_PS3: return "Terrain5Layer_VS3_PS3";
        case Semantic::TerrainAuditHeatmask: return "TerrainAuditHeatmask";
        case Semantic::TerrainAudit_DX6_VS1_PS0: return "TerrainAudit_DX6_VS1_PS0";
        case Semantic::TerrainLodTile: return "TerrainLodTile";
        case Semantic::TerrainLodTile_fx_globals: return "TerrainLodTile_fx_globals";
        case Semantic::TerrainLod_depth: return "TerrainLod_depth";
        case Semantic::TerrainLod_depth_fx_globals: return "TerrainLod_depth_fx_globals";
        case Semantic::TerrainRSM_VS3_PS3: return "TerrainRSM_VS3_PS3";
        case Semantic::TerrainTile: return "TerrainTile";
        case Semantic::TerrainTile_depth: return "TerrainTile_depth";
        case Semantic::TerrainTile_depth_fx_globals: return "TerrainTile_depth_fx_globals";
        case Semantic::TerrainTile_fx_globals: return "TerrainTile_fx_globals";
        case Semantic::Terrain_VS2_PS2: return "Terrain_VS2_PS2";
        case Semantic::TessellationEnable: return "TessellationEnable";
        case Semantic::TexOffset: return "TexOffset";
        case Semantic::TexOffset2: return "TexOffset2";
        case Semantic::TexOffset3: return "TexOffset3";
        case Semantic::TexOffset4: return "TexOffset4";
        case Semantic::TexScale1: return "TexScale1";
        case Semantic::TexScale2: return "TexScale2";
        case Semantic::TexScale3: return "TexScale3";
        case Semantic::TexScrollU1: return "TexScrollU1";
        case Semantic::TexScrollU2: return "TexScrollU2";
        case Semantic::TexScrollU3: return "TexScrollU3";
        case Semantic::TexScrollV1: return "TexScrollV1";
        case Semantic::TexScrollV2: return "TexScrollV2";
        case Semantic::TexScrollV3: return "TexScrollV3";
        case Semantic::TexScrollX1: return "TexScrollX1";
        case Semantic::TexScrollX2: return "TexScrollX2";
        case Semantic::TexScrollX3: return "TexScrollX3";
        case Semantic::TexScrollZ1: return "TexScrollZ1";
        case Semantic::TexScrollZ2: return "TexScrollZ2";
        case Semantic::TexScrollZ3: return "TexScrollZ3";
        case Semantic::TexStretch: return "TexStretch";
        case Semantic::TexStretch2: return "TexStretch2";
        case Semantic::TexStretch3: return "TexStretch3";
        case Semantic::TexStretch4: return "TexStretch4";
        case Semantic::Texture: return "Texture";
        case Semantic::Texture1: return "Texture1";
        case Semantic::Texture2: return "Texture2";
        case Semantic::Texture3: return "Texture3";
        case Semantic::TextureFile: return "TextureFile";
        case Semantic::TextureMap: return "TextureMap";
        case Semantic::TextureType: return "TextureType";
        case Semantic::ThermalAdjustToLighting: return "ThermalAdjustToLighting";
        case Semantic::ThermalCold: return "ThermalCold";
        case Semantic::ThermalColor: return "ThermalColor";
        case Semantic::ThermalHot: return "ThermalHot";
        case Semantic::ThermalViewFade: return "ThermalViewFade";
        case Semantic::ThermalViewRange: return "ThermalViewRange";
        case Semantic::Thickness: return "Thickness";
        case Semantic::TileQuad: return "TileQuad";
        case Semantic::TileQuad_fx_globals: return "TileQuad_fx_globals";
        case Semantic::Tiling: return "Tiling";
        case Semantic::TilingOverlay: return "TilingOverlay";
        case Semantic::TilingOverlayB: return "TilingOverlayB";
        case Semantic::TilingOverlayMask: return "TilingOverlayMask";
        case Semantic::TilingScaleB: return "TilingScaleB";
        case Semantic::TilingTint: return "TilingTint";
        case Semantic::TilingTintHighlight: return "TilingTintHighlight";
        case Semantic::TilingTintHighlight_StructureTint: return "TilingTintHighlight_StructureTint";
        case Semantic::TilingTintMidtone: return "TilingTintMidtone";
        case Semantic::TilingTintMidtone_StructureTint: return "TilingTintMidtone_StructureTint";
        case Semantic::TilingTintOpacity: return "TilingTintOpacity";
        case Semantic::TilingTintOpacity_StructureTint: return "TilingTintOpacity_StructureTint";
        case Semantic::TilingTintRotation: return "TilingTintRotation";
        case Semantic::TilingTintScale: return "TilingTintScale";
        case Semantic::TilingTintScale_StructureTint: return "TilingTintScale_StructureTint";
        case Semantic::TilingTintShadow: return "TilingTintShadow";
        case Semantic::TilingTintShadow_StructureTint: return "TilingTintShadow_StructureTint";
        case Semantic::TilingTintTranslation: return "TilingTintTranslation";
        case Semantic::TilingTint_StructureTint: return "TilingTint_StructureTint";
        case Semantic::Timer: return "Timer";
        case Semantic::Tint: return "Tint";
        case Semantic::Tint1: return "Tint1";
        case Semantic::Tint2: return "Tint2";
        case Semantic::Tint3: return "Tint3";
        case Semantic::TintAlpha: return "TintAlpha";
        case Semantic::TintMask: return "TintMask";
        case Semantic::TintSemantic: return "TintSemantic";
        case Semantic::TintedDeRes: return "TintedDeRes";
        case Semantic::ToneMapLowEnd: return "ToneMapLowEnd";
        case Semantic::ToneMapLowEnd_fx_globals: return "ToneMapLowEnd_fx_globals";
        case Semantic::ToolPrimitive2D: return "ToolPrimitive2D";
        case Semantic::ToolPrimitive2DTex: return "ToolPrimitive2DTex";
        case Semantic::ToolPrimitive3D: return "ToolPrimitive3D";
        case Semantic::ToolPrimitive3DNoZTest: return "ToolPrimitive3DNoZTest";
        case Semantic::ToolPrimitive3DTex: return "ToolPrimitive3DTex";
        case Semantic::ToolPrimitive3DTexNoZTest: return "ToolPrimitive3DTexNoZTest";
        case Semantic::ToolPrimitive3D_fx_globals: return "ToolPrimitive3D_fx_globals";
        case Semantic::TopFrame: return "TopFrame";
        case Semantic::TrailParticle: return "TrailParticle";
        case Semantic::TrailParticleEmitter: return "TrailParticleEmitter";
        case Semantic::TrailParticleEmitterDistortion: return "TrailParticleEmitterDistortion";
        case Semantic::TrailParticleEmitterDistortion_fx_globals: return "TrailParticleEmitterDistortion_fx_globals";
        case Semantic::TrailParticleEmitterFillVisualization: return "TrailParticleEmitterFillVisualization";
        case Semantic::TrailParticleEmitterFillVisualization_fx_globals: return "TrailParticleEmitterFillVisualization_fx_globals";
        case Semantic::TrailParticleEmitter_fx_globals: return "TrailParticleEmitter_fx_globals";
        case Semantic::TrailParticleFillVisualization: return "TrailParticleFillVisualization";
        case Semantic::TrailParticleFullRes: return "TrailParticleFullRes";
        case Semantic::TrailParticleFullResInWater: return "TrailParticleFullResInWater";
        case Semantic::Transition: return "Transition";
        case Semantic::TransitionDirection: return "TransitionDirection";
        case Semantic::TransitionOffset: return "TransitionOffset";
        case Semantic::TransitionSharpness: return "TransitionSharpness";
        case Semantic::TransitionWidth: return "TransitionWidth";
        case Semantic::Translation: return "Translation";
        case Semantic::Transmittance: return "Transmittance";
        case Semantic::Transparency: return "Transparency";
        case Semantic::TransparentDepth: return "TransparentDepth";
        case Semantic::Trunk: return "Trunk";
        case Semantic::TrunkInstanced: return "TrunkInstanced";
        case Semantic::TrunkInstanced_fx_globals: return "TrunkInstanced_fx_globals";
        case Semantic::Trunk_fx_globals: return "Trunk_fx_globals";
        case Semantic::TurbulenceBoilSpeed: return "TurbulenceBoilSpeed";
        case Semantic::TurbulenceDensityRange: return "TurbulenceDensityRange";
        case Semantic::TurbulenceDirection: return "TurbulenceDirection";
        case Semantic::TurbulenceEnable: return "TurbulenceEnable";
        case Semantic::TurbulenceScale: return "TurbulenceScale";
        case Semantic::TurbulenceSpeed: return "TurbulenceSpeed";
        case Semantic::TwoSided: return "TwoSided";
        case Semantic::TwoSidedInstanced: return "TwoSidedInstanced";
        case Semantic::TwoSidedInstanced_fx_globals: return "TwoSidedInstanced_fx_globals";
        case Semantic::TwoSidedRigidLODs: return "TwoSidedRigidLODs";
        case Semantic::TwoSidedRigidLODs_fx_globals: return "TwoSidedRigidLODs_fx_globals";
        case Semantic::TwoSidedSway_depth: return "TwoSidedSway_depth";
        case Semantic::TwoSidedSway_depth_fx_globals: return "TwoSidedSway_depth_fx_globals";
        case Semantic::TwoSided_Depth: return "TwoSided_Depth";
        case Semantic::TwoSided_Depth_fx_globals: return "TwoSided_Depth_fx_globals";
        case Semantic::TwoSided_fx_globals: return "TwoSided_fx_globals";
        case Semantic::U: return "U";
        case Semantic::U3: return "U3";
        case Semantic::UB1: return "UB1";
        case Semantic::UB_: return "UB_";
        case Semantic::UBg: return "UBg";
        case Semantic::UIGroup: return "UIGroup";
        case Semantic::UIMax: return "UIMax";
        case Semantic::UIMin: return "UIMin";
        case Semantic::UIName: return "UIName";
        case Semantic::UIWidget: return "UIWidget";
        case Semantic::UK5E: return "UK5E";
        case Semantic::UL: return "UL";
        case Semantic::UP: return "UP";
        case Semantic::UUU: return "UUU";
        case Semantic::UV: return "UV";
        case Semantic::UV0: return "UV0";
        case Semantic::UV1: return "UV1";
        case Semantic::UV2: return "UV2";
        case Semantic::UVOffset: return "UVOffset";
        case Semantic::UVScale: return "UVScale";
        case Semantic::UVSet: return "UVSet";
        case Semantic::UVs: return "UVs";
        case Semantic::UVsPerMeter0: return "UVsPerMeter0";
        case Semantic::UVsPerMeter1: return "UVsPerMeter1";
        case Semantic::UVsPerMeter2: return "UVsPerMeter2";
        case Semantic::UVsPerMeter3: return "UVsPerMeter3";
        case Semantic::Use: return "Use";
        case Semantic::UseDynamicWaterReflection: return "UseDynamicWaterReflection";
        case Semantic::UseUV0ForDetailBump: return "UseUV0ForDetailBump";
        case Semantic::UseUV1ForOverlayMask: return "UseUV1ForOverlayMask";
        case Semantic::V: return "V";
        case Semantic::V11_P20: return "V11_P20";
        case Semantic::V8q: return "V8q";
        case Semantic::VU: return "VU";
        case Semantic::Vehicle: return "Vehicle";
        case Semantic::Vehicle_fx_globals: return "Vehicle_fx_globals";
        case Semantic::VertexAlignment: return "VertexAlignment";
        case Semantic::Vertical: return "Vertical";
        case Semantic::VirtualReality: return "VirtualReality";
        case Semantic::Visibility: return "Visibility";
        case Semantic::VisibleSkyIntensity: return "VisibleSkyIntensity";
        case Semantic::VisualizerColor: return "VisualizerColor";
        case Semantic::VisualizerForeground: return "VisualizerForeground";
        case Semantic::Volatile: return "Volatile";
        case Semantic::W: return "W";
        case Semantic::W1H: return "W1H";
        case Semantic::WX: return "WX";
        case Semantic::WarpMode: return "WarpMode";
        case Semantic::Water2013: return "Water2013";
        case Semantic::Water2013_fx_globals: return "Water2013_fx_globals";
        case Semantic::WaterColor: return "WaterColor";
        case Semantic::WaterColorTech: return "WaterColorTech";
        case Semantic::WaterColor_fx_globals: return "WaterColor_fx_globals";
        case Semantic::WaterDepth: return "WaterDepth";
        case Semantic::WaterDepthBuffer: return "WaterDepthBuffer";
        case Semantic::WaterDepthOnly: return "WaterDepthOnly";
        case Semantic::WaterDepthStream: return "WaterDepthStream";
        case Semantic::WaterHeight: return "WaterHeight";
        case Semantic::WaterReflection: return "WaterReflection";
        case Semantic::WaterReflectionHeight: return "WaterReflectionHeight";
        case Semantic::WaterTiling: return "WaterTiling";
        case Semantic::Water_V11_P11: return "Water_V11_P11";
        case Semantic::Waters: return "Waters";
        case Semantic::Wave: return "Wave";
        case Semantic::WaveScrollU: return "WaveScrollU";
        case Semantic::WaveScrollV: return "WaveScrollV";
        case Semantic::WeatherEnabled: return "WeatherEnabled";
        case Semantic::White: return "White";
        case Semantic::Width: return "Width";
        case Semantic::Wind: return "Wind";
        case Semantic::WireFrame: return "WireFrame";
        case Semantic::Wm: return "Wm";
        case Semantic::World: return "World";
        case Semantic::WorldMatrix: return "WorldMatrix";
        case Semantic::WorldNormalMap: return "WorldNormalMap";
        case Semantic::WorldScale: return "WorldScale";
        case Semantic::Worldspace: return "Worldspace";
        case Semantic::WriteAlpha: return "WriteAlpha";
        case Semantic::X: return "X";
        case Semantic::XGdi: return "XGdi";
        case Semantic::XJ: return "XJ";
        case Semantic::XR: return "XR";
        case Semantic::XRayGrid: return "XRayGrid";
        case Semantic::XRayGrid_fx_globals: return "XRayGrid_fx_globals";
        case Semantic::Y: return "Y";
        case Semantic::Y96O: return "Y96O";
        case Semantic::YawPitchRollFace: return "YawPitchRollFace";
        case Semantic::YeHU: return "YeHU";
        case Semantic::Yf4: return "Yf4";
        case Semantic::Yk: return "Yk";
        case Semantic::Z: return "Z";
        case Semantic::ZBuffer: return "ZBuffer";
        case Semantic::ZBufferStructures: return "ZBufferStructures";
        case Semantic::Zoom: return "Zoom";
        case Semantic::_AmbientLightColor: return "_AmbientLightColor";
        case Semantic::_Ax2: return "_Ax2";
        case Semantic::_Bones: return "_Bones";
        case Semantic::_C: return "_C";
        case Semantic::_Camera: return "_Camera";
        case Semantic::_DirectionalLightColor: return "_DirectionalLightColor";
        case Semantic::_DirectionalLightViewSpaceDir: return "_DirectionalLightViewSpaceDir";
        case Semantic::_DynamicResolutionScale: return "_DynamicResolutionScale";
        case Semantic::_EmissiveCorrectionLimit: return "_EmissiveCorrectionLimit";
        case Semantic::_EmissiveCorrectionScale: return "_EmissiveCorrectionScale";
        case Semantic::_EyePosition: return "_EyePosition";
        case Semantic::_FarClip: return "_FarClip";
        case Semantic::_InvProjection: return "_InvProjection";
        case Semantic::_InvTargetSize: return "_InvTargetSize";
        case Semantic::_JitterOffset: return "_JitterOffset";
        case Semantic::_NearClip: return "_NearClip";
        case Semantic::_PrevBones: return "_PrevBones";
        case Semantic::_PrevProjection: return "_PrevProjection";
        case Semantic::_PrevView: return "_PrevView";
        case Semantic::_PrevViewProj: return "_PrevViewProj";
        case Semantic::_PrevVirtualView: return "_PrevVirtualView";
        case Semantic::_PrevVirtualViewOffset: return "_PrevVirtualViewOffset";
        case Semantic::_PrevWorld: return "_PrevWorld";
        case Semantic::_Projection: return "_Projection";
        case Semantic::_Random: return "_Random";
        case Semantic::_RenderLevel: return "_RenderLevel";
        case Semantic::_StreakTimeStep: return "_StreakTimeStep";
        case Semantic::_Submerged: return "_Submerged";
        case Semantic::_TAAEnabled: return "_TAAEnabled";
        case Semantic::_TargetSize: return "_TargetSize";
        case Semantic::_Time: return "_Time";
        case Semantic::_TimeStep: return "_TimeStep";
        case Semantic::_UnjitteredProjection: return "_UnjitteredProjection";
        case Semantic::_View: return "_View";
        case Semantic::_ViewProj: return "_ViewProj";
        case Semantic::_VirtualCameraOffset: return "_VirtualCameraOffset";
        case Semantic::_VirtualView: return "_VirtualView";
        case Semantic::_VirtualViewOffset: return "_VirtualViewOffset";
        case Semantic::_WhitePoint: return "_WhitePoint";
        case Semantic::_World: return "_World";
        case Semantic::aColors: return "aColors";
        case Semantic::a_fAOSharpness: return "a_fAOSharpness";
        case Semantic::a_fAOSize: return "a_fAOSize";
        case Semantic::a_m43World: return "a_m43World";
        case Semantic::a_m44World: return "a_m44World";
        case Semantic::a_nAOEnable: return "a_nAOEnable";
        case Semantic::a_nAlphaBlend: return "a_nAlphaBlend";
        case Semantic::albedoTexture: return "albedoTexture";
        case Semantic::alpha: return "alpha";
        case Semantic::alphaEnabled: return "alphaEnabled";
        case Semantic::ambient: return "ambient";
        case Semantic::ambientOcclusion: return "ambientOcclusion";
        case Semantic::ambientOcclusionUpsample: return "ambientOcclusionUpsample";
        case Semantic::ambientOcclusionUpsample_fx_globals: return "ambientOcclusionUpsample_fx_globals";
        case Semantic::ambientOcclusion_fx_globals: return "ambientOcclusion_fx_globals";
        case Semantic::auBlackShiftStrength: return "auBlackShiftStrength";
        case Semantic::auBumpClean: return "auBumpClean";
        case Semantic::auBumpStrength: return "auBumpStrength";
        case Semantic::auColorShiftStrength: return "auColorShiftStrength";
        case Semantic::auDielectricMax: return "auDielectricMax";
        case Semantic::auDielectricMin: return "auDielectricMin";
        case Semantic::auEmissiveScale: return "auEmissiveScale";
        case Semantic::auEmissiveSlope: return "auEmissiveSlope";
        case Semantic::auMetallicMax: return "auMetallicMax";
        case Semantic::auMetallicMin: return "auMetallicMin";
        case Semantic::auNoiseBoilSpeed: return "auNoiseBoilSpeed";
        case Semantic::auNoiseDriftSpeed: return "auNoiseDriftSpeed";
        case Semantic::auNoiseScale: return "auNoiseScale";
        case Semantic::auSmoothnessMax: return "auSmoothnessMax";
        case Semantic::auSmoothnessMin: return "auSmoothnessMin";
        case Semantic::auditColors: return "auditColors";
        case Semantic::auditHeatmask: return "auditHeatmask";
        case Semantic::back: return "back";
        case Semantic::base: return "base";
        case Semantic::baseDiffuse: return "baseDiffuse";
        case Semantic::beamParticle: return "beamParticle";
        case Semantic::beamParticle_fx_globals: return "beamParticle_fx_globals";
        case Semantic::beam_mask: return "beam_mask";
        case Semantic::blackPoint: return "blackPoint";
        case Semantic::blendStrength: return "blendStrength";
        case Semantic::bloom: return "bloom";
        case Semantic::bloom_fx_globals: return "bloom_fx_globals";
        case Semantic::bloomblur: return "bloomblur";
        case Semantic::bloomblur_fx_globals: return "bloomblur_fx_globals";
        case Semantic::blur: return "blur";
        case Semantic::blurSource: return "blurSource";
        case Semantic::blur_fx_globals: return "blur_fx_globals";
        case Semantic::boil: return "boil";
        case Semantic::both: return "both";
        case Semantic::brightness: return "brightness";
        case Semantic::bumpMap: return "bumpMap";
        case Semantic::bumpTexture: return "bumpTexture";
        case Semantic::camera: return "camera";
        case Semantic::caustic: return "caustic";
        case Semantic::caustics: return "caustics";
        case Semantic::cloud_fxh: return "cloud_fxh";
        case Semantic::clover: return "clover";
        case Semantic::clover_N: return "clover_N";
        case Semantic::cm: return "cm";
        case Semantic::color: return "color";
        case Semantic::colorMap: return "colorMap";
        case Semantic::colorMapCube: return "colorMapCube";
        case Semantic::colorTexture: return "colorTexture";
        case Semantic::color_override: return "color_override";
        case Semantic::colorkey_identity: return "colorkey_identity";
        case Semantic::common_fxh: return "common_fxh";
        case Semantic::contribution: return "contribution";
        case Semantic::coordinates: return "coordinates";
        case Semantic::cube: return "cube";
        case Semantic::dark: return "dark";
        case Semantic::daylightCompensator: return "daylightCompensator";
        case Semantic::dds: return "dds";
        case Semantic::debugColors: return "debugColors";
        case Semantic::debugLod: return "debugLod";
        case Semantic::debug_font: return "debug_font";
        case Semantic::decal: return "decal";
        case Semantic::densityTexture: return "densityTexture";
        case Semantic::depthBias: return "depthBias";
        case Semantic::depthSource: return "depthSource";
        case Semantic::depthTexture: return "depthTexture";
        case Semantic::deres_fxh: return "deres_fxh";
        case Semantic::detail: return "detail";
        case Semantic::detailBlendTexture: return "detailBlendTexture";
        case Semantic::detailBlendTexture1: return "detailBlendTexture1";
        case Semantic::detailBlendTexture2: return "detailBlendTexture2";
        case Semantic::detailBlendTexture3: return "detailBlendTexture3";
        case Semantic::detailBlendTexture4: return "detailBlendTexture4";
        case Semantic::detailBlendTexture5: return "detailBlendTexture5";
        case Semantic::detailBump: return "detailBump";
        case Semantic::detailMaskTexture: return "detailMaskTexture";
        case Semantic::detailMaskUsageOrder: return "detailMaskUsageOrder";
        case Semantic::detailScale: return "detailScale";
        case Semantic::detailScale5: return "detailScale5";
        case Semantic::detailTexture: return "detailTexture";
        case Semantic::different: return "different";
        case Semantic::diffuse2Texture: return "diffuse2Texture";
        case Semantic::diffuseTexture: return "diffuseTexture";
        case Semantic::dirblur: return "dirblur";
        case Semantic::direction: return "direction";
        case Semantic::directional: return "directional";
        case Semantic::disables: return "disables";
        case Semantic::distortion: return "distortion";
        case Semantic::distortionFixup: return "distortionFixup";
        case Semantic::downsampleDepth: return "downsampleDepth";
        case Semantic::drift: return "drift";
        case Semantic::e_Texture: return "e_Texture";
        case Semantic::elasticity: return "elasticity";
        case Semantic::emissive: return "emissive";
        case Semantic::enabled: return "enabled";
        case Semantic::ev: return "ev";
        case Semantic::eye: return "eye";
        case Semantic::f: return "f";
        case Semantic::fLodNearDistance: return "fLodNearDistance";
        case Semantic::fPositionScale: return "fPositionScale";
        case Semantic::fRcpLodRange: return "fRcpLodRange";
        case Semantic::fReplication: return "fReplication";
        case Semantic::filldepth: return "filldepth";
        case Semantic::filldepth_fx_globals: return "filldepth_fx_globals";
        case Semantic::flare: return "flare";
        case Semantic::flare_fx_globals: return "flare_fx_globals";
        case Semantic::float2: return "float2";
        case Semantic::float3: return "float3";
        case Semantic::float4: return "float4";
        case Semantic::float4x3: return "float4x3";
        case Semantic::float4x4: return "float4x4";
        case Semantic::flora: return "flora";
        case Semantic::floraModel: return "floraModel";
        case Semantic::floraModelInstanced: return "floraModelInstanced";
        case Semantic::floraModelInstanced_fx_globals: return "floraModelInstanced_fx_globals";
        case Semantic::floraModel_fx_globals: return "floraModel_fx_globals";
        case Semantic::floraModel_rsm: return "floraModel_rsm";
        case Semantic::floraModel_rsm_fx_globals: return "floraModel_rsm_fx_globals";
        case Semantic::flora_fx_globals: return "flora_fx_globals";
        case Semantic::flora_fxh: return "flora_fxh";
        case Semantic::floramodel_fx: return "floramodel_fx";
        case Semantic::floramodelinstanced_fx: return "floramodelinstanced_fx";
        case Semantic::foam: return "foam";
        case Semantic::foam_NRM: return "foam_NRM";
        case Semantic::fogAngleColorGradientTexture: return "fogAngleColorGradientTexture";
        case Semantic::fogDepthColorGradientTexture: return "fogDepthColorGradientTexture";
        case Semantic::fogLowEnd: return "fogLowEnd";
        case Semantic::fogLowEnd_fx_globals: return "fogLowEnd_fx_globals";
        case Semantic::fogMap: return "fogMap";
        case Semantic::fog_fx_globals: return "fog_fx_globals";
        case Semantic::fog_fxh: return "fog_fxh";
        case Semantic::fogblur: return "fogblur";
        case Semantic::fogblur_fx_globals: return "fogblur_fx_globals";
        case Semantic::foliage_fx: return "foliage_fx";
        case Semantic::foliageglowscroll_fx: return "foliageglowscroll_fx";
        case Semantic::foliageglowscrollinstanced_fx: return "foliageglowscrollinstanced_fx";
        case Semantic::foliageinstanced_fx: return "foliageinstanced_fx";
        case Semantic::foliagesinglesided_fx: return "foliagesinglesided_fx";
        case Semantic::fontPrimitive: return "fontPrimitive";
        case Semantic::fontPrimitiveScreenSpace: return "fontPrimitiveScreenSpace";
        case Semantic::fontPrimitive_fx_globals: return "fontPrimitive_fx_globals";
        case Semantic::forcefield_fxh: return "forcefield_fxh";
        case Semantic::forcefieldcolor_fx: return "forcefieldcolor_fx";
        case Semantic::forcefieldcolor_planar_fx: return "forcefieldcolor_planar_fx";
        case Semantic::format: return "format";
        case Semantic::frameCount: return "frameCount";
        case Semantic::fresnel_func: return "fresnel_func";
        case Semantic::front: return "front";
        case Semantic::g_Accumulate: return "g_Accumulate";
        case Semantic::g_AlphaContrast: return "g_AlphaContrast";
        case Semantic::g_Ascroll1_U: return "g_Ascroll1_U";
        case Semantic::g_Ascroll1_V: return "g_Ascroll1_V";
        case Semantic::g_Ascroll2_U: return "g_Ascroll2_U";
        case Semantic::g_Ascroll2_V: return "g_Ascroll2_V";
        case Semantic::g_Ascroll3_U: return "g_Ascroll3_U";
        case Semantic::g_Ascroll3_V: return "g_Ascroll3_V";
        case Semantic::g_BackFaceFadeDis: return "g_BackFaceFadeDis";
        case Semantic::g_BackGroundOpacity: return "g_BackGroundOpacity";
        case Semantic::g_Background: return "g_Background";
        case Semantic::g_BackgroundAlpha: return "g_BackgroundAlpha";
        case Semantic::g_BackgroundBoost: return "g_BackgroundBoost";
        case Semantic::g_BackgroundColor: return "g_BackgroundColor";
        case Semantic::g_BacksideBlur: return "g_BacksideBlur";
        case Semantic::g_BacksideDesat: return "g_BacksideDesat";
        case Semantic::g_BacksideSpec: return "g_BacksideSpec";
        case Semantic::g_BaseDiffuseTexture: return "g_BaseDiffuseTexture";
        case Semantic::g_BiasNormals: return "g_BiasNormals";
        case Semantic::g_BlendMaskTexture: return "g_BlendMaskTexture";
        case Semantic::g_BloomBlurStages: return "g_BloomBlurStages";
        case Semantic::g_BlurIntensity: return "g_BlurIntensity";
        case Semantic::g_Boost: return "g_Boost";
        case Semantic::g_Boost1: return "g_Boost1";
        case Semantic::g_Boost2: return "g_Boost2";
        case Semantic::g_Boost3: return "g_Boost3";
        case Semantic::g_Brightness: return "g_Brightness";
        case Semantic::g_BumpTexture: return "g_BumpTexture";
        case Semantic::g_CameraShakeDir: return "g_CameraShakeDir";
        case Semantic::g_CausticsNMTexture: return "g_CausticsNMTexture";
        case Semantic::g_CausticsTexture: return "g_CausticsTexture";
        case Semantic::g_ColdLavaTexture: return "g_ColdLavaTexture";
        case Semantic::g_ColdLavaTiling: return "g_ColdLavaTiling";
        case Semantic::g_ColdRoll: return "g_ColdRoll";
        case Semantic::g_Color: return "g_Color";
        case Semantic::g_ColorBlend: return "g_ColorBlend";
        case Semantic::g_ColorScale: return "g_ColorScale";
        case Semantic::g_ColorScrollU: return "g_ColorScrollU";
        case Semantic::g_ColorScrollV: return "g_ColorScrollV";
        case Semantic::g_CornerFrame: return "g_CornerFrame";
        case Semantic::g_DamageA: return "g_DamageA";
        case Semantic::g_DamageB: return "g_DamageB";
        case Semantic::g_DamageCubeTexture: return "g_DamageCubeTexture";
        case Semantic::g_DecalMainUV: return "g_DecalMainUV";
        case Semantic::g_DecalTintHighlight: return "g_DecalTintHighlight";
        case Semantic::g_DecalTintMidtone: return "g_DecalTintMidtone";
        case Semantic::g_DecalTintRotation: return "g_DecalTintRotation";
        case Semantic::g_DecalTintScale: return "g_DecalTintScale";
        case Semantic::g_DecalTintShadow: return "g_DecalTintShadow";
        case Semantic::g_DecalTintTexture: return "g_DecalTintTexture";
        case Semantic::g_DecalTintTranslation: return "g_DecalTintTranslation";
        case Semantic::g_DecalUVSet: return "g_DecalUVSet";
        case Semantic::g_DepthImpact: return "g_DepthImpact";
        case Semantic::g_DepthOfFieldTransition: return "g_DepthOfFieldTransition";
        case Semantic::g_DetailBumpTexture: return "g_DetailBumpTexture";
        case Semantic::g_DetailBumpiness: return "g_DetailBumpiness";
        case Semantic::g_DetailBumpinessB: return "g_DetailBumpinessB";
        case Semantic::g_DetailFreq: return "g_DetailFreq";
        case Semantic::g_DetailFreqB: return "g_DetailFreqB";
        case Semantic::g_DetailMaskTexture: return "g_DetailMaskTexture";
        case Semantic::g_DetailScale: return "g_DetailScale";
        case Semantic::g_DetailSelectB: return "g_DetailSelectB";
        case Semantic::g_DiffuseBTexture: return "g_DiffuseBTexture";
        case Semantic::g_DistortionLameScale: return "g_DistortionLameScale";
        case Semantic::g_DizzyIntensity: return "g_DizzyIntensity";
        case Semantic::g_E3Blur: return "g_E3Blur";
        case Semantic::g_E3Brightness: return "g_E3Brightness";
        case Semantic::g_E3Desat: return "g_E3Desat";
        case Semantic::g_EmissiveIsTransB: return "g_EmissiveIsTransB";
        case Semantic::g_EmissiveTexture: return "g_EmissiveTexture";
        case Semantic::g_EmpireTintA: return "g_EmpireTintA";
        case Semantic::g_EmpireTintB: return "g_EmpireTintB";
        case Semantic::g_EnableExtraTint: return "g_EnableExtraTint";
        case Semantic::g_EvComps: return "g_EvComps";
        case Semantic::g_ExtraTintColorA: return "g_ExtraTintColorA";
        case Semantic::g_ExtraTintColorB: return "g_ExtraTintColorB";
        case Semantic::g_ExtraTintOpacity: return "g_ExtraTintOpacity";
        case Semantic::g_ExtraTintScale: return "g_ExtraTintScale";
        case Semantic::g_ExtraTintTexture: return "g_ExtraTintTexture";
        case Semantic::g_FFColorAutoTileFreq: return "g_FFColorAutoTileFreq";
        case Semantic::g_FFColorColorMapScrollX: return "g_FFColorColorMapScrollX";
        case Semantic::g_FFColorColorMapScrollY: return "g_FFColorColorMapScrollY";
        case Semantic::g_FFColorColorMapTiling: return "g_FFColorColorMapTiling";
        case Semantic::g_FFColorColorTexture: return "g_FFColorColorTexture";
        case Semantic::g_FFColorCoordinateSpace: return "g_FFColorCoordinateSpace";
        case Semantic::g_FFColorDistortionTexture: return "g_FFColorDistortionTexture";
        case Semantic::g_FFColorHottness: return "g_FFColorHottness";
        case Semantic::g_FFColorNoiseAlpha: return "g_FFColorNoiseAlpha";
        case Semantic::g_FFColorNoiseThickness: return "g_FFColorNoiseThickness";
        case Semantic::g_FFColorNoiseTiling: return "g_FFColorNoiseTiling";
        case Semantic::g_FFColorPerlinNoise3DTexture: return "g_FFColorPerlinNoise3DTexture";
        case Semantic::g_FFColorreduceBloom: return "g_FFColorreduceBloom";
        case Semantic::g_FFDisPlanarDistortionTexture: return "g_FFDisPlanarDistortionTexture";
        case Semantic::g_FFDistortionDistortionTexture: return "g_FFDistortionDistortionTexture";
        case Semantic::g_FFDistortionScaleU: return "g_FFDistortionScaleU";
        case Semantic::g_FFDistortionScaleV: return "g_FFDistortionScaleV";
        case Semantic::g_FFDistortionSpeedU: return "g_FFDistortionSpeedU";
        case Semantic::g_FFDistortionSpeedV: return "g_FFDistortionSpeedV";
        case Semantic::g_FFPlanarAutoTileFreq: return "g_FFPlanarAutoTileFreq";
        case Semantic::g_FFPlanarColorMapScrollX: return "g_FFPlanarColorMapScrollX";
        case Semantic::g_FFPlanarColorMapScrollY: return "g_FFPlanarColorMapScrollY";
        case Semantic::g_FFPlanarColorMapTiling: return "g_FFPlanarColorMapTiling";
        case Semantic::g_FFPlanarColorTexture: return "g_FFPlanarColorTexture";
        case Semantic::g_FFPlanarCoordinateSpace: return "g_FFPlanarCoordinateSpace";
        case Semantic::g_FFPlanarDistortionTexture: return "g_FFPlanarDistortionTexture";
        case Semantic::g_FFPlanarHottness: return "g_FFPlanarHottness";
        case Semantic::g_FFPlanarNoiseAlpha: return "g_FFPlanarNoiseAlpha";
        case Semantic::g_FFPlanarNoiseThickness: return "g_FFPlanarNoiseThickness";
        case Semantic::g_FFPlanarNoiseTiling: return "g_FFPlanarNoiseTiling";
        case Semantic::g_FFPlanarPerlinNoise3DTexture: return "g_FFPlanarPerlinNoise3DTexture";
        case Semantic::g_FFPlanarreduceBloom: return "g_FFPlanarreduceBloom";
        case Semantic::g_FadeModelMaterial: return "g_FadeModelMaterial";
        case Semantic::g_FadeOverride: return "g_FadeOverride";
        case Semantic::g_FadeTexture: return "g_FadeTexture";
        case Semantic::g_FlashIntensity: return "g_FlashIntensity";
        case Semantic::g_FlimmeringAdjustment: return "g_FlimmeringAdjustment";
        case Semantic::g_FoamBrightness: return "g_FoamBrightness";
        case Semantic::g_FoamColor: return "g_FoamColor";
        case Semantic::g_FoamEnd: return "g_FoamEnd";
        case Semantic::g_FoamNormalTexture: return "g_FoamNormalTexture";
        case Semantic::g_FoamScale: return "g_FoamScale";
        case Semantic::g_FoamScrollU: return "g_FoamScrollU";
        case Semantic::g_FoamScrollV: return "g_FoamScrollV";
        case Semantic::g_FoamStart: return "g_FoamStart";
        case Semantic::g_FoamTexture: return "g_FoamTexture";
        case Semantic::g_FogOfWarParams: return "g_FogOfWarParams";
        case Semantic::g_ForceFieldBGOpacity: return "g_ForceFieldBGOpacity";
        case Semantic::g_ForceFieldBlendMode: return "g_ForceFieldBlendMode";
        case Semantic::g_ForceFieldCullMode: return "g_ForceFieldCullMode";
        case Semantic::g_ForceFieldNoiseSpeed: return "g_ForceFieldNoiseSpeed";
        case Semantic::g_ForceFieldOpacity: return "g_ForceFieldOpacity";
        case Semantic::g_ForceFieldShieldBGColor: return "g_ForceFieldShieldBGColor";
        case Semantic::g_ForceFieldShieldColor: return "g_ForceFieldShieldColor";
        case Semantic::g_ForwardVector: return "g_ForwardVector";
        case Semantic::g_FrameColor: return "g_FrameColor";
        case Semantic::g_FrameFade: return "g_FrameFade";
        case Semantic::g_FrameRatio: return "g_FrameRatio";
        case Semantic::g_FrameWidth: return "g_FrameWidth";
        case Semantic::g_FullScreenEffectDOF: return "g_FullScreenEffectDOF";
        case Semantic::g_FullScreenEffectNone: return "g_FullScreenEffectNone";
        case Semantic::g_FullScreenEffectThermal: return "g_FullScreenEffectThermal";
        case Semantic::g_FullScreenEffectVR: return "g_FullScreenEffectVR";
        case Semantic::g_GlowBrightness: return "g_GlowBrightness";
        case Semantic::g_GlowContrast: return "g_GlowContrast";
        case Semantic::g_GlowUVScale: return "g_GlowUVScale";
        case Semantic::g_GridPatternTexture: return "g_GridPatternTexture";
        case Semantic::g_Horizontal: return "g_Horizontal";
        case Semantic::g_HotLavaTexture: return "g_HotLavaTexture";
        case Semantic::g_HotLavaTiling: return "g_HotLavaTiling";
        case Semantic::g_HotRoll: return "g_HotRoll";
        case Semantic::g_InnerOuter: return "g_InnerOuter";
        case Semantic::g_InteriorProbeWeight: return "g_InteriorProbeWeight";
        case Semantic::g_IrisClampHigh: return "g_IrisClampHigh";
        case Semantic::g_IrisClampLow: return "g_IrisClampLow";
        case Semantic::g_IrisVisionOffset: return "g_IrisVisionOffset";
        case Semantic::g_IsShadowGenPass: return "g_IsShadowGenPass";
        case Semantic::g_KeyLuminance: return "g_KeyLuminance";
        case Semantic::g_LODScale: return "g_LODScale";
        case Semantic::g_LeftFrame: return "g_LeftFrame";
        case Semantic::g_Length: return "g_Length";
        case Semantic::g_MetersPerSecond: return "g_MetersPerSecond";
        case Semantic::g_ModelDoubleSided: return "g_ModelDoubleSided";
        case Semantic::g_NoiseSpeed: return "g_NoiseSpeed";
        case Semantic::g_NoiseThickness: return "g_NoiseThickness";
        case Semantic::g_NoiseTiling: return "g_NoiseTiling";
        case Semantic::g_NormalDistortion: return "g_NormalDistortion";
        case Semantic::g_Opacity: return "g_Opacity";
        case Semantic::g_Overlay1ColorChannel: return "g_Overlay1ColorChannel";
        case Semantic::g_Overlay1Texture: return "g_Overlay1Texture";
        case Semantic::g_Overlay1Tiling: return "g_Overlay1Tiling";
        case Semantic::g_Overlay1UVSet: return "g_Overlay1UVSet";
        case Semantic::g_Overlay2ColorChannel: return "g_Overlay2ColorChannel";
        case Semantic::g_Overlay2Texture: return "g_Overlay2Texture";
        case Semantic::g_Overlay2Tiling: return "g_Overlay2Tiling";
        case Semantic::g_Overlay2UVSet: return "g_Overlay2UVSet";
        case Semantic::g_Overlay3ColorChannel: return "g_Overlay3ColorChannel";
        case Semantic::g_Overlay3Texture: return "g_Overlay3Texture";
        case Semantic::g_Overlay3Tiling: return "g_Overlay3Tiling";
        case Semantic::g_Overlay3UVSet: return "g_Overlay3UVSet";
        case Semantic::g_Overlay4ColorChannel: return "g_Overlay4ColorChannel";
        case Semantic::g_Overlay4Texture: return "g_Overlay4Texture";
        case Semantic::g_Overlay4Tiling: return "g_Overlay4Tiling";
        case Semantic::g_Overlay4UVSet: return "g_Overlay4UVSet";
        case Semantic::g_OverlayA: return "g_OverlayA";
        case Semantic::g_OverlayB: return "g_OverlayB";
        case Semantic::g_OverlayEdge: return "g_OverlayEdge";
        case Semantic::g_OverlayNMTexture: return "g_OverlayNMTexture";
        case Semantic::g_OverlayScale: return "g_OverlayScale";
        case Semantic::g_OverlaySmoothing: return "g_OverlaySmoothing";
        case Semantic::g_OverlayTexture: return "g_OverlayTexture";
        case Semantic::g_OverlayTiling: return "g_OverlayTiling";
        case Semantic::g_PatternAlpha: return "g_PatternAlpha";
        case Semantic::g_PatternColor: return "g_PatternColor";
        case Semantic::g_PatternGlow: return "g_PatternGlow";
        case Semantic::g_PatternOpacity: return "g_PatternOpacity";
        case Semantic::g_PatternScaler: return "g_PatternScaler";
        case Semantic::g_PatternTiling: return "g_PatternTiling";
        case Semantic::g_PeakAlphaFromTexture: return "g_PeakAlphaFromTexture";
        case Semantic::g_PerlinNoise3DTexture: return "g_PerlinNoise3DTexture";
        case Semantic::g_PolarizerStrength: return "g_PolarizerStrength";
        case Semantic::g_Power: return "g_Power";
        case Semantic::g_PreLitTexture: return "g_PreLitTexture";
        case Semantic::g_ProbeEvComps: return "g_ProbeEvComps";
        case Semantic::g_RollTiling: return "g_RollTiling";
        case Semantic::g_Rotation: return "g_Rotation";
        case Semantic::g_SaturationIntensity: return "g_SaturationIntensity";
        case Semantic::g_Scale: return "g_Scale";
        case Semantic::g_ScaleB: return "g_ScaleB";
        case Semantic::g_ScaleBias: return "g_ScaleBias";
        case Semantic::g_ScaleEnd: return "g_ScaleEnd";
        case Semantic::g_ScaleMax: return "g_ScaleMax";
        case Semantic::g_ScaleMin: return "g_ScaleMin";
        case Semantic::g_ScalePower: return "g_ScalePower";
        case Semantic::g_ScaleStart: return "g_ScaleStart";
        case Semantic::g_ScaleX: return "g_ScaleX";
        case Semantic::g_ScaleY: return "g_ScaleY";
        case Semantic::g_Scaler: return "g_Scaler";
        case Semantic::g_ScatterConstants: return "g_ScatterConstants";
        case Semantic::g_ScatterWavelengths: return "g_ScatterWavelengths";
        case Semantic::g_ScrollU: return "g_ScrollU";
        case Semantic::g_ScrollV: return "g_ScrollV";
        case Semantic::g_ShieldColor: return "g_ShieldColor";
        case Semantic::g_ShieldDistance: return "g_ShieldDistance";
        case Semantic::g_ShieldDistortion: return "g_ShieldDistortion";
        case Semantic::g_ShieldHottness: return "g_ShieldHottness";
        case Semantic::g_ShieldPatternTexture: return "g_ShieldPatternTexture";
        case Semantic::g_ShowDecalTint: return "g_ShowDecalTint";
        case Semantic::g_ShowTilingTint: return "g_ShowTilingTint";
        case Semantic::g_Sigma: return "g_Sigma";
        case Semantic::g_SiltColor: return "g_SiltColor";
        case Semantic::g_SiltDepth: return "g_SiltDepth";
        case Semantic::g_SiltNFoamTexture: return "g_SiltNFoamTexture";
        case Semantic::g_SingleSided: return "g_SingleSided";
        case Semantic::g_SkyCubeTexture: return "g_SkyCubeTexture";
        case Semantic::g_SparkFlowX: return "g_SparkFlowX";
        case Semantic::g_SparkFlowZ: return "g_SparkFlowZ";
        case Semantic::g_SparkMask: return "g_SparkMask";
        case Semantic::g_SparkOpacity: return "g_SparkOpacity";
        case Semantic::g_SpecBTexture: return "g_SpecBTexture";
        case Semantic::g_SpecTexture: return "g_SpecTexture";
        case Semantic::g_Stage: return "g_Stage";
        case Semantic::g_StarsColor: return "g_StarsColor";
        case Semantic::g_Strength: return "g_Strength";
        case Semantic::g_SunDir: return "g_SunDir";
        case Semantic::g_SurfaceScale: return "g_SurfaceScale";
        case Semantic::g_TAAEnabled: return "g_TAAEnabled";
        case Semantic::g_TilingOverlayBTexture: return "g_TilingOverlayBTexture";
        case Semantic::g_TilingOverlayTexture: return "g_TilingOverlayTexture";
        case Semantic::g_TilingScaleB: return "g_TilingScaleB";
        case Semantic::g_TilingTintHighlight: return "g_TilingTintHighlight";
        case Semantic::g_TilingTintMidtone: return "g_TilingTintMidtone";
        case Semantic::g_TilingTintOpacity: return "g_TilingTintOpacity";
        case Semantic::g_TilingTintRotation: return "g_TilingTintRotation";
        case Semantic::g_TilingTintScale: return "g_TilingTintScale";
        case Semantic::g_TilingTintShadow: return "g_TilingTintShadow";
        case Semantic::g_TilingTintTexture: return "g_TilingTintTexture";
        case Semantic::g_TilingTintTranslation: return "g_TilingTintTranslation";
        case Semantic::g_Tint: return "g_Tint";
        case Semantic::g_Tint1: return "g_Tint1";
        case Semantic::g_Tint2: return "g_Tint2";
        case Semantic::g_Tint3: return "g_Tint3";
        case Semantic::g_TopFrame: return "g_TopFrame";
        case Semantic::g_TransitionDirection: return "g_TransitionDirection";
        case Semantic::g_TransitionOffset: return "g_TransitionOffset";
        case Semantic::g_TransitionSharpness: return "g_TransitionSharpness";
        case Semantic::g_TransitionWidth: return "g_TransitionWidth";
        case Semantic::g_Transmittance: return "g_Transmittance";
        case Semantic::g_Transparency: return "g_Transparency";
        case Semantic::g_UVsPerMeter0: return "g_UVsPerMeter0";
        case Semantic::g_UVsPerMeter1: return "g_UVsPerMeter1";
        case Semantic::g_UVsPerMeter2: return "g_UVsPerMeter2";
        case Semantic::g_UVsPerMeter3: return "g_UVsPerMeter3";
        case Semantic::g_UseUV0ForDetailBump: return "g_UseUV0ForDetailBump";
        case Semantic::g_UseUV1ForOverlayMask: return "g_UseUV1ForOverlayMask";
        case Semantic::g_WaterDepthTexture: return "g_WaterDepthTexture";
        case Semantic::g_WaterReflectionTexture: return "g_WaterReflectionTexture";
        case Semantic::g_Wave: return "g_Wave";
        case Semantic::g_WaveScrollU: return "g_WaveScrollU";
        case Semantic::g_WaveScrollV: return "g_WaveScrollV";
        case Semantic::g_Width: return "g_Width";
        case Semantic::g_WorldScale: return "g_WorldScale";
        case Semantic::g_YawPitchRollFace: return "g_YawPitchRollFace";
        case Semantic::g_adjustToLighting: return "g_adjustToLighting";
        case Semantic::g_allowMotionBlur: return "g_allowMotionBlur";
        case Semantic::g_alphaClipShadowBias: return "g_alphaClipShadowBias";
        case Semantic::g_alphaEnabled: return "g_alphaEnabled";
        case Semantic::g_ambience: return "g_ambience";
        case Semantic::g_ambientLightColor: return "g_ambientLightColor";
        case Semantic::g_amplitude: return "g_amplitude";
        case Semantic::g_angularFrequency: return "g_angularFrequency";
        case Semantic::g_animTiling: return "g_animTiling";
        case Semantic::g_animationOffsetU: return "g_animationOffsetU";
        case Semantic::g_animationOffsetV: return "g_animationOffsetV";
        case Semantic::g_animationShift: return "g_animationShift";
        case Semantic::g_antiBloom: return "g_antiBloom";
        case Semantic::g_aoBlackPoint: return "g_aoBlackPoint";
        case Semantic::g_aoShadowFactor: return "g_aoShadowFactor";
        case Semantic::g_appWaterHeight: return "g_appWaterHeight";
        case Semantic::g_applyToSky: return "g_applyToSky";
        case Semantic::g_backfaceMaxOpacity: return "g_backfaceMaxOpacity";
        case Semantic::g_backfaceMinOpacity: return "g_backfaceMinOpacity";
        case Semantic::g_backfaceRefraction: return "g_backfaceRefraction";
        case Semantic::g_backfaceRefractionDistanceFactor: return "g_backfaceRefractionDistanceFactor";
        case Semantic::g_backfaceTingIntensityFactor: return "g_backfaceTingIntensityFactor";
        case Semantic::g_blackShiftStrength: return "g_blackShiftStrength";
        case Semantic::g_blend: return "g_blend";
        case Semantic::g_bloomEnabled: return "g_bloomEnabled";
        case Semantic::g_bloomIn: return "g_bloomIn";
        case Semantic::g_bloomStrength: return "g_bloomStrength";
        case Semantic::g_bloomTexture: return "g_bloomTexture";
        case Semantic::g_blueNoiseTexture: return "g_blueNoiseTexture";
        case Semantic::g_blueSource: return "g_blueSource";
        case Semantic::g_blurTexture: return "g_blurTexture";
        case Semantic::g_blurTexture2: return "g_blurTexture2";
        case Semantic::g_boneMatrices: return "g_boneMatrices";
        case Semantic::g_bonePrevMatrices: return "g_bonePrevMatrices";
        case Semantic::g_brdfLookupTexture: return "g_brdfLookupTexture";
        case Semantic::g_brightness: return "g_brightness";
        case Semantic::g_bumpCleanup: return "g_bumpCleanup";
        case Semantic::g_bumpMap1: return "g_bumpMap1";
        case Semantic::g_bumpMap2: return "g_bumpMap2";
        case Semantic::g_bumpMap3: return "g_bumpMap3";
        case Semantic::g_bumpStrength: return "g_bumpStrength";
        case Semantic::g_bumpTexture: return "g_bumpTexture";
        case Semantic::g_bumpiness1: return "g_bumpiness1";
        case Semantic::g_bumpiness2: return "g_bumpiness2";
        case Semantic::g_bumpiness3: return "g_bumpiness3";
        case Semantic::g_cameraDelta: return "g_cameraDelta";
        case Semantic::g_cameraEye: return "g_cameraEye";
        case Semantic::g_cameraMatrix: return "g_cameraMatrix";
        case Semantic::g_cameraShadow: return "g_cameraShadow";
        case Semantic::g_causticFadeCoefA: return "g_causticFadeCoefA";
        case Semantic::g_causticFadeCoefB: return "g_causticFadeCoefB";
        case Semantic::g_causticHeightFadeInEnd: return "g_causticHeightFadeInEnd";
        case Semantic::g_causticHeightFadeInStart: return "g_causticHeightFadeInStart";
        case Semantic::g_causticOverlayTexture: return "g_causticOverlayTexture";
        case Semantic::g_causticOverlayTexture2: return "g_causticOverlayTexture2";
        case Semantic::g_cavityThreshold: return "g_cavityThreshold";
        case Semantic::g_center: return "g_center";
        case Semantic::g_centerFalloffCutoff: return "g_centerFalloffCutoff";
        case Semantic::g_clarityOfSky: return "g_clarityOfSky";
        case Semantic::g_clear: return "g_clear";
        case Semantic::g_clipSpaceMotion: return "g_clipSpaceMotion";
        case Semantic::g_cloakColor: return "g_cloakColor";
        case Semantic::g_cloakDarkLightColor: return "g_cloakDarkLightColor";
        case Semantic::g_cloudShadowAlphaPower: return "g_cloudShadowAlphaPower";
        case Semantic::g_cloudWorldMatrix: return "g_cloudWorldMatrix";
        case Semantic::g_color: return "g_color";
        case Semantic::g_color1Texture: return "g_color1Texture";
        case Semantic::g_color2Texture: return "g_color2Texture";
        case Semantic::g_color3Texture: return "g_color3Texture";
        case Semantic::g_colorBlindFilter: return "g_colorBlindFilter";
        case Semantic::g_colorBlindFilterAmount: return "g_colorBlindFilterAmount";
        case Semantic::g_colorBlindFilterStrength: return "g_colorBlindFilterStrength";
        case Semantic::g_colorGrading: return "g_colorGrading";
        case Semantic::g_colorKeyLerp: return "g_colorKeyLerp";
        case Semantic::g_colorKeyTextureA: return "g_colorKeyTextureA";
        case Semantic::g_colorKeyTextureB: return "g_colorKeyTextureB";
        case Semantic::g_colorShiftRate: return "g_colorShiftRate";
        case Semantic::g_colorShiftStrength: return "g_colorShiftStrength";
        case Semantic::g_colorTexture: return "g_colorTexture";
        case Semantic::g_coloredFogEnabled: return "g_coloredFogEnabled";
        case Semantic::g_contrast: return "g_contrast";
        case Semantic::g_convertDepthMode: return "g_convertDepthMode";
        case Semantic::g_cubeFace: return "g_cubeFace";
        case Semantic::g_cubeFaceDir: return "g_cubeFaceDir";
        case Semantic::g_cubeFaceDown: return "g_cubeFaceDown";
        case Semantic::g_cubeFaceRight: return "g_cubeFaceRight";
        case Semantic::g_cumulusContrast: return "g_cumulusContrast";
        case Semantic::g_cumulusHeight: return "g_cumulusHeight";
        case Semantic::g_cumulusScrollU: return "g_cumulusScrollU";
        case Semantic::g_cumulusScrollV: return "g_cumulusScrollV";
        case Semantic::g_cumulusTiling: return "g_cumulusTiling";
        case Semantic::g_deResHottness: return "g_deResHottness";
        case Semantic::g_deltaTime: return "g_deltaTime";
        case Semantic::g_density: return "g_density";
        case Semantic::g_depth: return "g_depth";
        case Semantic::g_depthOffset: return "g_depthOffset";
        case Semantic::g_depthOpacityNegativeBias: return "g_depthOpacityNegativeBias";
        case Semantic::g_depthPrePass: return "g_depthPrePass";
        case Semantic::g_depthScale: return "g_depthScale";
        case Semantic::g_dielectricMax: return "g_dielectricMax";
        case Semantic::g_dielectricMin: return "g_dielectricMin";
        case Semantic::g_dirBlurMode: return "g_dirBlurMode";
        case Semantic::g_directionalLightColor: return "g_directionalLightColor";
        case Semantic::g_directionalLightViewSpaceDir: return "g_directionalLightViewSpaceDir";
        case Semantic::g_dirtBloomSunSkyStrAlpha: return "g_dirtBloomSunSkyStrAlpha";
        case Semantic::g_dirtLayer1SizeStrRanges: return "g_dirtLayer1SizeStrRanges";
        case Semantic::g_dirtLayer2SizeStrRanges: return "g_dirtLayer2SizeStrRanges";
        case Semantic::g_dirtLayerDensities: return "g_dirtLayerDensities";
        case Semantic::g_dirtNoiseScaleStr: return "g_dirtNoiseScaleStr";
        case Semantic::g_distanceThicknessParams: return "g_distanceThicknessParams";
        case Semantic::g_distortionTexture: return "g_distortionTexture";
        case Semantic::g_dontCorrectCamera: return "g_dontCorrectCamera";
        case Semantic::g_eNoise3DTexture: return "g_eNoise3DTexture";
        case Semantic::g_edge: return "g_edge";
        case Semantic::g_effectID: return "g_effectID";
        case Semantic::g_emissiveCorrectionLimit: return "g_emissiveCorrectionLimit";
        case Semantic::g_emissiveCorrectionScale: return "g_emissiveCorrectionScale";
        case Semantic::g_emissiveScale: return "g_emissiveScale";
        case Semantic::g_emissiveSlope: return "g_emissiveSlope";
        case Semantic::g_emitsHeat: return "g_emitsHeat";
        case Semantic::g_enable: return "g_enable";
        case Semantic::g_enableClouds: return "g_enableClouds";
        case Semantic::g_enableColorGrading: return "g_enableColorGrading";
        case Semantic::g_enableFogTurbulence: return "g_enableFogTurbulence";
        case Semantic::g_enablePlanarMapAB: return "g_enablePlanarMapAB";
        case Semantic::g_enableSnow: return "g_enableSnow";
        case Semantic::g_enableSway: return "g_enableSway";
        case Semantic::g_enableTileUV0: return "g_enableTileUV0";
        case Semantic::g_enableVignette: return "g_enableVignette";
        case Semantic::g_eyePos: return "g_eyePos";
        case Semantic::g_fDepthTransparancy: return "g_fDepthTransparancy";
        case Semantic::g_fadeOutEnd: return "g_fadeOutEnd";
        case Semantic::g_fadeOutStart: return "g_fadeOutStart";
        case Semantic::g_farClip: return "g_farClip";
        case Semantic::g_filterMode: return "g_filterMode";
        case Semantic::g_flareColor: return "g_flareColor";
        case Semantic::g_flareFocus: return "g_flareFocus";
        case Semantic::g_flareSize: return "g_flareSize";
        case Semantic::g_flareZoom: return "g_flareZoom";
        case Semantic::g_floraNoiseTexture: return "g_floraNoiseTexture";
        case Semantic::g_foamDepthBias: return "g_foamDepthBias";
        case Semantic::g_foamEnabled: return "g_foamEnabled";
        case Semantic::g_foamFallOff: return "g_foamFallOff";
        case Semantic::g_foamTexture: return "g_foamTexture";
        case Semantic::g_foamUVScale: return "g_foamUVScale";
        case Semantic::g_foamWaterTiling: return "g_foamWaterTiling";
        case Semantic::g_focus: return "g_focus";
        case Semantic::g_fogColor: return "g_fogColor";
        case Semantic::g_fogDensity: return "g_fogDensity";
        case Semantic::g_fogDepthHorizontalMult: return "g_fogDepthHorizontalMult";
        case Semantic::g_fogDistributionParams: return "g_fogDistributionParams";
        case Semantic::g_fogEnable: return "g_fogEnable";
        case Semantic::g_fogFar: return "g_fogFar";
        case Semantic::g_fogFloor: return "g_fogFloor";
        case Semantic::g_fogGradient: return "g_fogGradient";
        case Semantic::g_fogHorizontalGradientVector: return "g_fogHorizontalGradientVector";
        case Semantic::g_fogShadowsEnable: return "g_fogShadowsEnable";
        case Semantic::g_fogSkyFar: return "g_fogSkyFar";
        case Semantic::g_fogSkyNear: return "g_fogSkyNear";
        case Semantic::g_fogTurbBoilSpeed: return "g_fogTurbBoilSpeed";
        case Semantic::g_fogTurbDensityRange: return "g_fogTurbDensityRange";
        case Semantic::g_fogTurbDirection: return "g_fogTurbDirection";
        case Semantic::g_fogTurbScale: return "g_fogTurbScale";
        case Semantic::g_fogTurbSpeed: return "g_fogTurbSpeed";
        case Semantic::g_fontTexture: return "g_fontTexture";
        case Semantic::g_foregroundWScale: return "g_foregroundWScale";
        case Semantic::g_foregroundZBias: return "g_foregroundZBias";
        case Semantic::g_foregroundZScale: return "g_foregroundZScale";
        case Semantic::g_frameOn: return "g_frameOn";
        case Semantic::g_fresnel: return "g_fresnel";
        case Semantic::g_fresnelFuncTexture: return "g_fresnelFuncTexture";
        case Semantic::g_gbuffer0Texture: return "g_gbuffer0Texture";
        case Semantic::g_gbuffer1Texture: return "g_gbuffer1Texture";
        case Semantic::g_gbuffer2Texture: return "g_gbuffer2Texture";
        case Semantic::g_gbuffer3Texture: return "g_gbuffer3Texture";
        case Semantic::g_glaze: return "g_glaze";
        case Semantic::g_glazeMax: return "g_glazeMax";
        case Semantic::g_glazeMin: return "g_glazeMin";
        case Semantic::g_globalResolutionScale: return "g_globalResolutionScale";
        case Semantic::g_glow: return "g_glow";
        case Semantic::g_glowBase: return "g_glowBase";
        case Semantic::g_glowMax: return "g_glowMax";
        case Semantic::g_glowMin: return "g_glowMin";
        case Semantic::g_glowThickness: return "g_glowThickness";
        case Semantic::g_godRayEndFade: return "g_godRayEndFade";
        case Semantic::g_godRayStartFade: return "g_godRayStartFade";
        case Semantic::g_greenSource: return "g_greenSource";
        case Semantic::g_grungeAmount: return "g_grungeAmount";
        case Semantic::g_hazeSunSkyStr: return "g_hazeSunSkyStr";
        case Semantic::g_hdrTexture: return "g_hdrTexture";
        case Semantic::g_highQualityLighting: return "g_highQualityLighting";
        case Semantic::g_highlightDomain: return "g_highlightDomain";
        case Semantic::g_highlightSaturation: return "g_highlightSaturation";
        case Semantic::g_highlightTint: return "g_highlightTint";
        case Semantic::g_holoColor: return "g_holoColor";
        case Semantic::g_holoHottness: return "g_holoHottness";
        case Semantic::g_holoOpacity: return "g_holoOpacity";
        case Semantic::g_holoReduceBloom: return "g_holoReduceBloom";
        case Semantic::g_holoTexture: return "g_holoTexture";
        case Semantic::g_holoTilingRateU: return "g_holoTilingRateU";
        case Semantic::g_holoTilingRateV: return "g_holoTilingRateV";
        case Semantic::g_hologramBlend: return "g_hologramBlend";
        case Semantic::g_hologramUVSet: return "g_hologramUVSet";
        case Semantic::g_hoodFalloffAngle: return "g_hoodFalloffAngle";
        case Semantic::g_horizonFadeHeight: return "g_horizonFadeHeight";
        case Semantic::g_horizonGlowColor: return "g_horizonGlowColor";
        case Semantic::g_horizonWidthHeightLat: return "g_horizonWidthHeightLat";
        case Semantic::g_inForeground: return "g_inForeground";
        case Semantic::g_infraRedColor: return "g_infraRedColor";
        case Semantic::g_infraRedOutlineAlpha: return "g_infraRedOutlineAlpha";
        case Semantic::g_infraRedOutlineColor: return "g_infraRedOutlineColor";
        case Semantic::g_infraRedOutlineWidth: return "g_infraRedOutlineWidth";
        case Semantic::g_infraRedRange: return "g_infraRedRange";
        case Semantic::g_infraRedScanLines: return "g_infraRedScanLines";
        case Semantic::g_infraRedWhitePoint: return "g_infraRedWhitePoint";
        case Semantic::g_invGamma: return "g_invGamma";
        case Semantic::g_inverseProjMatrix: return "g_inverseProjMatrix";
        case Semantic::g_irisTexture: return "g_irisTexture";
        case Semantic::g_ironSight: return "g_ironSight";
        case Semantic::g_isDoubleSided: return "g_isDoubleSided";
        case Semantic::g_jitterOffset: return "g_jitterOffset";
        case Semantic::g_layerWeightings: return "g_layerWeightings";
        case Semantic::g_lensEffectsEnabled: return "g_lensEffectsEnabled";
        case Semantic::g_lensEffectsTexture: return "g_lensEffectsTexture";
        case Semantic::g_lightScattering: return "g_lightScattering";
        case Semantic::g_lightingRadius: return "g_lightingRadius";
        case Semantic::g_lookupTexture: return "g_lookupTexture";
        case Semantic::g_lowEnd: return "g_lowEnd";
        case Semantic::g_m43World: return "g_m43World";
        case Semantic::g_mainSceneCameraPos: return "g_mainSceneCameraPos";
        case Semantic::g_maskResolution: return "g_maskResolution";
        case Semantic::g_maskTexture: return "g_maskTexture";
        case Semantic::g_maskViewProj: return "g_maskViewProj";
        case Semantic::g_maxDayIntensityOnColor: return "g_maxDayIntensityOnColor";
        case Semantic::g_maxDayIntensityOnFoam: return "g_maxDayIntensityOnFoam";
        case Semantic::g_maxNightIntensityOnColor: return "g_maxNightIntensityOnColor";
        case Semantic::g_maxNightIntensityOnFoam: return "g_maxNightIntensityOnFoam";
        case Semantic::g_maxPointiness: return "g_maxPointiness";
        case Semantic::g_metalic: return "g_metalic";
        case Semantic::g_metallicMax: return "g_metallicMax";
        case Semantic::g_metallicMin: return "g_metallicMin";
        case Semantic::g_midtoneSaturation: return "g_midtoneSaturation";
        case Semantic::g_minDayIntensityOnColor: return "g_minDayIntensityOnColor";
        case Semantic::g_minDayIntensityOnFoam: return "g_minDayIntensityOnFoam";
        case Semantic::g_minNightIntensityOnColor: return "g_minNightIntensityOnColor";
        case Semantic::g_minNightIntensityOnFoam: return "g_minNightIntensityOnFoam";
        case Semantic::g_mipLevel: return "g_mipLevel";
        case Semantic::g_mode: return "g_mode";
        case Semantic::g_motionBlurPower: return "g_motionBlurPower";
        case Semantic::g_motionTilesTexture: return "g_motionTilesTexture";
        case Semantic::g_nearClip: return "g_nearClip";
        case Semantic::g_nightVision: return "g_nightVision";
        case Semantic::g_nightVisionIntensity: return "g_nightVisionIntensity";
        case Semantic::g_nightVisionNoise: return "g_nightVisionNoise";
        case Semantic::g_nightVisionScanLines: return "g_nightVisionScanLines";
        case Semantic::g_nightVisionWhitePointAdjustment: return "g_nightVisionWhitePointAdjustment";
        case Semantic::g_noDepth: return "g_noDepth";
        case Semantic::g_noise: return "g_noise";
        case Semantic::g_noise3DTexture: return "g_noise3DTexture";
        case Semantic::g_noiseBoilSpeed: return "g_noiseBoilSpeed";
        case Semantic::g_noiseDriftSpeed: return "g_noiseDriftSpeed";
        case Semantic::g_noiseScale: return "g_noiseScale";
        case Semantic::g_noiseSpeed: return "g_noiseSpeed";
        case Semantic::g_noiseTex: return "g_noiseTex";
        case Semantic::g_noiseTexture: return "g_noiseTexture";
        case Semantic::g_noiseTexture2D: return "g_noiseTexture2D";
        case Semantic::g_noiseTiling: return "g_noiseTiling";
        case Semantic::g_normalMapTextureTexture: return "g_normalMapTextureTexture";
        case Semantic::g_objectID: return "g_objectID";
        case Semantic::g_objectShadow: return "g_objectShadow";
        case Semantic::g_obscure: return "g_obscure";
        case Semantic::g_octaves: return "g_octaves";
        case Semantic::g_offset: return "g_offset";
        case Semantic::g_opacity: return "g_opacity";
        case Semantic::g_options: return "g_options";
        case Semantic::g_options2: return "g_options2";
        case Semantic::g_overCast: return "g_overCast";
        case Semantic::g_particleColor: return "g_particleColor";
        case Semantic::g_pass: return "g_pass";
        case Semantic::g_periodicTexture: return "g_periodicTexture";
        case Semantic::g_phaseShift: return "g_phaseShift";
        case Semantic::g_photoModeEnabled: return "g_photoModeEnabled";
        case Semantic::g_pickColor: return "g_pickColor";
        case Semantic::g_pixelShaderIndex: return "g_pixelShaderIndex";
        case Semantic::g_pixelSize: return "g_pixelSize";
        case Semantic::g_planarMapA: return "g_planarMapA";
        case Semantic::g_planarMapBrightness: return "g_planarMapBrightness";
        case Semantic::g_planarNoiseTexture: return "g_planarNoiseTexture";
        case Semantic::g_polarize: return "g_polarize";
        case Semantic::g_pos: return "g_pos";
        case Semantic::g_postEffect: return "g_postEffect";
        case Semantic::g_power: return "g_power";
        case Semantic::g_prevProjMatrix: return "g_prevProjMatrix";
        case Semantic::g_prevViewMatrix: return "g_prevViewMatrix";
        case Semantic::g_prevViewProjMatrix: return "g_prevViewProjMatrix";
        case Semantic::g_prevVirtualViewMatrix: return "g_prevVirtualViewMatrix";
        case Semantic::g_prevVirtualViewOffset: return "g_prevVirtualViewOffset";
        case Semantic::g_prevWorldMatrix: return "g_prevWorldMatrix";
        case Semantic::g_projMatrix: return "g_projMatrix";
        case Semantic::g_projectorWorldMatrix: return "g_projectorWorldMatrix";
        case Semantic::g_random: return "g_random";
        case Semantic::g_randomSeed: return "g_randomSeed";
        case Semantic::g_range: return "g_range";
        case Semantic::g_redSource: return "g_redSource";
        case Semantic::g_reflection: return "g_reflection";
        case Semantic::g_refraction: return "g_refraction";
        case Semantic::g_renderLevel: return "g_renderLevel";
        case Semantic::g_resPatternTexture: return "g_resPatternTexture";
        case Semantic::g_rippleFreq: return "g_rippleFreq";
        case Semantic::g_rippleSpeed: return "g_rippleSpeed";
        case Semantic::g_rippleX: return "g_rippleX";
        case Semantic::g_rippleY: return "g_rippleY";
        case Semantic::g_rippleZ: return "g_rippleZ";
        case Semantic::g_rough: return "g_rough";
        case Semantic::g_satelliteWorldMatrix: return "g_satelliteWorldMatrix";
        case Semantic::g_scale1_U: return "g_scale1_U";
        case Semantic::g_scale1_V: return "g_scale1_V";
        case Semantic::g_scale2_U: return "g_scale2_U";
        case Semantic::g_scale2_V: return "g_scale2_V";
        case Semantic::g_scale3_U: return "g_scale3_U";
        case Semantic::g_scale3_V: return "g_scale3_V";
        case Semantic::g_scanIntensity: return "g_scanIntensity";
        case Semantic::g_scanSpacing: return "g_scanSpacing";
        case Semantic::g_scanSpeed: return "g_scanSpeed";
        case Semantic::g_scatterLight: return "g_scatterLight";
        case Semantic::g_scatterWashBias: return "g_scatterWashBias";
        case Semantic::g_scattering: return "g_scattering";
        case Semantic::g_screenDirtLookupTex: return "g_screenDirtLookupTex";
        case Semantic::g_screenDirtTex: return "g_screenDirtTex";
        case Semantic::g_scroll: return "g_scroll";
        case Semantic::g_scroll1_U: return "g_scroll1_U";
        case Semantic::g_scroll1_V: return "g_scroll1_V";
        case Semantic::g_scroll2_U: return "g_scroll2_U";
        case Semantic::g_scroll2_V: return "g_scroll2_V";
        case Semantic::g_scroll3_U: return "g_scroll3_U";
        case Semantic::g_scroll3_V: return "g_scroll3_V";
        case Semantic::g_scrollU: return "g_scrollU";
        case Semantic::g_scrollV: return "g_scrollV";
        case Semantic::g_seconds: return "g_seconds";
        case Semantic::g_secondsDelta: return "g_secondsDelta";
        case Semantic::g_shadowCoeffs: return "g_shadowCoeffs";
        case Semantic::g_shadowDepthBias: return "g_shadowDepthBias";
        case Semantic::g_shadowDepthOffset: return "g_shadowDepthOffset";
        case Semantic::g_shadowDepthScale: return "g_shadowDepthScale";
        case Semantic::g_shadowDomain: return "g_shadowDomain";
        case Semantic::g_shadowEnableFastZ: return "g_shadowEnableFastZ";
        case Semantic::g_shadowFilterRadius: return "g_shadowFilterRadius";
        case Semantic::g_shadowFilterSigma: return "g_shadowFilterSigma";
        case Semantic::g_shadowFilterType: return "g_shadowFilterType";
        case Semantic::g_shadowMapCoeffs: return "g_shadowMapCoeffs";
        case Semantic::g_shadowMode: return "g_shadowMode";
        case Semantic::g_shadowOpacity: return "g_shadowOpacity";
        case Semantic::g_shadowResolveOrtho: return "g_shadowResolveOrtho";
        case Semantic::g_shadowSampleMode: return "g_shadowSampleMode";
        case Semantic::g_shadowSaturation: return "g_shadowSaturation";
        case Semantic::g_shadowSlopeScaledDepthBias: return "g_shadowSlopeScaledDepthBias";
        case Semantic::g_shadowTexture: return "g_shadowTexture";
        case Semantic::g_shadowTint: return "g_shadowTint";
        case Semantic::g_shadowViewProj: return "g_shadowViewProj";
        case Semantic::g_shieldsReduceBloom: return "g_shieldsReduceBloom";
        case Semantic::g_silverLiningBrightness: return "g_silverLiningBrightness";
        case Semantic::g_silverLiningThickness: return "g_silverLiningThickness";
        case Semantic::g_skyColor: return "g_skyColor";
        case Semantic::g_skyDepth: return "g_skyDepth";
        case Semantic::g_skyFogShadowsEnable: return "g_skyFogShadowsEnable";
        case Semantic::g_skyLightCoeff0: return "g_skyLightCoeff0";
        case Semantic::g_skyLightCoeff1: return "g_skyLightCoeff1";
        case Semantic::g_skyLightCoeff2: return "g_skyLightCoeff2";
        case Semantic::g_skyLightCoeff3: return "g_skyLightCoeff3";
        case Semantic::g_skyLightCoeff4: return "g_skyLightCoeff4";
        case Semantic::g_skyLightCoeff5: return "g_skyLightCoeff5";
        case Semantic::g_skyLightCoeff6: return "g_skyLightCoeff6";
        case Semantic::g_skyLightCoeff7: return "g_skyLightCoeff7";
        case Semantic::g_skyLightCoeff8: return "g_skyLightCoeff8";
        case Semantic::g_skyLightProbeColor0Texture: return "g_skyLightProbeColor0Texture";
        case Semantic::g_skyLightProbeColor1Texture: return "g_skyLightProbeColor1Texture";
        case Semantic::g_skyLightProbeLerp: return "g_skyLightProbeLerp";
        case Semantic::g_skyLightProbeLoc0: return "g_skyLightProbeLoc0";
        case Semantic::g_skyLightProbeLoc1: return "g_skyLightProbeLoc1";
        case Semantic::g_skyLightProbeNormal0Texture: return "g_skyLightProbeNormal0Texture";
        case Semantic::g_skyLightProbeNormal1Texture: return "g_skyLightProbeNormal1Texture";
        case Semantic::g_skyLightTexture: return "g_skyLightTexture";
        case Semantic::g_skyLightTextureTint: return "g_skyLightTextureTint";
        case Semantic::g_skyProbeColor: return "g_skyProbeColor";
        case Semantic::g_skyRenderMode: return "g_skyRenderMode";
        case Semantic::g_skyStencilMaskEnabled: return "g_skyStencilMaskEnabled";
        case Semantic::g_smoothnessMax: return "g_smoothnessMax";
        case Semantic::g_smoothnessMin: return "g_smoothnessMin";
        case Semantic::g_sourceBlurQuarterUpscaleTexture: return "g_sourceBlurQuarterUpscaleTexture";
        case Semantic::g_sourceDepthTexture: return "g_sourceDepthTexture";
        case Semantic::g_sourceMip: return "g_sourceMip";
        case Semantic::g_sourceTex: return "g_sourceTex";
        case Semantic::g_sourceTexture: return "g_sourceTexture";
        case Semantic::g_sourceTexture0: return "g_sourceTexture0";
        case Semantic::g_sourceTexture1: return "g_sourceTexture1";
        case Semantic::g_sourceTextureCube: return "g_sourceTextureCube";
        case Semantic::g_specGlowTexture: return "g_specGlowTexture";
        case Semantic::g_specMax: return "g_specMax";
        case Semantic::g_specMin: return "g_specMin";
        case Semantic::g_specular: return "g_specular";
        case Semantic::g_splatShadowDepth: return "g_splatShadowDepth";
        case Semantic::g_ssaoTexture: return "g_ssaoTexture";
        case Semantic::g_stealthBlendTexture: return "g_stealthBlendTexture";
        case Semantic::g_step: return "g_step";
        case Semantic::g_stratusHeight: return "g_stratusHeight";
        case Semantic::g_stratusScrollU: return "g_stratusScrollU";
        case Semantic::g_stratusScrollV: return "g_stratusScrollV";
        case Semantic::g_stratusTiling: return "g_stratusTiling";
        case Semantic::g_streakElasticity: return "g_streakElasticity";
        case Semantic::g_strength: return "g_strength";
        case Semantic::g_submerged: return "g_submerged";
        case Semantic::g_sunBiasedHorizonGlowColor: return "g_sunBiasedHorizonGlowColor";
        case Semantic::g_sunBiasedHorizonWidthHeightLatSundis: return "g_sunBiasedHorizonWidthHeightLatSundis";
        case Semantic::g_sunFalloffsStarsBlend: return "g_sunFalloffsStarsBlend";
        case Semantic::g_sunGlare: return "g_sunGlare";
        case Semantic::g_sunGlowColor: return "g_sunGlowColor";
        case Semantic::g_sunGlowMax: return "g_sunGlowMax";
        case Semantic::g_sunLightColor: return "g_sunLightColor";
        case Semantic::g_sunLightDeferredShadowTexture: return "g_sunLightDeferredShadowTexture";
        case Semantic::g_sunLightDir: return "g_sunLightDir";
        case Semantic::g_sunLightDirWorldSpace: return "g_sunLightDirWorldSpace";
        case Semantic::g_sunLightInvWorldViewProj: return "g_sunLightInvWorldViewProj";
        case Semantic::g_sunLightShadowTexture: return "g_sunLightShadowTexture";
        case Semantic::g_sunLightWorldViewProj: return "g_sunLightWorldViewProj";
        case Semantic::g_sunPosition: return "g_sunPosition";
        case Semantic::g_sunShadowCoeffs: return "g_sunShadowCoeffs";
        case Semantic::g_swayBoil: return "g_swayBoil";
        case Semantic::g_swayDir: return "g_swayDir";
        case Semantic::g_swayPrevBoil: return "g_swayPrevBoil";
        case Semantic::g_swayPrevSpeed: return "g_swayPrevSpeed";
        case Semantic::g_swayScale: return "g_swayScale";
        case Semantic::g_swaySmoothing: return "g_swaySmoothing";
        case Semantic::g_swaySpeed: return "g_swaySpeed";
        case Semantic::g_swayStrength: return "g_swayStrength";
        case Semantic::g_swayWavefrontSize: return "g_swayWavefrontSize";
        case Semantic::g_targetColorTexture: return "g_targetColorTexture";
        case Semantic::g_targetRes: return "g_targetRes";
        case Semantic::g_texScale1: return "g_texScale1";
        case Semantic::g_texScale2: return "g_texScale2";
        case Semantic::g_texScale3: return "g_texScale3";
        case Semantic::g_texScrollU1: return "g_texScrollU1";
        case Semantic::g_texScrollU2: return "g_texScrollU2";
        case Semantic::g_texScrollU3: return "g_texScrollU3";
        case Semantic::g_texScrollV1: return "g_texScrollV1";
        case Semantic::g_texScrollV2: return "g_texScrollV2";
        case Semantic::g_texScrollV3: return "g_texScrollV3";
        case Semantic::g_texScrollX1: return "g_texScrollX1";
        case Semantic::g_texScrollX2: return "g_texScrollX2";
        case Semantic::g_texScrollX3: return "g_texScrollX3";
        case Semantic::g_texScrollZ1: return "g_texScrollZ1";
        case Semantic::g_texScrollZ2: return "g_texScrollZ2";
        case Semantic::g_texScrollZ3: return "g_texScrollZ3";
        case Semantic::g_texture: return "g_texture";
        case Semantic::g_textureParams: return "g_textureParams";
        case Semantic::g_thermalColor: return "g_thermalColor";
        case Semantic::g_thermalFade: return "g_thermalFade";
        case Semantic::g_thermalRange: return "g_thermalRange";
        case Semantic::g_thermalWhitePoint: return "g_thermalWhitePoint";
        case Semantic::g_tiling: return "g_tiling";
        case Semantic::g_timeStep: return "g_timeStep";
        case Semantic::g_timer: return "g_timer";
        case Semantic::g_tint: return "g_tint";
        case Semantic::g_tintAlpha: return "g_tintAlpha";
        case Semantic::g_tintColor: return "g_tintColor";
        case Semantic::g_toxicFogDistantColor: return "g_toxicFogDistantColor";
        case Semantic::g_toxicFogLocalColor: return "g_toxicFogLocalColor";
        case Semantic::g_toxicFogTexOffset: return "g_toxicFogTexOffset";
        case Semantic::g_toxicFogTexScale: return "g_toxicFogTexScale";
        case Semantic::g_toxicFogVariation: return "g_toxicFogVariation";
        case Semantic::g_unjitteredProjMatrix: return "g_unjitteredProjMatrix";
        case Semantic::g_unjitteredViewProjMatrix: return "g_unjitteredViewProjMatrix";
        case Semantic::g_useDynamicWaterReflection: return "g_useDynamicWaterReflection";
        case Semantic::g_uvOffsetNScale: return "g_uvOffsetNScale";
        case Semantic::g_v4Color: return "g_v4Color";
        case Semantic::g_vertexAlignment: return "g_vertexAlignment";
        case Semantic::g_viewMatrix: return "g_viewMatrix";
        case Semantic::g_viewProjMatrix: return "g_viewProjMatrix";
        case Semantic::g_virtualCameraOffset: return "g_virtualCameraOffset";
        case Semantic::g_virtualViewMatrix: return "g_virtualViewMatrix";
        case Semantic::g_virtualViewOffset: return "g_virtualViewOffset";
        case Semantic::g_visibility: return "g_visibility";
        case Semantic::g_visibleSkyIntensity: return "g_visibleSkyIntensity";
        case Semantic::g_visualizeLightCoverage: return "g_visualizeLightCoverage";
        case Semantic::g_visualizerForeground: return "g_visualizerForeground";
        case Semantic::g_warpMode: return "g_warpMode";
        case Semantic::g_waterDisplacementPower: return "g_waterDisplacementPower";
        case Semantic::g_waterHeight: return "g_waterHeight";
        case Semantic::g_waterReflectionHeight: return "g_waterReflectionHeight";
        case Semantic::g_waterTessYBias: return "g_waterTessYBias";
        case Semantic::g_waterTiling: return "g_waterTiling";
        case Semantic::g_waterTimeMul: return "g_waterTimeMul";
        case Semantic::g_waveNormalUvScale: return "g_waveNormalUvScale";
        case Semantic::g_waveNumber: return "g_waveNumber";
        case Semantic::g_waveRadius: return "g_waveRadius";
        case Semantic::g_wearAmount: return "g_wearAmount";
        case Semantic::g_weatherEnabled: return "g_weatherEnabled";
        case Semantic::g_weatherQuality: return "g_weatherQuality";
        case Semantic::g_whitePoint: return "g_whitePoint";
        case Semantic::g_wind: return "g_wind";
        case Semantic::g_wireFrameEnabled: return "g_wireFrameEnabled";
        case Semantic::g_world: return "g_world";
        case Semantic::g_worldMatrix: return "g_worldMatrix";
        case Semantic::g_worldViewInverse: return "g_worldViewInverse";
        case Semantic::g_zBufferStructuresTexture: return "g_zBufferStructuresTexture";
        case Semantic::g_zBufferTexture: return "g_zBufferTexture";
        case Semantic::globalConstants_fxh: return "globalConstants_fxh";
        case Semantic::globalLight: return "globalLight";
        case Semantic::globalLight_fx_globals: return "globalLight_fx_globals";
        case Semantic::grass: return "grass";
        case Semantic::heatMask: return "heatMask";
        case Semantic::heightMap: return "heightMap";
        case Semantic::hideFlatness: return "hideFlatness";
        case Semantic::hologram_fxh: return "hologram_fxh";
        case Semantic::index: return "index";
        case Semantic::inverted: return "inverted";
        case Semantic::knN: return "knN";
        case Semantic::knNcloud_fxh: return "knNcloud_fxh";
        case Semantic::knNg_fogNear: return "knNg_fogNear";
        case Semantic::knNg_fogSkyFar: return "knNg_fogSkyFar";
        case Semantic::knNg_fogSkyNear: return "knNg_fogSkyNear";
        case Semantic::knNscreenspace_fxh: return "knNscreenspace_fxh";
        case Semantic::knNwater_fx: return "knNwater_fx";
        case Semantic::light: return "light";
        case Semantic::lightColor: return "lightColor";
        case Semantic::lightDirection: return "lightDirection";
        case Semantic::lightFalloff: return "lightFalloff";
        case Semantic::lightPosition: return "lightPosition";
        case Semantic::lightTypeRSM: return "lightTypeRSM";
        case Semantic::lightingRadius: return "lightingRadius";
        case Semantic::lightsIndexes: return "lightsIndexes";
        case Semantic::litMode: return "litMode";
        case Semantic::lookup: return "lookup";
        case Semantic::m43World: return "m43World";
        case Semantic::m44RefCameraMatrix: return "m44RefCameraMatrix";
        case Semantic::m44World: return "m44World";
        case Semantic::map: return "map";
        case Semantic::mask: return "mask";
        case Semantic::maskTexture: return "maskTexture";
        case Semantic::mixed: return "mixed";
        case Semantic::modelInstanced: return "modelInstanced";
        case Semantic::modelInstanced_fx_globals: return "modelInstanced_fx_globals";
        case Semantic::motionBlur: return "motionBlur";
        case Semantic::motionBlur_fx_globals: return "motionBlur_fx_globals";
        case Semantic::motionFixup: return "motionFixup";
        case Semantic::multiDataTexture: return "multiDataTexture";
        case Semantic::nLodIndex: return "nLodIndex";
        case Semantic::negative: return "negative";
        case Semantic::noise: return "noise";
        case Semantic::noise32x32x32: return "noise32x32x32";
        case Semantic::none: return "none";
        case Semantic::normalTexture: return "normalTexture";
        case Semantic::normalsTexture: return "normalsTexture";
        case Semantic::options: return "options";
        case Semantic::overlay: return "overlay";
        case Semantic::overlayEdge: return "overlayEdge";
        case Semantic::overlayScale: return "overlayScale";
        case Semantic::particle: return "particle";
        case Semantic::particlescommon_fxh: return "particlescommon_fxh";
        case Semantic::periodic: return "periodic";
        case Semantic::perlinNoise3D_Equalized: return "perlinNoise3D_Equalized";
        case Semantic::perlinNoiseTexture: return "perlinNoiseTexture";
        case Semantic::pixel: return "pixel";
        case Semantic::pointLight: return "pointLight";
        case Semantic::pointLight_fx_globals: return "pointLight_fx_globals";
        case Semantic::positions: return "positions";
        case Semantic::post: return "post";
        case Semantic::post_fx_globals: return "post_fx_globals";
        case Semantic::postlowend_fx: return "postlowend_fx";
        case Semantic::primitive3D: return "primitive3D";
        case Semantic::primitive3D_fx_globals: return "primitive3D_fx_globals";
        case Semantic::primitiveBillboard: return "primitiveBillboard";
        case Semantic::primitiveBillboard_fx_globals: return "primitiveBillboard_fx_globals";
        case Semantic::probe: return "probe";
        case Semantic::red: return "red";
        case Semantic::refraction: return "refraction";
        case Semantic::rga: return "rga";
        case Semantic::rgba: return "rgba";
        case Semantic::rigidInstanced_depth: return "rigidInstanced_depth";
        case Semantic::rigid_depth: return "rigid_depth";
        case Semantic::rigid_depth_fx_globals: return "rigid_depth_fx_globals";
        case Semantic::sampleOffsets: return "sampleOffsets";
        case Semantic::sampleOffsets32: return "sampleOffsets32";
        case Semantic::samplerMinAnisotropicMagLinearMipNoneClampMaxAnisotropy4: return "samplerMinAnisotropicMagLinearMipNoneClampMaxAnisotropy4";
        case Semantic::samplerMinAnisotropicMagLinearMipPointClampMaxAnisotropy4: return "samplerMinAnisotropicMagLinearMipPointClampMaxAnisotropy4";
        case Semantic::samplerMinAnisotropicMagLinearMipPointWrapMaxAnisotropy4: return "samplerMinAnisotropicMagLinearMipPointWrapMaxAnisotropy4";
        case Semantic::samplerMinAnisotropicMagMipLinearBorderMaxAnisotropy8: return "samplerMinAnisotropicMagMipLinearBorderMaxAnisotropy8";
        case Semantic::samplerMinAnisotropicMagMipLinearClampMaxAnisotropy4: return "samplerMinAnisotropicMagMipLinearClampMaxAnisotropy4";
        case Semantic::samplerMinAnisotropicMagMipLinearWrapMaxAnisotropy8: return "samplerMinAnisotropicMagMipLinearWrapMaxAnisotropy8";
        case Semantic::samplerMinMagLinearMipNoneClamp: return "samplerMinMagLinearMipNoneClamp";
        case Semantic::samplerMinMagLinearMipNoneClampLess: return "samplerMinMagLinearMipNoneClampLess";
        case Semantic::samplerMinMagLinearMipNoneMirror: return "samplerMinMagLinearMipNoneMirror";
        case Semantic::samplerMinMagLinearMipNoneWrap: return "samplerMinMagLinearMipNoneWrap";
        case Semantic::samplerMinMagLinearMipPointClamp: return "samplerMinMagLinearMipPointClamp";
        case Semantic::samplerMinMagLinearMipPointClampBiasNeg0_5: return "samplerMinMagLinearMipPointClampBiasNeg0_5";
        case Semantic::samplerMinMagLinearMipPointMirrorOnceUClampV: return "samplerMinMagLinearMipPointMirrorOnceUClampV";
        case Semantic::samplerMinMagLinearMipPointWrap: return "samplerMinMagLinearMipPointWrap";
        case Semantic::samplerMinMagLinearMipPointWrapUClampV: return "samplerMinMagLinearMipPointWrapUClampV";
        case Semantic::samplerMinMagMipLinearClamp: return "samplerMinMagMipLinearClamp";
        case Semantic::samplerMinMagMipLinearWrap: return "samplerMinMagMipLinearWrap";
        case Semantic::samplerMinMagMipLinearWrapBiasNeg0_5: return "samplerMinMagMipLinearWrapBiasNeg0_5";
        case Semantic::samplerMinMagMipLinearWrapMaxAnisotropy8: return "samplerMinMagMipLinearWrapMaxAnisotropy8";
        case Semantic::samplerMinMagMipLinearWrapUClampV: return "samplerMinMagMipLinearWrapUClampV";
        case Semantic::samplerMinMagMipPointClamp: return "samplerMinMagMipPointClamp";
        case Semantic::samplerMinMagMipPointWrap: return "samplerMinMagMipPointWrap";
        case Semantic::samplerMinMagMipPointWrapUClampV: return "samplerMinMagMipPointWrapUClampV";
        case Semantic::samplerMinMagPointMipNoneBorder: return "samplerMinMagPointMipNoneBorder";
        case Semantic::samplerMinMagPointMipNoneClamp: return "samplerMinMagPointMipNoneClamp";
        case Semantic::samplerMinMagPointMipNoneMirror: return "samplerMinMagPointMipNoneMirror";
        case Semantic::samplerMinMagPointMipNoneWrap: return "samplerMinMagPointMipNoneWrap";
        case Semantic::scale: return "scale";
        case Semantic::scattering: return "scattering";
        case Semantic::screenspace_fxh: return "screenspace_fxh";
        case Semantic::shader: return "shader";
        case Semantic::shadowing_fxh: return "shadowing_fxh";
        case Semantic::should: return "should";
        case Semantic::sided: return "sided";
        case Semantic::simpleemissive_fx: return "simpleemissive_fx";
        case Semantic::skyLerp: return "skyLerp";
        case Semantic::skyLerp2: return "skyLerp2";
        case Semantic::skyLerp3: return "skyLerp3";
        case Semantic::skyOffset: return "skyOffset";
        case Semantic::skyOffset2: return "skyOffset2";
        case Semantic::skyOffset3: return "skyOffset3";
        case Semantic::skyOffset4: return "skyOffset4";
        case Semantic::skyStretch: return "skyStretch";
        case Semantic::skyStretch2: return "skyStretch2";
        case Semantic::skyStretch3: return "skyStretch3";
        case Semantic::skyStretch4: return "skyStretch4";
        case Semantic::skyTexture: return "skyTexture";
        case Semantic::skyTexture2: return "skyTexture2";
        case Semantic::skyTexture3: return "skyTexture3";
        case Semantic::skyTexture4: return "skyTexture4";
        case Semantic::skyTextureSkyDomeUniqueName: return "skyTextureSkyDomeUniqueName";
        case Semantic::sky_fx: return "sky_fx";
        case Semantic::sky_fx_globals: return "sky_fx_globals";
        case Semantic::skycube_fx: return "skycube_fx";
        case Semantic::skydome_fx: return "skydome_fx";
        case Semantic::skyhorizon_fx: return "skyhorizon_fx";
        case Semantic::slop: return "slop";
        case Semantic::smartBlur: return "smartBlur";
        case Semantic::smartBlur_fx_globals: return "smartBlur_fx_globals";
        case Semantic::softness: return "softness";
        case Semantic::space: return "space";
        case Semantic::spec: return "spec";
        case Semantic::specMap: return "specMap";
        case Semantic::specMinMax1: return "specMinMax1";
        case Semantic::specMinMax2: return "specMinMax2";
        case Semantic::specMinMax3: return "specMinMax3";
        case Semantic::specMinMax4: return "specMinMax4";
        case Semantic::specMinMax5: return "specMinMax5";
        case Semantic::specTexture: return "specTexture";
        case Semantic::specTexture1: return "specTexture1";
        case Semantic::specTexture2: return "specTexture2";
        case Semantic::specTexture3: return "specTexture3";
        case Semantic::specTexture4: return "specTexture4";
        case Semantic::specTexture5: return "specTexture5";
        case Semantic::speed: return "speed";
        case Semantic::spriteParticle: return "spriteParticle";
        case Semantic::spriteParticle_fx_globals: return "spriteParticle_fx_globals";
        case Semantic::square: return "square";
        case Semantic::srcBlend: return "srcBlend";
        case Semantic::ssaoSourceDepthTexture: return "ssaoSourceDepthTexture";
        case Semantic::stepping: return "stepping";
        case Semantic::streakParticle: return "streakParticle";
        case Semantic::streakParticle_fx_globals: return "streakParticle_fx_globals";
        case Semantic::structureblend_fx: return "structureblend_fx";
        case Semantic::sunlight_fxh: return "sunlight_fxh";
        case Semantic::swayInstancedDepth_VS3_PS3: return "swayInstancedDepth_VS3_PS3";
        case Semantic::swayInstanced_depth: return "swayInstanced_depth";
        case Semantic::swayInstanced_depth_fx_globals: return "swayInstanced_depth_fx_globals";
        case Semantic::sway_depth: return "sway_depth";
        case Semantic::sway_depth_fx_globals: return "sway_depth_fx_globals";
        case Semantic::targetDepthTexture: return "targetDepthTexture";
        case Semantic::terrain_audit: return "terrain_audit";
        case Semantic::terrain_audit_fx_globals: return "terrain_audit_fx_globals";
        case Semantic::terrain_depth: return "terrain_depth";
        case Semantic::terrain_fxh: return "terrain_fxh";
        case Semantic::terrain_rsm: return "terrain_rsm";
        case Semantic::terrain_rsm_fx_globals: return "terrain_rsm_fx_globals";
        case Semantic::texA: return "texA";
        case Semantic::texB: return "texB";
        case Semantic::texProj: return "texProj";
        case Semantic::texture: return "texture";
        case Semantic::textureMap: return "textureMap";
        case Semantic::threshold: return "threshold";
        case Semantic::threshold_fx_globals: return "threshold_fx_globals";
        case Semantic::tiled: return "tiled";
        case Semantic::tiling: return "tiling";
        case Semantic::tint: return "tint";
        case Semantic::tonemap: return "tonemap";
        case Semantic::tonemap_fx_globals: return "tonemap_fx_globals";
        case Semantic::transform: return "transform";
        case Semantic::translation: return "translation";
        case Semantic::transmittance: return "transmittance";
        case Semantic::transparency: return "transparency";
        case Semantic::tread: return "tread";
        case Semantic::usually: return "usually";
        case Semantic::uvOffset: return "uvOffset";
        case Semantic::uvScale: return "uvScale";
        case Semantic::v2Random: return "v2Random";
        case Semantic::v3Horizontal: return "v3Horizontal";
        case Semantic::v3Vertical: return "v3Vertical";
        case Semantic::v4Color: return "v4Color";
        case Semantic::v4ReplicationMask: return "v4ReplicationMask";
        case Semantic::v4Tint: return "v4Tint";
        case Semantic::vehicle_fx: return "vehicle_fx";
        case Semantic::view: return "view";
        case Semantic::water: return "water";
        case Semantic::water2013_fx: return "water2013_fx";
        case Semantic::waterMinimap: return "waterMinimap";
        case Semantic::waterMinimap_fx_globals: return "waterMinimap_fx_globals";
        case Semantic::water_fx: return "water_fx";
        case Semantic::water_fx_globals: return "water_fx_globals";
        case Semantic::wave: return "wave";
        case Semantic::whatever: return "whatever";
        case Semantic::when: return "when";
        case Semantic::with: return "with";
        case Semantic::world: return "world";
        case Semantic::worldNormalMap: return "worldNormalMap";
        case Semantic::writeAlpha: return "writeAlpha";
        case Semantic::writeAlphaMode: return "writeAlphaMode";
        case Semantic::UNKNOWN: return "UNKNOWN";
        default: return "Unknown! Got semantic (" + std::to_string((uint32_t)semantic) + ")";
    }
}